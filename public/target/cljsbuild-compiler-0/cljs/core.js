// Compiled by ClojureScript 0.0-2816 {:elide-asserts true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__17611__delegate = function (args){
return console.log.apply(console,(function (){var G__17610 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17610) : cljs.core.into_array.call(null,G__17610));
})());
};
var G__17611 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17612__i = 0, G__17612__a = new Array(arguments.length -  0);
while (G__17612__i < G__17612__a.length) {G__17612__a[G__17612__i] = arguments[G__17612__i + 0]; ++G__17612__i;}
  args = new cljs.core.IndexedSeq(G__17612__a,0);
} 
return G__17611__delegate.call(this,args);};
G__17611.cljs$lang$maxFixedArity = 0;
G__17611.cljs$lang$applyTo = (function (arglist__17613){
var args = cljs.core.seq(arglist__17613);
return G__17611__delegate(args);
});
G__17611.cljs$core$IFn$_invoke$arity$variadic = G__17611__delegate;
return G__17611;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__17615 = x;
return goog.isString(G__17615);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__17617 = x__$1;
return goog.typeOf(G__17617);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3794__auto__ = ty;
if(cljs.core.truth_(and__3794__auto__)){
return ty.cljs$lang$type;
} else {
return and__3794__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__17619 = obj;
return goog.typeOf(G__17619);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__17621 = Symbol;
return goog.typeOf(G__17621);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4693__auto___17623 = len;
var i_17624 = (0);
while(true){
if((i_17624 < n__4693__auto___17623)){
(new_arr[i_17624] = (arr[i_17624]));

var G__17625 = (i_17624 + (1));
i_17624 = G__17625;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__17626 = (i + (1));
i = G__17626;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__17635__delegate = function (array,i,idxs){
var G__17632 = aget;
var G__17633 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__17634 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17632,G__17633,G__17634) : cljs.core.apply.call(null,G__17632,G__17633,G__17634));
};
var G__17635 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__17636__i = 0, G__17636__a = new Array(arguments.length -  2);
while (G__17636__i < G__17636__a.length) {G__17636__a[G__17636__i] = arguments[G__17636__i + 2]; ++G__17636__i;}
  idxs = new cljs.core.IndexedSeq(G__17636__a,0);
} 
return G__17635__delegate.call(this,array,i,idxs);};
G__17635.cljs$lang$maxFixedArity = 2;
G__17635.cljs$lang$applyTo = (function (arglist__17637){
var array = cljs.core.first(arglist__17637);
arglist__17637 = cljs.core.next(arglist__17637);
var i = cljs.core.first(arglist__17637);
var idxs = cljs.core.rest(arglist__17637);
return G__17635__delegate(array,i,idxs);
});
G__17635.cljs$core$IFn$_invoke$arity$variadic = G__17635__delegate;
return G__17635;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__17638 = null;
if (arguments.length > 2) {
var G__17639__i = 0, G__17639__a = new Array(arguments.length -  2);
while (G__17639__i < G__17639__a.length) {G__17639__a[G__17639__i] = arguments[G__17639__i + 2]; ++G__17639__i;}
G__17638 = new cljs.core.IndexedSeq(G__17639__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__17638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__17648__delegate = function (array,idx,idx2,idxv){
var G__17644 = aset;
var G__17645 = (array[idx]);
var G__17646 = idx2;
var G__17647 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17644,G__17645,G__17646,G__17647) : cljs.core.apply.call(null,G__17644,G__17645,G__17646,G__17647));
};
var G__17648 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__17649__i = 0, G__17649__a = new Array(arguments.length -  3);
while (G__17649__i < G__17649__a.length) {G__17649__a[G__17649__i] = arguments[G__17649__i + 3]; ++G__17649__i;}
  idxv = new cljs.core.IndexedSeq(G__17649__a,0);
} 
return G__17648__delegate.call(this,array,idx,idx2,idxv);};
G__17648.cljs$lang$maxFixedArity = 3;
G__17648.cljs$lang$applyTo = (function (arglist__17650){
var array = cljs.core.first(arglist__17650);
arglist__17650 = cljs.core.next(arglist__17650);
var idx = cljs.core.first(arglist__17650);
arglist__17650 = cljs.core.next(arglist__17650);
var idx2 = cljs.core.first(arglist__17650);
var idxv = cljs.core.rest(arglist__17650);
return G__17648__delegate(array,idx,idx2,idxv);
});
G__17648.cljs$core$IFn$_invoke$arity$variadic = G__17648__delegate;
return G__17648;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__17651 = null;
if (arguments.length > 3) {
var G__17652__i = 0, G__17652__a = new Array(arguments.length -  3);
while (G__17652__i < G__17652__a.length) {G__17652__a[G__17652__i] = arguments[G__17652__i + 3]; ++G__17652__i;}
G__17651 = new cljs.core.IndexedSeq(G__17652__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__17651);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__17658 = (function (a,x){
a.push(x);

return a;
});
var G__17659 = [];
var G__17660 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17658,G__17659,G__17660) : cljs.core.reduce.call(null,G__17658,G__17659,G__17660));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__17661__i = 0, G__17661__a = new Array(arguments.length -  2);
while (G__17661__i < G__17661__a.length) {G__17661__a[G__17661__i] = arguments[G__17661__i + 2]; ++G__17661__i;}
  args = new cljs.core.IndexedSeq(G__17661__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__17662){
var obj = cljs.core.first(arglist__17662);
arglist__17662 = cljs.core.next(arglist__17662);
var s = cljs.core.first(arglist__17662);
var args = cljs.core.rest(arglist__17662);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj17664 = {};
return obj17664;
})();


cljs.core.IFn = (function (){var obj17666 = {};
return obj17666;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17712 = x__4450__auto__;
return goog.typeOf(G__17712);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17714 = x__4450__auto__;
return goog.typeOf(G__17714);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17716 = x__4450__auto__;
return goog.typeOf(G__17716);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17718 = x__4450__auto__;
return goog.typeOf(G__17718);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17720 = x__4450__auto__;
return goog.typeOf(G__17720);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17722 = x__4450__auto__;
return goog.typeOf(G__17722);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17724 = x__4450__auto__;
return goog.typeOf(G__17724);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17726 = x__4450__auto__;
return goog.typeOf(G__17726);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17728 = x__4450__auto__;
return goog.typeOf(G__17728);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17730 = x__4450__auto__;
return goog.typeOf(G__17730);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17732 = x__4450__auto__;
return goog.typeOf(G__17732);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17734 = x__4450__auto__;
return goog.typeOf(G__17734);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17736 = x__4450__auto__;
return goog.typeOf(G__17736);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17738 = x__4450__auto__;
return goog.typeOf(G__17738);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17740 = x__4450__auto__;
return goog.typeOf(G__17740);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17742 = x__4450__auto__;
return goog.typeOf(G__17742);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17744 = x__4450__auto__;
return goog.typeOf(G__17744);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17746 = x__4450__auto__;
return goog.typeOf(G__17746);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17748 = x__4450__auto__;
return goog.typeOf(G__17748);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17750 = x__4450__auto__;
return goog.typeOf(G__17750);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17752 = x__4450__auto__;
return goog.typeOf(G__17752);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._invoke[(function (){var G__17754 = x__4450__auto__;
return goog.typeOf(G__17754);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._invoke["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj17756 = {};
return obj17756;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3794__auto__ = value;
if(and__3794__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3794__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4450__auto__ = (((value == null))?null:value);
return (function (){var or__3806__auto__ = (cljs.core._clone[(function (){var G__17760 = x__4450__auto__;
return goog.typeOf(G__17760);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._clone["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj17762 = {};
return obj17762;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._count[(function (){var G__17766 = x__4450__auto__;
return goog.typeOf(G__17766);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._count["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj17768 = {};
return obj17768;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._empty[(function (){var G__17772 = x__4450__auto__;
return goog.typeOf(G__17772);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._empty["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj17774 = {};
return obj17774;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._conj[(function (){var G__17778 = x__4450__auto__;
return goog.typeOf(G__17778);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._conj["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj17780 = {};
return obj17780;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._nth[(function (){var G__17786 = x__4450__auto__;
return goog.typeOf(G__17786);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._nth["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._nth[(function (){var G__17788 = x__4450__auto__;
return goog.typeOf(G__17788);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._nth["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj17790 = {};
return obj17790;
})();


cljs.core.ISeq = (function (){var obj17792 = {};
return obj17792;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._first[(function (){var G__17796 = x__4450__auto__;
return goog.typeOf(G__17796);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._first["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._rest[(function (){var G__17800 = x__4450__auto__;
return goog.typeOf(G__17800);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._rest["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj17802 = {};
return obj17802;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._next[(function (){var G__17806 = x__4450__auto__;
return goog.typeOf(G__17806);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._next["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj17808 = {};
return obj17808;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._lookup[(function (){var G__17814 = x__4450__auto__;
return goog.typeOf(G__17814);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._lookup["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._lookup[(function (){var G__17816 = x__4450__auto__;
return goog.typeOf(G__17816);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._lookup["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj17818 = {};
return obj17818;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__17822 = x__4450__auto__;
return goog.typeOf(G__17822);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._assoc[(function (){var G__17826 = x__4450__auto__;
return goog.typeOf(G__17826);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._assoc["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj17828 = {};
return obj17828;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._dissoc[(function (){var G__17832 = x__4450__auto__;
return goog.typeOf(G__17832);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj17834 = {};
return obj17834;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._key[(function (){var G__17838 = x__4450__auto__;
return goog.typeOf(G__17838);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._key["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._val[(function (){var G__17842 = x__4450__auto__;
return goog.typeOf(G__17842);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._val["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj17844 = {};
return obj17844;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._disjoin[(function (){var G__17848 = x__4450__auto__;
return goog.typeOf(G__17848);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj17850 = {};
return obj17850;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._peek[(function (){var G__17854 = x__4450__auto__;
return goog.typeOf(G__17854);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._peek["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._pop[(function (){var G__17858 = x__4450__auto__;
return goog.typeOf(G__17858);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._pop["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj17860 = {};
return obj17860;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._assoc_n[(function (){var G__17864 = x__4450__auto__;
return goog.typeOf(G__17864);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj17866 = {};
return obj17866;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._deref[(function (){var G__17870 = x__4450__auto__;
return goog.typeOf(G__17870);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._deref["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj17872 = {};
return obj17872;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._deref_with_timeout[(function (){var G__17876 = x__4450__auto__;
return goog.typeOf(G__17876);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj17878 = {};
return obj17878;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._meta[(function (){var G__17882 = x__4450__auto__;
return goog.typeOf(G__17882);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._meta["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj17884 = {};
return obj17884;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._with_meta[(function (){var G__17888 = x__4450__auto__;
return goog.typeOf(G__17888);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj17890 = {};
return obj17890;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._reduce[(function (){var G__17896 = x__4450__auto__;
return goog.typeOf(G__17896);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._reduce["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._reduce[(function (){var G__17898 = x__4450__auto__;
return goog.typeOf(G__17898);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._reduce["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj17900 = {};
return obj17900;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._kv_reduce[(function (){var G__17904 = x__4450__auto__;
return goog.typeOf(G__17904);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj17906 = {};
return obj17906;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._equiv[(function (){var G__17910 = x__4450__auto__;
return goog.typeOf(G__17910);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._equiv["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj17912 = {};
return obj17912;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._hash[(function (){var G__17916 = x__4450__auto__;
return goog.typeOf(G__17916);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._hash["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj17918 = {};
return obj17918;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._seq[(function (){var G__17922 = x__4450__auto__;
return goog.typeOf(G__17922);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._seq["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj17924 = {};
return obj17924;
})();


cljs.core.IList = (function (){var obj17926 = {};
return obj17926;
})();


cljs.core.IRecord = (function (){var obj17928 = {};
return obj17928;
})();


cljs.core.IReversible = (function (){var obj17930 = {};
return obj17930;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._rseq[(function (){var G__17934 = x__4450__auto__;
return goog.typeOf(G__17934);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._rseq["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj17936 = {};
return obj17936;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._sorted_seq[(function (){var G__17940 = x__4450__auto__;
return goog.typeOf(G__17940);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._sorted_seq_from[(function (){var G__17944 = x__4450__auto__;
return goog.typeOf(G__17944);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._entry_key[(function (){var G__17948 = x__4450__auto__;
return goog.typeOf(G__17948);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._comparator[(function (){var G__17952 = x__4450__auto__;
return goog.typeOf(G__17952);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._comparator["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj17954 = {};
return obj17954;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3794__auto__ = writer;
if(and__3794__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3794__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4450__auto__ = (((writer == null))?null:writer);
return (function (){var or__3806__auto__ = (cljs.core._write[(function (){var G__17958 = x__4450__auto__;
return goog.typeOf(G__17958);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._write["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3794__auto__ = writer;
if(and__3794__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3794__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4450__auto__ = (((writer == null))?null:writer);
return (function (){var or__3806__auto__ = (cljs.core._flush[(function (){var G__17962 = x__4450__auto__;
return goog.typeOf(G__17962);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._flush["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj17964 = {};
return obj17964;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._pr_writer[(function (){var G__17968 = x__4450__auto__;
return goog.typeOf(G__17968);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj17970 = {};
return obj17970;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3794__auto__ = d;
if(and__3794__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3794__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4450__auto__ = (((d == null))?null:d);
return (function (){var or__3806__auto__ = (cljs.core._realized_QMARK_[(function (){var G__17974 = x__4450__auto__;
return goog.typeOf(G__17974);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj17976 = {};
return obj17976;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._notify_watches[(function (){var G__17980 = x__4450__auto__;
return goog.typeOf(G__17980);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._add_watch[(function (){var G__17984 = x__4450__auto__;
return goog.typeOf(G__17984);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3794__auto__ = this$;
if(and__3794__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3794__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4450__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3806__auto__ = (cljs.core._remove_watch[(function (){var G__17988 = x__4450__auto__;
return goog.typeOf(G__17988);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj17990 = {};
return obj17990;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._as_transient[(function (){var G__17994 = x__4450__auto__;
return goog.typeOf(G__17994);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj17996 = {};
return obj17996;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._conj_BANG_[(function (){var G__18000 = x__4450__auto__;
return goog.typeOf(G__18000);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._persistent_BANG_[(function (){var G__18004 = x__4450__auto__;
return goog.typeOf(G__18004);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj18006 = {};
return obj18006;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._assoc_BANG_[(function (){var G__18010 = x__4450__auto__;
return goog.typeOf(G__18010);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj18012 = {};
return obj18012;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__18016 = x__4450__auto__;
return goog.typeOf(G__18016);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj18018 = {};
return obj18018;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__18022 = x__4450__auto__;
return goog.typeOf(G__18022);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._pop_BANG_[(function (){var G__18026 = x__4450__auto__;
return goog.typeOf(G__18026);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj18028 = {};
return obj18028;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3794__auto__ = tcoll;
if(and__3794__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4450__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3806__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__18032 = x__4450__auto__;
return goog.typeOf(G__18032);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj18034 = {};
return obj18034;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3794__auto__ = x;
if(and__3794__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3794__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4450__auto__ = (((x == null))?null:x);
return (function (){var or__3806__auto__ = (cljs.core._compare[(function (){var G__18038 = x__4450__auto__;
return goog.typeOf(G__18038);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._compare["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj18040 = {};
return obj18040;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._drop_first[(function (){var G__18044 = x__4450__auto__;
return goog.typeOf(G__18044);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj18046 = {};
return obj18046;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._chunked_first[(function (){var G__18050 = x__4450__auto__;
return goog.typeOf(G__18050);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._chunked_rest[(function (){var G__18054 = x__4450__auto__;
return goog.typeOf(G__18054);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj18056 = {};
return obj18056;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._chunked_next[(function (){var G__18060 = x__4450__auto__;
return goog.typeOf(G__18060);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj18062 = {};
return obj18062;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3794__auto__ = x;
if(and__3794__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3794__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4450__auto__ = (((x == null))?null:x);
return (function (){var or__3806__auto__ = (cljs.core._name[(function (){var G__18066 = x__4450__auto__;
return goog.typeOf(G__18066);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._name["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3794__auto__ = x;
if(and__3794__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3794__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4450__auto__ = (((x == null))?null:x);
return (function (){var or__3806__auto__ = (cljs.core._namespace[(function (){var G__18070 = x__4450__auto__;
return goog.typeOf(G__18070);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._namespace["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj18072 = {};
return obj18072;
})();


cljs.core.IReset = (function (){var obj18074 = {};
return obj18074;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._reset_BANG_[(function (){var G__18078 = x__4450__auto__;
return goog.typeOf(G__18078);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj18080 = {};
return obj18080;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._swap_BANG_[(function (){var G__18090 = x__4450__auto__;
return goog.typeOf(G__18090);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._swap_BANG_[(function (){var G__18092 = x__4450__auto__;
return goog.typeOf(G__18092);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._swap_BANG_[(function (){var G__18094 = x__4450__auto__;
return goog.typeOf(G__18094);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._swap_BANG_[(function (){var G__18096 = x__4450__auto__;
return goog.typeOf(G__18096);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18098 = {};
return obj18098;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3794__auto__ = o;
if(and__3794__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3794__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4450__auto__ = (((o == null))?null:o);
return (function (){var or__3806__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18102 = x__4450__auto__;
return goog.typeOf(G__18102);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18104 = {};
return obj18104;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3794__auto__ = coll;
if(and__3794__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3794__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4450__auto__ = (((coll == null))?null:coll);
return (function (){var or__3806__auto__ = (cljs.core._iterator[(function (){var G__18108 = x__4450__auto__;
return goog.typeOf(G__18108);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._iterator["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18111 = (4294967295);
var G__18112 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18111,G__18112) : Math.imul.call(null,G__18111,G__18112));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18115 = a;
var G__18116 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18115,G__18116) : Math.imul.call(null,G__18115,G__18116));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18117 = (i + (2));
var G__18118 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18117;
h1 = G__18118;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18120 = {};
return obj18120;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18121 = (i + (1));
var G__18122 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18121;
hash = G__18122;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18126 = {};
return obj18126;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18129 = o;
if(G__18129){
var bit__4480__auto__ = (G__18129.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4480__auto__) || (G__18129.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18130 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18130) : Math.floor.call(null,G__18130));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3794__auto__ = cljs.core.not(a.ns);
if(and__3794__auto__){
return b.ns;
} else {
return and__3794__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18137 = a.ns;
var G__18138 = b.ns;
return goog.array.defaultCompare(G__18137,G__18138);
})();
if(((0) === nsc)){
var G__18139 = a.name;
var G__18140 = b.name;
return goog.array.defaultCompare(G__18139,G__18140);
} else {
return nsc;
}
}
} else {
var G__18141 = a.name;
var G__18142 = b.name;
return goog.array.defaultCompare(G__18141,G__18142);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4227__auto__ = self__._hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18144 = null;
var G__18144__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18144__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18144 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18144__2.call(this,self__,coll);
case 3:
return G__18144__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18144.cljs$core$IFn$_invoke$arity$2 = G__18144__2;
G__18144.cljs$core$IFn$_invoke$arity$3 = G__18144__3;
return G__18144;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18143){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18143)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__18192 = null;
var G__18192__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__18192__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__18192__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__18192__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__18192__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__18192__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__18192__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__18192__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__18192__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__18192__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__18192__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__18192__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__18192__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__18192__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__18192__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__18192__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__18192__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__18192__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__18192__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__18192__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__18192__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__18192__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18148 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18149 = a;
var G__18150 = b;
var G__18151 = c;
var G__18152 = d;
var G__18153 = e;
var G__18154 = f;
var G__18155 = g;
var G__18156 = h;
var G__18157 = i;
var G__18158 = j;
var G__18159 = k;
var G__18160 = l;
var G__18161 = m;
var G__18162 = n;
var G__18163 = o;
var G__18164 = p;
var G__18165 = q;
var G__18166 = r;
var G__18167 = s;
var G__18168 = t;
var G__18169 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18148,G__18149,G__18150,G__18151,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169) : cljs.core.apply.call(null,G__18148,G__18149,G__18150,G__18151,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169));
});
G__18192 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18192__1.call(this,self__);
case 2:
return G__18192__2.call(this,self__,a);
case 3:
return G__18192__3.call(this,self__,a,b);
case 4:
return G__18192__4.call(this,self__,a,b,c);
case 5:
return G__18192__5.call(this,self__,a,b,c,d);
case 6:
return G__18192__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18192__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18192__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18192__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18192__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18192__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18192__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18192__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18192__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18192__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18192__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18192__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18192__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18192__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18192__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18192__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18192__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18192.cljs$core$IFn$_invoke$arity$1 = G__18192__1;
G__18192.cljs$core$IFn$_invoke$arity$2 = G__18192__2;
G__18192.cljs$core$IFn$_invoke$arity$3 = G__18192__3;
G__18192.cljs$core$IFn$_invoke$arity$4 = G__18192__4;
G__18192.cljs$core$IFn$_invoke$arity$5 = G__18192__5;
G__18192.cljs$core$IFn$_invoke$arity$6 = G__18192__6;
G__18192.cljs$core$IFn$_invoke$arity$7 = G__18192__7;
G__18192.cljs$core$IFn$_invoke$arity$8 = G__18192__8;
G__18192.cljs$core$IFn$_invoke$arity$9 = G__18192__9;
G__18192.cljs$core$IFn$_invoke$arity$10 = G__18192__10;
G__18192.cljs$core$IFn$_invoke$arity$11 = G__18192__11;
G__18192.cljs$core$IFn$_invoke$arity$12 = G__18192__12;
G__18192.cljs$core$IFn$_invoke$arity$13 = G__18192__13;
G__18192.cljs$core$IFn$_invoke$arity$14 = G__18192__14;
G__18192.cljs$core$IFn$_invoke$arity$15 = G__18192__15;
G__18192.cljs$core$IFn$_invoke$arity$16 = G__18192__16;
G__18192.cljs$core$IFn$_invoke$arity$17 = G__18192__17;
G__18192.cljs$core$IFn$_invoke$arity$18 = G__18192__18;
G__18192.cljs$core$IFn$_invoke$arity$19 = G__18192__19;
G__18192.cljs$core$IFn$_invoke$arity$20 = G__18192__20;
G__18192.cljs$core$IFn$_invoke$arity$21 = G__18192__21;
G__18192.cljs$core$IFn$_invoke$arity$22 = G__18192__22;
return G__18192;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args18147){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18147)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18170 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18171 = a;
var G__18172 = b;
var G__18173 = c;
var G__18174 = d;
var G__18175 = e;
var G__18176 = f;
var G__18177 = g;
var G__18178 = h;
var G__18179 = i;
var G__18180 = j;
var G__18181 = k;
var G__18182 = l;
var G__18183 = m;
var G__18184 = n;
var G__18185 = o;
var G__18186 = p;
var G__18187 = q;
var G__18188 = r;
var G__18189 = s;
var G__18190 = t;
var G__18191 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18170,G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186,G__18187,G__18188,G__18189,G__18190,G__18191) : cljs.core.apply.call(null,G__18170,G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186,G__18187,G__18188,G__18189,G__18190,G__18191));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__18194 = x;
if(G__18194){
var bit__4487__auto__ = null;
if(cljs.core.truth_((function (){var or__3806__auto__ = bit__4487__auto__;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return G__18194.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__18194.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18194);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18194);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__18196 = value;
if(G__18196){
var bit__4487__auto__ = (G__18196.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4487__auto__) || (G__18196.cljs$core$ICloneable$)){
return true;
} else {
if((!G__18196.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18196);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18196);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18198 = coll;
if(G__18198){
var bit__4480__auto__ = (G__18198.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4480__auto__) || (G__18198.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18200 = coll;
if(G__18200){
var bit__4480__auto__ = (G__18200.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4480__auto__) || (G__18200.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__18202 = coll;
if(G__18202){
var bit__4480__auto__ = (G__18202.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4480__auto__) || (G__18202.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18204 = coll;
if(G__18204){
var bit__4480__auto__ = (G__18204.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4480__auto__) || (G__18204.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__18209__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18210 = y;
var G__18211 = cljs.core.first(more);
var G__18212 = cljs.core.next(more);
x = G__18210;
y = G__18211;
more = G__18212;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18213__i = 0, G__18213__a = new Array(arguments.length -  2);
while (G__18213__i < G__18213__a.length) {G__18213__a[G__18213__i] = arguments[G__18213__i + 2]; ++G__18213__i;}
  more = new cljs.core.IndexedSeq(G__18213__a,0);
} 
return G__18209__delegate.call(this,x,y,more);};
G__18209.cljs$lang$maxFixedArity = 2;
G__18209.cljs$lang$applyTo = (function (arglist__18214){
var x = cljs.core.first(arglist__18214);
arglist__18214 = cljs.core.next(arglist__18214);
var y = cljs.core.first(arglist__18214);
var more = cljs.core.rest(arglist__18214);
return G__18209__delegate(x,y,more);
});
G__18209.cljs$core$IFn$_invoke$arity$variadic = G__18209__delegate;
return G__18209;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__18215 = null;
if (arguments.length > 2) {
var G__18216__i = 0, G__18216__a = new Array(arguments.length -  2);
while (G__18216__i < G__18216__a.length) {G__18216__a[G__18216__i] = arguments[G__18216__i + 2]; ++G__18216__i;}
G__18215 = new cljs.core.IndexedSeq(G__18216__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__18217 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18217) : cljs.core.es6_iterator_seq.call(null,G__18217));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18218 = (n + (1));
var G__18219 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18220 = cljs.core.next(coll__$1);
n = G__18218;
hash_code = G__18219;
coll__$1 = G__18220;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18221 = (n + (1));
var G__18222 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18223 = cljs.core.next(coll__$1);
n = G__18221;
hash_code = G__18222;
coll__$1 = G__18223;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__18224 = o;
return goog.getUid(G__18224);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__18226 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18226) : cljs.core.deref.call(null,G__18226));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18233 = val;
var G__18234 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18233,G__18234) : f.call(null,G__18233,G__18234));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18239 = nval;
var G__18240 = (n + (1));
val = G__18239;
n = G__18240;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18235 = val__$1;
var G__18236 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18235,G__18236) : f.call(null,G__18235,G__18236));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18241 = nval;
var G__18242 = (n + (1));
val__$1 = G__18241;
n = G__18242;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18237 = val__$1;
var G__18238 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18237,G__18238) : f.call(null,G__18237,G__18238));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18243 = nval;
var G__18244 = (n + (1));
val__$1 = G__18243;
n = G__18244;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18251 = val;
var G__18252 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18251,G__18252) : f.call(null,G__18251,G__18252));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18257 = nval;
var G__18258 = (n + (1));
val = G__18257;
n = G__18258;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18253 = val__$1;
var G__18254 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18253,G__18254) : f.call(null,G__18253,G__18254));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18259 = nval;
var G__18260 = (n + (1));
val__$1 = G__18259;
n = G__18260;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18255 = val__$1;
var G__18256 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18255,G__18256) : f.call(null,G__18255,G__18256));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18261 = nval;
var G__18262 = (n + (1));
val__$1 = G__18261;
n = G__18262;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__18264 = x;
if(G__18264){
var bit__4487__auto__ = (G__18264.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4487__auto__) || (G__18264.cljs$core$ICounted$)){
return true;
} else {
if((!G__18264.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18264);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18264);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__18266 = x;
if(G__18266){
var bit__4487__auto__ = (G__18266.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4487__auto__) || (G__18266.cljs$core$IIndexed$)){
return true;
} else {
if((!G__18266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18266);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18267 = coll__$1;
var G__18268 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18267,G__18268) : cljs.core.equiv_sequential.call(null,G__18267,G__18268));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18269 = o;
var G__18270 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18269,G__18270) : cljs.core.cons.call(null,G__18269,G__18270));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18273 = coll__$1;
var G__18274 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18273,G__18274) : cljs.core.equiv_sequential.call(null,G__18273,G__18274));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18275 = cljs.core.List.EMPTY;
var G__18276 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18275,G__18276) : cljs.core.with_meta.call(null,G__18275,G__18276));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18277 = f;
var G__18278 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18277,G__18278) : cljs.core.seq_reduce.call(null,G__18277,G__18278));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18279 = f;
var G__18280 = start;
var G__18281 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18279,G__18280,G__18281) : cljs.core.seq_reduce.call(null,G__18279,G__18280,G__18281));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18282 = o;
var G__18283 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18282,G__18283) : cljs.core.cons.call(null,G__18282,G__18283));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18284 = sn;
s = G__18284;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18289__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18290 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18291 = cljs.core.first(xs);
var G__18292 = cljs.core.next(xs);
coll = G__18290;
x = G__18291;
xs = G__18292;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18289 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18293__i = 0, G__18293__a = new Array(arguments.length -  2);
while (G__18293__i < G__18293__a.length) {G__18293__a[G__18293__i] = arguments[G__18293__i + 2]; ++G__18293__i;}
  xs = new cljs.core.IndexedSeq(G__18293__a,0);
} 
return G__18289__delegate.call(this,coll,x,xs);};
G__18289.cljs$lang$maxFixedArity = 2;
G__18289.cljs$lang$applyTo = (function (arglist__18294){
var coll = cljs.core.first(arglist__18294);
arglist__18294 = cljs.core.next(arglist__18294);
var x = cljs.core.first(arglist__18294);
var xs = cljs.core.rest(arglist__18294);
return G__18289__delegate(coll,x,xs);
});
G__18289.cljs$core$IFn$_invoke$arity$variadic = G__18289__delegate;
return G__18289;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18295 = null;
if (arguments.length > 2) {
var G__18296__i = 0, G__18296__a = new Array(arguments.length -  2);
while (G__18296__i < G__18296__a.length) {G__18296__a[G__18296__i] = arguments[G__18296__i + 2]; ++G__18296__i;}
G__18295 = new cljs.core.IndexedSeq(G__18296__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18297 = cljs.core.next(s);
var G__18298 = (acc + (1));
s = G__18297;
acc = G__18298;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__18300 = coll;
if(G__18300){
var bit__4480__auto__ = (G__18300.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4480__auto__) || (G__18300.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__18301 = cljs.core.next(coll);
var G__18302 = (n - (1));
coll = G__18301;
n = G__18302;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__18303 = cljs.core.next(coll);
var G__18304 = (n - (1));
var G__18305 = not_found;
coll = G__18303;
n = G__18304;
not_found = G__18305;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__18310 = coll;
if(G__18310){
var bit__4480__auto__ = (G__18310.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4480__auto__) || (G__18310.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18311 = coll;
if(G__18311){
var bit__4487__auto__ = (G__18311.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__18311.cljs$core$ISeq$)){
return true;
} else {
if((!G__18311.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18311);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18311);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__18312 = coll;
if(G__18312){
var bit__4480__auto__ = (G__18312.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4480__auto__) || (G__18312.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18313 = coll;
if(G__18313){
var bit__4487__auto__ = (G__18313.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__18313.cljs$core$ISeq$)){
return true;
} else {
if((!G__18313.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18313);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18313);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__18314 = (n__$1 - (1));
var G__18315 = cljs.core.rest(xs);
n__$1 = G__18314;
xs = G__18315;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__18318 = o;
if(G__18318){
var bit__4480__auto__ = (G__18318.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4480__auto__) || (G__18318.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__18319 = o;
if(G__18319){
var bit__4480__auto__ = (G__18319.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4480__auto__) || (G__18319.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__18323__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__18324 = ret;
var G__18325 = cljs.core.first(kvs);
var G__18326 = cljs.core.second(kvs);
var G__18327 = cljs.core.nnext(kvs);
coll = G__18324;
k = G__18325;
v = G__18326;
kvs = G__18327;
continue;
} else {
return ret;
}
break;
}
};
var G__18323 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__18328__i = 0, G__18328__a = new Array(arguments.length -  3);
while (G__18328__i < G__18328__a.length) {G__18328__a[G__18328__i] = arguments[G__18328__i + 3]; ++G__18328__i;}
  kvs = new cljs.core.IndexedSeq(G__18328__a,0);
} 
return G__18323__delegate.call(this,coll,k,v,kvs);};
G__18323.cljs$lang$maxFixedArity = 3;
G__18323.cljs$lang$applyTo = (function (arglist__18329){
var coll = cljs.core.first(arglist__18329);
arglist__18329 = cljs.core.next(arglist__18329);
var k = cljs.core.first(arglist__18329);
arglist__18329 = cljs.core.next(arglist__18329);
var v = cljs.core.first(arglist__18329);
var kvs = cljs.core.rest(arglist__18329);
return G__18323__delegate(coll,k,v,kvs);
});
G__18323.cljs$core$IFn$_invoke$arity$variadic = G__18323__delegate;
return G__18323;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__18330 = null;
if (arguments.length > 3) {
var G__18331__i = 0, G__18331__a = new Array(arguments.length -  3);
while (G__18331__i < G__18331__a.length) {G__18331__a[G__18331__i] = arguments[G__18331__i + 3]; ++G__18331__i;}
G__18330 = new cljs.core.IndexedSeq(G__18331__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__18330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__18334__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18335 = ret;
var G__18336 = cljs.core.first(ks);
var G__18337 = cljs.core.next(ks);
coll = G__18335;
k = G__18336;
ks = G__18337;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18334 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18338__i = 0, G__18338__a = new Array(arguments.length -  2);
while (G__18338__i < G__18338__a.length) {G__18338__a[G__18338__i] = arguments[G__18338__i + 2]; ++G__18338__i;}
  ks = new cljs.core.IndexedSeq(G__18338__a,0);
} 
return G__18334__delegate.call(this,coll,k,ks);};
G__18334.cljs$lang$maxFixedArity = 2;
G__18334.cljs$lang$applyTo = (function (arglist__18339){
var coll = cljs.core.first(arglist__18339);
arglist__18339 = cljs.core.next(arglist__18339);
var k = cljs.core.first(arglist__18339);
var ks = cljs.core.rest(arglist__18339);
return G__18334__delegate(coll,k,ks);
});
G__18334.cljs$core$IFn$_invoke$arity$variadic = G__18334__delegate;
return G__18334;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__18340 = null;
if (arguments.length > 2) {
var G__18341__i = 0, G__18341__a = new Array(arguments.length -  2);
while (G__18341__i < G__18341__a.length) {G__18341__a[G__18341__i] = arguments[G__18341__i + 2]; ++G__18341__i;}
G__18340 = new cljs.core.IndexedSeq(G__18341__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3806__auto__ = (function (){var G__18346 = f;
return goog.isFunction(G__18346);
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var G__18347 = f;
if(G__18347){
var bit__4487__auto__ = null;
if(cljs.core.truth_((function (){var or__3806__auto____$1 = bit__4487__auto__;
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
return G__18347.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__18347.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18347);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18347);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__18813 = null;
var G__18813__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__18813__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18349 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18349) : self__.afn.call(null,G__18349));
});
var G__18813__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18350 = a;
var G__18351 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18350,G__18351) : self__.afn.call(null,G__18350,G__18351));
});
var G__18813__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18352 = a;
var G__18353 = b;
var G__18354 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18352,G__18353,G__18354) : self__.afn.call(null,G__18352,G__18353,G__18354));
});
var G__18813__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18355 = a;
var G__18356 = b;
var G__18357 = c;
var G__18358 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18355,G__18356,G__18357,G__18358) : self__.afn.call(null,G__18355,G__18356,G__18357,G__18358));
});
var G__18813__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18359 = a;
var G__18360 = b;
var G__18361 = c;
var G__18362 = d;
var G__18363 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18359,G__18360,G__18361,G__18362,G__18363) : self__.afn.call(null,G__18359,G__18360,G__18361,G__18362,G__18363));
});
var G__18813__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18364 = a;
var G__18365 = b;
var G__18366 = c;
var G__18367 = d;
var G__18368 = e;
var G__18369 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18364,G__18365,G__18366,G__18367,G__18368,G__18369) : self__.afn.call(null,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369));
});
var G__18813__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18370 = a;
var G__18371 = b;
var G__18372 = c;
var G__18373 = d;
var G__18374 = e;
var G__18375 = f;
var G__18376 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376) : self__.afn.call(null,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376));
});
var G__18813__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18377 = a;
var G__18378 = b;
var G__18379 = c;
var G__18380 = d;
var G__18381 = e;
var G__18382 = f;
var G__18383 = g;
var G__18384 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384) : self__.afn.call(null,G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384));
});
var G__18813__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18385 = a;
var G__18386 = b;
var G__18387 = c;
var G__18388 = d;
var G__18389 = e;
var G__18390 = f;
var G__18391 = g;
var G__18392 = h;
var G__18393 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392,G__18393) : self__.afn.call(null,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392,G__18393));
});
var G__18813__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18394 = a;
var G__18395 = b;
var G__18396 = c;
var G__18397 = d;
var G__18398 = e;
var G__18399 = f;
var G__18400 = g;
var G__18401 = h;
var G__18402 = i;
var G__18403 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403) : self__.afn.call(null,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403));
});
var G__18813__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18404 = a;
var G__18405 = b;
var G__18406 = c;
var G__18407 = d;
var G__18408 = e;
var G__18409 = f;
var G__18410 = g;
var G__18411 = h;
var G__18412 = i;
var G__18413 = j;
var G__18414 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412,G__18413,G__18414) : self__.afn.call(null,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412,G__18413,G__18414));
});
var G__18813__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18415 = a;
var G__18416 = b;
var G__18417 = c;
var G__18418 = d;
var G__18419 = e;
var G__18420 = f;
var G__18421 = g;
var G__18422 = h;
var G__18423 = i;
var G__18424 = j;
var G__18425 = k;
var G__18426 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426) : self__.afn.call(null,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426));
});
var G__18813__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18427 = a;
var G__18428 = b;
var G__18429 = c;
var G__18430 = d;
var G__18431 = e;
var G__18432 = f;
var G__18433 = g;
var G__18434 = h;
var G__18435 = i;
var G__18436 = j;
var G__18437 = k;
var G__18438 = l;
var G__18439 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18427,G__18428,G__18429,G__18430,G__18431,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439) : self__.afn.call(null,G__18427,G__18428,G__18429,G__18430,G__18431,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439));
});
var G__18813__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18440 = a;
var G__18441 = b;
var G__18442 = c;
var G__18443 = d;
var G__18444 = e;
var G__18445 = f;
var G__18446 = g;
var G__18447 = h;
var G__18448 = i;
var G__18449 = j;
var G__18450 = k;
var G__18451 = l;
var G__18452 = m;
var G__18453 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450,G__18451,G__18452,G__18453) : self__.afn.call(null,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450,G__18451,G__18452,G__18453));
});
var G__18813__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18454 = a;
var G__18455 = b;
var G__18456 = c;
var G__18457 = d;
var G__18458 = e;
var G__18459 = f;
var G__18460 = g;
var G__18461 = h;
var G__18462 = i;
var G__18463 = j;
var G__18464 = k;
var G__18465 = l;
var G__18466 = m;
var G__18467 = n;
var G__18468 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468) : self__.afn.call(null,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468));
});
var G__18813__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18469 = a;
var G__18470 = b;
var G__18471 = c;
var G__18472 = d;
var G__18473 = e;
var G__18474 = f;
var G__18475 = g;
var G__18476 = h;
var G__18477 = i;
var G__18478 = j;
var G__18479 = k;
var G__18480 = l;
var G__18481 = m;
var G__18482 = n;
var G__18483 = o;
var G__18484 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484) : self__.afn.call(null,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484));
});
var G__18813__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18485 = a;
var G__18486 = b;
var G__18487 = c;
var G__18488 = d;
var G__18489 = e;
var G__18490 = f;
var G__18491 = g;
var G__18492 = h;
var G__18493 = i;
var G__18494 = j;
var G__18495 = k;
var G__18496 = l;
var G__18497 = m;
var G__18498 = n;
var G__18499 = o;
var G__18500 = p;
var G__18501 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501) : self__.afn.call(null,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501));
});
var G__18813__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18502 = a;
var G__18503 = b;
var G__18504 = c;
var G__18505 = d;
var G__18506 = e;
var G__18507 = f;
var G__18508 = g;
var G__18509 = h;
var G__18510 = i;
var G__18511 = j;
var G__18512 = k;
var G__18513 = l;
var G__18514 = m;
var G__18515 = n;
var G__18516 = o;
var G__18517 = p;
var G__18518 = q;
var G__18519 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18502,G__18503,G__18504,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519) : self__.afn.call(null,G__18502,G__18503,G__18504,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519));
});
var G__18813__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18520 = a;
var G__18521 = b;
var G__18522 = c;
var G__18523 = d;
var G__18524 = e;
var G__18525 = f;
var G__18526 = g;
var G__18527 = h;
var G__18528 = i;
var G__18529 = j;
var G__18530 = k;
var G__18531 = l;
var G__18532 = m;
var G__18533 = n;
var G__18534 = o;
var G__18535 = p;
var G__18536 = q;
var G__18537 = r;
var G__18538 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538) : self__.afn.call(null,G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538));
});
var G__18813__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18539 = a;
var G__18540 = b;
var G__18541 = c;
var G__18542 = d;
var G__18543 = e;
var G__18544 = f;
var G__18545 = g;
var G__18546 = h;
var G__18547 = i;
var G__18548 = j;
var G__18549 = k;
var G__18550 = l;
var G__18551 = m;
var G__18552 = n;
var G__18553 = o;
var G__18554 = p;
var G__18555 = q;
var G__18556 = r;
var G__18557 = s;
var G__18558 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558) : self__.afn.call(null,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558));
});
var G__18813__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18559 = self__.afn;
var G__18560 = a;
var G__18561 = b;
var G__18562 = c;
var G__18563 = d;
var G__18564 = e;
var G__18565 = f;
var G__18566 = g;
var G__18567 = h;
var G__18568 = i;
var G__18569 = j;
var G__18570 = k;
var G__18571 = l;
var G__18572 = m;
var G__18573 = n;
var G__18574 = o;
var G__18575 = p;
var G__18576 = q;
var G__18577 = r;
var G__18578 = s;
var G__18579 = t;
var G__18580 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18559,G__18560,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580) : cljs.core.apply.call(null,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580));
});
G__18813 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18813__1.call(this,self__);
case 2:
return G__18813__2.call(this,self__,a);
case 3:
return G__18813__3.call(this,self__,a,b);
case 4:
return G__18813__4.call(this,self__,a,b,c);
case 5:
return G__18813__5.call(this,self__,a,b,c,d);
case 6:
return G__18813__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18813__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18813__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18813__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18813__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18813__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18813__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18813__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18813__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18813__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18813__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18813__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18813__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18813__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18813__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18813__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18813__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18813.cljs$core$IFn$_invoke$arity$1 = G__18813__1;
G__18813.cljs$core$IFn$_invoke$arity$2 = G__18813__2;
G__18813.cljs$core$IFn$_invoke$arity$3 = G__18813__3;
G__18813.cljs$core$IFn$_invoke$arity$4 = G__18813__4;
G__18813.cljs$core$IFn$_invoke$arity$5 = G__18813__5;
G__18813.cljs$core$IFn$_invoke$arity$6 = G__18813__6;
G__18813.cljs$core$IFn$_invoke$arity$7 = G__18813__7;
G__18813.cljs$core$IFn$_invoke$arity$8 = G__18813__8;
G__18813.cljs$core$IFn$_invoke$arity$9 = G__18813__9;
G__18813.cljs$core$IFn$_invoke$arity$10 = G__18813__10;
G__18813.cljs$core$IFn$_invoke$arity$11 = G__18813__11;
G__18813.cljs$core$IFn$_invoke$arity$12 = G__18813__12;
G__18813.cljs$core$IFn$_invoke$arity$13 = G__18813__13;
G__18813.cljs$core$IFn$_invoke$arity$14 = G__18813__14;
G__18813.cljs$core$IFn$_invoke$arity$15 = G__18813__15;
G__18813.cljs$core$IFn$_invoke$arity$16 = G__18813__16;
G__18813.cljs$core$IFn$_invoke$arity$17 = G__18813__17;
G__18813.cljs$core$IFn$_invoke$arity$18 = G__18813__18;
G__18813.cljs$core$IFn$_invoke$arity$19 = G__18813__19;
G__18813.cljs$core$IFn$_invoke$arity$20 = G__18813__20;
G__18813.cljs$core$IFn$_invoke$arity$21 = G__18813__21;
G__18813.cljs$core$IFn$_invoke$arity$22 = G__18813__22;
return G__18813;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args18348){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18348)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__18581 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18581) : self__.afn.call(null,G__18581));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__18582 = a;
var G__18583 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18582,G__18583) : self__.afn.call(null,G__18582,G__18583));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__18584 = a;
var G__18585 = b;
var G__18586 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18584,G__18585,G__18586) : self__.afn.call(null,G__18584,G__18585,G__18586));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__18587 = a;
var G__18588 = b;
var G__18589 = c;
var G__18590 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18587,G__18588,G__18589,G__18590) : self__.afn.call(null,G__18587,G__18588,G__18589,G__18590));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__18591 = a;
var G__18592 = b;
var G__18593 = c;
var G__18594 = d;
var G__18595 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18591,G__18592,G__18593,G__18594,G__18595) : self__.afn.call(null,G__18591,G__18592,G__18593,G__18594,G__18595));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__18596 = a;
var G__18597 = b;
var G__18598 = c;
var G__18599 = d;
var G__18600 = e;
var G__18601 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18596,G__18597,G__18598,G__18599,G__18600,G__18601) : self__.afn.call(null,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__18602 = a;
var G__18603 = b;
var G__18604 = c;
var G__18605 = d;
var G__18606 = e;
var G__18607 = f;
var G__18608 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608) : self__.afn.call(null,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__18609 = a;
var G__18610 = b;
var G__18611 = c;
var G__18612 = d;
var G__18613 = e;
var G__18614 = f;
var G__18615 = g;
var G__18616 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616) : self__.afn.call(null,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__18617 = a;
var G__18618 = b;
var G__18619 = c;
var G__18620 = d;
var G__18621 = e;
var G__18622 = f;
var G__18623 = g;
var G__18624 = h;
var G__18625 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625) : self__.afn.call(null,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__18626 = a;
var G__18627 = b;
var G__18628 = c;
var G__18629 = d;
var G__18630 = e;
var G__18631 = f;
var G__18632 = g;
var G__18633 = h;
var G__18634 = i;
var G__18635 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635) : self__.afn.call(null,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__18636 = a;
var G__18637 = b;
var G__18638 = c;
var G__18639 = d;
var G__18640 = e;
var G__18641 = f;
var G__18642 = g;
var G__18643 = h;
var G__18644 = i;
var G__18645 = j;
var G__18646 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646) : self__.afn.call(null,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__18647 = a;
var G__18648 = b;
var G__18649 = c;
var G__18650 = d;
var G__18651 = e;
var G__18652 = f;
var G__18653 = g;
var G__18654 = h;
var G__18655 = i;
var G__18656 = j;
var G__18657 = k;
var G__18658 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658) : self__.afn.call(null,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__18659 = a;
var G__18660 = b;
var G__18661 = c;
var G__18662 = d;
var G__18663 = e;
var G__18664 = f;
var G__18665 = g;
var G__18666 = h;
var G__18667 = i;
var G__18668 = j;
var G__18669 = k;
var G__18670 = l;
var G__18671 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18659,G__18660,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671) : self__.afn.call(null,G__18659,G__18660,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__18672 = a;
var G__18673 = b;
var G__18674 = c;
var G__18675 = d;
var G__18676 = e;
var G__18677 = f;
var G__18678 = g;
var G__18679 = h;
var G__18680 = i;
var G__18681 = j;
var G__18682 = k;
var G__18683 = l;
var G__18684 = m;
var G__18685 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685) : self__.afn.call(null,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__18686 = a;
var G__18687 = b;
var G__18688 = c;
var G__18689 = d;
var G__18690 = e;
var G__18691 = f;
var G__18692 = g;
var G__18693 = h;
var G__18694 = i;
var G__18695 = j;
var G__18696 = k;
var G__18697 = l;
var G__18698 = m;
var G__18699 = n;
var G__18700 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700) : self__.afn.call(null,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__18701 = a;
var G__18702 = b;
var G__18703 = c;
var G__18704 = d;
var G__18705 = e;
var G__18706 = f;
var G__18707 = g;
var G__18708 = h;
var G__18709 = i;
var G__18710 = j;
var G__18711 = k;
var G__18712 = l;
var G__18713 = m;
var G__18714 = n;
var G__18715 = o;
var G__18716 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716) : self__.afn.call(null,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__18717 = a;
var G__18718 = b;
var G__18719 = c;
var G__18720 = d;
var G__18721 = e;
var G__18722 = f;
var G__18723 = g;
var G__18724 = h;
var G__18725 = i;
var G__18726 = j;
var G__18727 = k;
var G__18728 = l;
var G__18729 = m;
var G__18730 = n;
var G__18731 = o;
var G__18732 = p;
var G__18733 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733) : self__.afn.call(null,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__18734 = a;
var G__18735 = b;
var G__18736 = c;
var G__18737 = d;
var G__18738 = e;
var G__18739 = f;
var G__18740 = g;
var G__18741 = h;
var G__18742 = i;
var G__18743 = j;
var G__18744 = k;
var G__18745 = l;
var G__18746 = m;
var G__18747 = n;
var G__18748 = o;
var G__18749 = p;
var G__18750 = q;
var G__18751 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750,G__18751) : self__.afn.call(null,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750,G__18751));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__18752 = a;
var G__18753 = b;
var G__18754 = c;
var G__18755 = d;
var G__18756 = e;
var G__18757 = f;
var G__18758 = g;
var G__18759 = h;
var G__18760 = i;
var G__18761 = j;
var G__18762 = k;
var G__18763 = l;
var G__18764 = m;
var G__18765 = n;
var G__18766 = o;
var G__18767 = p;
var G__18768 = q;
var G__18769 = r;
var G__18770 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18752,G__18753,G__18754,G__18755,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770) : self__.afn.call(null,G__18752,G__18753,G__18754,G__18755,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__18771 = a;
var G__18772 = b;
var G__18773 = c;
var G__18774 = d;
var G__18775 = e;
var G__18776 = f;
var G__18777 = g;
var G__18778 = h;
var G__18779 = i;
var G__18780 = j;
var G__18781 = k;
var G__18782 = l;
var G__18783 = m;
var G__18784 = n;
var G__18785 = o;
var G__18786 = p;
var G__18787 = q;
var G__18788 = r;
var G__18789 = s;
var G__18790 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18771,G__18772,G__18773,G__18774,G__18775,G__18776,G__18777,G__18778,G__18779,G__18780,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789,G__18790) : self__.afn.call(null,G__18771,G__18772,G__18773,G__18774,G__18775,G__18776,G__18777,G__18778,G__18779,G__18780,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789,G__18790));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18791 = self__.afn;
var G__18792 = a;
var G__18793 = b;
var G__18794 = c;
var G__18795 = d;
var G__18796 = e;
var G__18797 = f;
var G__18798 = g;
var G__18799 = h;
var G__18800 = i;
var G__18801 = j;
var G__18802 = k;
var G__18803 = l;
var G__18804 = m;
var G__18805 = n;
var G__18806 = o;
var G__18807 = p;
var G__18808 = q;
var G__18809 = r;
var G__18810 = s;
var G__18811 = t;
var G__18812 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18791,G__18792,G__18793,G__18794,G__18795,G__18796,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810,G__18811,G__18812) : cljs.core.apply.call(null,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810,G__18811,G__18812));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__18817 = o;
if(G__18817){
var bit__4487__auto__ = (G__18817.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4487__auto__) || (G__18817.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__18817.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18817);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18817);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3794__auto__ = !((o == null));
if(and__3794__auto__){
var G__18821 = o;
if(G__18821){
var bit__4487__auto__ = (G__18821.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4487__auto__) || (G__18821.cljs$core$IMeta$)){
return true;
} else {
if((!G__18821.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18821);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18821);
}
} else {
return and__3794__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__18824__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18825 = ret;
var G__18826 = cljs.core.first(ks);
var G__18827 = cljs.core.next(ks);
coll = G__18825;
k = G__18826;
ks = G__18827;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18824 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18828__i = 0, G__18828__a = new Array(arguments.length -  2);
while (G__18828__i < G__18828__a.length) {G__18828__a[G__18828__i] = arguments[G__18828__i + 2]; ++G__18828__i;}
  ks = new cljs.core.IndexedSeq(G__18828__a,0);
} 
return G__18824__delegate.call(this,coll,k,ks);};
G__18824.cljs$lang$maxFixedArity = 2;
G__18824.cljs$lang$applyTo = (function (arglist__18829){
var coll = cljs.core.first(arglist__18829);
arglist__18829 = cljs.core.next(arglist__18829);
var k = cljs.core.first(arglist__18829);
var ks = cljs.core.rest(arglist__18829);
return G__18824__delegate(coll,k,ks);
});
G__18824.cljs$core$IFn$_invoke$arity$variadic = G__18824__delegate;
return G__18824;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__18830 = null;
if (arguments.length > 2) {
var G__18831__i = 0, G__18831__a = new Array(arguments.length -  2);
while (G__18831__i < G__18831__a.length) {G__18831__a[G__18831__i] = arguments[G__18831__i + 2]; ++G__18831__i;}
G__18830 = new cljs.core.IndexedSeq(G__18831__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18830);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18833 = x;
if(G__18833){
var bit__4487__auto__ = (G__18833.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4487__auto__) || (G__18833.cljs$core$ICollection$)){
return true;
} else {
if((!G__18833.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18833);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18833);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18835 = x;
if(G__18835){
var bit__4487__auto__ = (G__18835.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4487__auto__) || (G__18835.cljs$core$ISet$)){
return true;
} else {
if((!G__18835.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18835);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18835);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__18837 = x;
if(G__18837){
var bit__4487__auto__ = (G__18837.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4487__auto__) || (G__18837.cljs$core$IAssociative$)){
return true;
} else {
if((!G__18837.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18837);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18837);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__18839 = x;
if(G__18839){
var bit__4487__auto__ = (G__18839.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4487__auto__) || (G__18839.cljs$core$ISequential$)){
return true;
} else {
if((!G__18839.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__18839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__18839);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__18841 = x;
if(G__18841){
var bit__4487__auto__ = (G__18841.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4487__auto__) || (G__18841.cljs$core$ISorted$)){
return true;
} else {
if((!G__18841.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__18841);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__18841);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__18843 = x;
if(G__18843){
var bit__4487__auto__ = (G__18843.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4487__auto__) || (G__18843.cljs$core$IReduce$)){
return true;
} else {
if((!G__18843.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__18843);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__18843);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18845 = x;
if(G__18845){
var bit__4487__auto__ = (G__18845.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4487__auto__) || (G__18845.cljs$core$IMap$)){
return true;
} else {
if((!G__18845.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__18845);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__18845);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__18847 = x;
if(G__18847){
var bit__4487__auto__ = (G__18847.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4487__auto__) || (G__18847.cljs$core$IVector$)){
return true;
} else {
if((!G__18847.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__18847);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__18847);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__18849 = x;
if(G__18849){
var bit__4480__auto__ = (G__18849.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4480__auto__) || (G__18849.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj18855 = {};
return obj18855;
});
var js_obj__1 = (function() { 
var G__18858__delegate = function (keyvals){
var G__18856 = goog.object.create;
var G__18857 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__18856,G__18857) : cljs.core.apply.call(null,G__18856,G__18857));
};
var G__18858 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__18859__i = 0, G__18859__a = new Array(arguments.length -  0);
while (G__18859__i < G__18859__a.length) {G__18859__a[G__18859__i] = arguments[G__18859__i + 0]; ++G__18859__i;}
  keyvals = new cljs.core.IndexedSeq(G__18859__a,0);
} 
return G__18858__delegate.call(this,keyvals);};
G__18858.cljs$lang$maxFixedArity = 0;
G__18858.cljs$lang$applyTo = (function (arglist__18860){
var keyvals = cljs.core.seq(arglist__18860);
return G__18858__delegate(keyvals);
});
G__18858.cljs$core$IFn$_invoke$arity$variadic = G__18858__delegate;
return G__18858;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__18861 = null;
if (arguments.length > 0) {
var G__18862__i = 0, G__18862__a = new Array(arguments.length -  0);
while (G__18862__i < G__18862__a.length) {G__18862__a[G__18862__i] = arguments[G__18862__i + 0]; ++G__18862__i;}
G__18861 = new cljs.core.IndexedSeq(G__18862__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__18861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__18865_18867 = obj;
var G__18866_18868 = ((function (G__18865_18867,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__18865_18867,keys))
;
goog.object.forEach(G__18865_18867,G__18866_18868);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__18869 = (i__$1 + (1));
var G__18870 = (j__$1 + (1));
var G__18871 = (len__$1 - (1));
i__$1 = G__18869;
j__$1 = G__18870;
len__$1 = G__18871;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__18872 = (i__$1 - (1));
var G__18873 = (j__$1 - (1));
var G__18874 = (len__$1 - (1));
i__$1 = G__18872;
j__$1 = G__18873;
len__$1 = G__18874;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj18876 = {};
return obj18876;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__18878 = s;
if(G__18878){
var bit__4487__auto__ = (G__18878.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__18878.cljs$core$ISeq$)){
return true;
} else {
if((!G__18878.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18878);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18878);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__18880 = s;
if(G__18880){
var bit__4487__auto__ = (G__18880.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4487__auto__) || (G__18880.cljs$core$ISeqable$)){
return true;
} else {
if((!G__18880.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__18880);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__18880);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3806__auto__ = cljs.core.fn_QMARK_(f);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var G__18884 = f;
if(G__18884){
var bit__4487__auto__ = (G__18884.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4487__auto__) || (G__18884.cljs$core$IFn$)){
return true;
} else {
if((!G__18884.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__18884);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__18884);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__18897 = n;
return isNaN(G__18897);
})())) && (!((n === Infinity))) && (((function (){var G__18898 = n;
return parseFloat(G__18898);
})() === (function (){var G__18899 = n;
var G__18900 = (10);
return parseInt(G__18899,G__18900);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__18901__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__18902 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__18903 = etc;
s = G__18902;
xs = G__18903;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__18901 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18904__i = 0, G__18904__a = new Array(arguments.length -  2);
while (G__18904__i < G__18904__a.length) {G__18904__a[G__18904__i] = arguments[G__18904__i + 2]; ++G__18904__i;}
  more = new cljs.core.IndexedSeq(G__18904__a,0);
} 
return G__18901__delegate.call(this,x,y,more);};
G__18901.cljs$lang$maxFixedArity = 2;
G__18901.cljs$lang$applyTo = (function (arglist__18905){
var x = cljs.core.first(arglist__18905);
arglist__18905 = cljs.core.next(arglist__18905);
var y = cljs.core.first(arglist__18905);
var more = cljs.core.rest(arglist__18905);
return G__18901__delegate(x,y,more);
});
G__18901.cljs$core$IFn$_invoke$arity$variadic = G__18901__delegate;
return G__18901;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__18906 = null;
if (arguments.length > 2) {
var G__18907__i = 0, G__18907__a = new Array(arguments.length -  2);
while (G__18907__i < G__18907__a.length) {G__18907__a[G__18907__i] = arguments[G__18907__i + 2]; ++G__18907__i;}
G__18906 = new cljs.core.IndexedSeq(G__18907__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__18911 = x;
if(G__18911){
var bit__4480__auto__ = (G__18911.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4480__auto__) || (G__18911.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__18912 = x;
var G__18913 = y;
return goog.array.defaultCompare(G__18912,G__18913);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__18918 = xs;
var G__18919 = ys;
var G__18920 = len;
var G__18921 = (n + (1));
xs = G__18918;
ys = G__18919;
len = G__18920;
n = G__18921;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__18926 = x;
var G__18927 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18926,G__18927) : f.call(null,G__18926,G__18927));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18928 = y;
var G__18929 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18928,G__18929) : f.call(null,G__18928,G__18929));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__18935 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18935) : cljs.core.to_array.call(null,G__18935));
})();
var G__18936_18938 = a;
var G__18937_18939 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__18936_18938,G__18937_18939);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__18945 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18945) : keyfn.call(null,G__18945));
})(),(function (){var G__18946 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18946) : keyfn.call(null,G__18946));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__18952 = f;
var G__18953 = cljs.core.first(s);
var G__18954 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18952,G__18953,G__18954) : cljs.core.reduce.call(null,G__18952,G__18953,G__18954));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__18955 = val__$1;
var G__18956 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18955,G__18956) : f.call(null,G__18955,G__18956));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18957 = nval;
var G__18958 = cljs.core.next(coll__$1);
val__$1 = G__18957;
coll__$1 = G__18958;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__18962 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__18962) : cljs.core.to_array.call(null,G__18962));
})();
var G__18963_18965 = a;
goog.array.shuffle(G__18963_18965);

var G__18964 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__18964) : cljs.core.vec.call(null,G__18964));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__18968 = coll;
if(G__18968){
var bit__4480__auto__ = (G__18968.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4480__auto__) || (G__18968.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__18969 = coll;
if(G__18969){
var bit__4480__auto__ = (G__18969.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4480__auto__) || (G__18969.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__18978 = null;
var G__18978__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__18978__1 = (function (x){
var G__18975 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__18975) : cf.call(null,G__18975));
});
var G__18978__2 = (function (x,y){
var G__18976 = x;
var G__18977 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18976,G__18977) : f.call(null,G__18976,G__18977));
});
G__18978 = function(x,y){
switch(arguments.length){
case 0:
return G__18978__0.call(this);
case 1:
return G__18978__1.call(this,x);
case 2:
return G__18978__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18978.cljs$core$IFn$_invoke$arity$0 = G__18978__0;
G__18978.cljs$core$IFn$_invoke$arity$1 = G__18978__1;
G__18978.cljs$core$IFn$_invoke$arity$2 = G__18978__2;
return G__18978;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__18985 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18985) : xform.call(null,G__18985));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__18986 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__18986) : f__$1.call(null,G__18986));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__18987__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__18987 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18988__i = 0, G__18988__a = new Array(arguments.length -  2);
while (G__18988__i < G__18988__a.length) {G__18988__a[G__18988__i] = arguments[G__18988__i + 2]; ++G__18988__i;}
  more = new cljs.core.IndexedSeq(G__18988__a,0);
} 
return G__18987__delegate.call(this,x,y,more);};
G__18987.cljs$lang$maxFixedArity = 2;
G__18987.cljs$lang$applyTo = (function (arglist__18989){
var x = cljs.core.first(arglist__18989);
arglist__18989 = cljs.core.next(arglist__18989);
var y = cljs.core.first(arglist__18989);
var more = cljs.core.rest(arglist__18989);
return G__18987__delegate(x,y,more);
});
G__18987.cljs$core$IFn$_invoke$arity$variadic = G__18987__delegate;
return G__18987;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__18990 = null;
if (arguments.length > 2) {
var G__18991__i = 0, G__18991__a = new Array(arguments.length -  2);
while (G__18991__i < G__18991__a.length) {G__18991__a[G__18991__i] = arguments[G__18991__i + 2]; ++G__18991__i;}
G__18990 = new cljs.core.IndexedSeq(G__18991__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18990);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__18992__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__18992 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18993__i = 0, G__18993__a = new Array(arguments.length -  2);
while (G__18993__i < G__18993__a.length) {G__18993__a[G__18993__i] = arguments[G__18993__i + 2]; ++G__18993__i;}
  more = new cljs.core.IndexedSeq(G__18993__a,0);
} 
return G__18992__delegate.call(this,x,y,more);};
G__18992.cljs$lang$maxFixedArity = 2;
G__18992.cljs$lang$applyTo = (function (arglist__18994){
var x = cljs.core.first(arglist__18994);
arglist__18994 = cljs.core.next(arglist__18994);
var y = cljs.core.first(arglist__18994);
var more = cljs.core.rest(arglist__18994);
return G__18992__delegate(x,y,more);
});
G__18992.cljs$core$IFn$_invoke$arity$variadic = G__18992__delegate;
return G__18992;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__18995 = null;
if (arguments.length > 2) {
var G__18996__i = 0, G__18996__a = new Array(arguments.length -  2);
while (G__18996__i < G__18996__a.length) {G__18996__a[G__18996__i] = arguments[G__18996__i + 2]; ++G__18996__i;}
G__18995 = new cljs.core.IndexedSeq(G__18996__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__18997__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__18997 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18998__i = 0, G__18998__a = new Array(arguments.length -  2);
while (G__18998__i < G__18998__a.length) {G__18998__a[G__18998__i] = arguments[G__18998__i + 2]; ++G__18998__i;}
  more = new cljs.core.IndexedSeq(G__18998__a,0);
} 
return G__18997__delegate.call(this,x,y,more);};
G__18997.cljs$lang$maxFixedArity = 2;
G__18997.cljs$lang$applyTo = (function (arglist__18999){
var x = cljs.core.first(arglist__18999);
arglist__18999 = cljs.core.next(arglist__18999);
var y = cljs.core.first(arglist__18999);
var more = cljs.core.rest(arglist__18999);
return G__18997__delegate(x,y,more);
});
G__18997.cljs$core$IFn$_invoke$arity$variadic = G__18997__delegate;
return G__18997;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__19000 = null;
if (arguments.length > 2) {
var G__19001__i = 0, G__19001__a = new Array(arguments.length -  2);
while (G__19001__i < G__19001__a.length) {G__19001__a[G__19001__i] = arguments[G__19001__i + 2]; ++G__19001__i;}
G__19000 = new cljs.core.IndexedSeq(G__19001__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__19006__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19006 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19007__i = 0, G__19007__a = new Array(arguments.length -  2);
while (G__19007__i < G__19007__a.length) {G__19007__a[G__19007__i] = arguments[G__19007__i + 2]; ++G__19007__i;}
  more = new cljs.core.IndexedSeq(G__19007__a,0);
} 
return G__19006__delegate.call(this,x,y,more);};
G__19006.cljs$lang$maxFixedArity = 2;
G__19006.cljs$lang$applyTo = (function (arglist__19008){
var x = cljs.core.first(arglist__19008);
arglist__19008 = cljs.core.next(arglist__19008);
var y = cljs.core.first(arglist__19008);
var more = cljs.core.rest(arglist__19008);
return G__19006__delegate(x,y,more);
});
G__19006.cljs$core$IFn$_invoke$arity$variadic = G__19006__delegate;
return G__19006;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__19009 = null;
if (arguments.length > 2) {
var G__19010__i = 0, G__19010__a = new Array(arguments.length -  2);
while (G__19010__i < G__19010__a.length) {G__19010__a[G__19010__i] = arguments[G__19010__i + 2]; ++G__19010__i;}
G__19009 = new cljs.core.IndexedSeq(G__19010__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__19011__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__19012 = y;
var G__19013 = cljs.core.first(more);
var G__19014 = cljs.core.next(more);
x = G__19012;
y = G__19013;
more = G__19014;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19011 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19015__i = 0, G__19015__a = new Array(arguments.length -  2);
while (G__19015__i < G__19015__a.length) {G__19015__a[G__19015__i] = arguments[G__19015__i + 2]; ++G__19015__i;}
  more = new cljs.core.IndexedSeq(G__19015__a,0);
} 
return G__19011__delegate.call(this,x,y,more);};
G__19011.cljs$lang$maxFixedArity = 2;
G__19011.cljs$lang$applyTo = (function (arglist__19016){
var x = cljs.core.first(arglist__19016);
arglist__19016 = cljs.core.next(arglist__19016);
var y = cljs.core.first(arglist__19016);
var more = cljs.core.rest(arglist__19016);
return G__19011__delegate(x,y,more);
});
G__19011.cljs$core$IFn$_invoke$arity$variadic = G__19011__delegate;
return G__19011;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__19017 = null;
if (arguments.length > 2) {
var G__19018__i = 0, G__19018__a = new Array(arguments.length -  2);
while (G__19018__i < G__19018__a.length) {G__19018__a[G__19018__i] = arguments[G__19018__i + 2]; ++G__19018__i;}
G__19017 = new cljs.core.IndexedSeq(G__19018__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19017);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__19019__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__19020 = y;
var G__19021 = cljs.core.first(more);
var G__19022 = cljs.core.next(more);
x = G__19020;
y = G__19021;
more = G__19022;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19019 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19023__i = 0, G__19023__a = new Array(arguments.length -  2);
while (G__19023__i < G__19023__a.length) {G__19023__a[G__19023__i] = arguments[G__19023__i + 2]; ++G__19023__i;}
  more = new cljs.core.IndexedSeq(G__19023__a,0);
} 
return G__19019__delegate.call(this,x,y,more);};
G__19019.cljs$lang$maxFixedArity = 2;
G__19019.cljs$lang$applyTo = (function (arglist__19024){
var x = cljs.core.first(arglist__19024);
arglist__19024 = cljs.core.next(arglist__19024);
var y = cljs.core.first(arglist__19024);
var more = cljs.core.rest(arglist__19024);
return G__19019__delegate(x,y,more);
});
G__19019.cljs$core$IFn$_invoke$arity$variadic = G__19019__delegate;
return G__19019;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__19025 = null;
if (arguments.length > 2) {
var G__19026__i = 0, G__19026__a = new Array(arguments.length -  2);
while (G__19026__i < G__19026__a.length) {G__19026__a[G__19026__i] = arguments[G__19026__i + 2]; ++G__19026__i;}
G__19025 = new cljs.core.IndexedSeq(G__19026__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19025);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__19027__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__19028 = y;
var G__19029 = cljs.core.first(more);
var G__19030 = cljs.core.next(more);
x = G__19028;
y = G__19029;
more = G__19030;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19027 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19031__i = 0, G__19031__a = new Array(arguments.length -  2);
while (G__19031__i < G__19031__a.length) {G__19031__a[G__19031__i] = arguments[G__19031__i + 2]; ++G__19031__i;}
  more = new cljs.core.IndexedSeq(G__19031__a,0);
} 
return G__19027__delegate.call(this,x,y,more);};
G__19027.cljs$lang$maxFixedArity = 2;
G__19027.cljs$lang$applyTo = (function (arglist__19032){
var x = cljs.core.first(arglist__19032);
arglist__19032 = cljs.core.next(arglist__19032);
var y = cljs.core.first(arglist__19032);
var more = cljs.core.rest(arglist__19032);
return G__19027__delegate(x,y,more);
});
G__19027.cljs$core$IFn$_invoke$arity$variadic = G__19027__delegate;
return G__19027;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__19033 = null;
if (arguments.length > 2) {
var G__19034__i = 0, G__19034__a = new Array(arguments.length -  2);
while (G__19034__i < G__19034__a.length) {G__19034__a[G__19034__i] = arguments[G__19034__i + 2]; ++G__19034__i;}
G__19033 = new cljs.core.IndexedSeq(G__19034__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__19035__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__19036 = y;
var G__19037 = cljs.core.first(more);
var G__19038 = cljs.core.next(more);
x = G__19036;
y = G__19037;
more = G__19038;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19035 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19039__i = 0, G__19039__a = new Array(arguments.length -  2);
while (G__19039__i < G__19039__a.length) {G__19039__a[G__19039__i] = arguments[G__19039__i + 2]; ++G__19039__i;}
  more = new cljs.core.IndexedSeq(G__19039__a,0);
} 
return G__19035__delegate.call(this,x,y,more);};
G__19035.cljs$lang$maxFixedArity = 2;
G__19035.cljs$lang$applyTo = (function (arglist__19040){
var x = cljs.core.first(arglist__19040);
arglist__19040 = cljs.core.next(arglist__19040);
var y = cljs.core.first(arglist__19040);
var more = cljs.core.rest(arglist__19040);
return G__19035__delegate(x,y,more);
});
G__19035.cljs$core$IFn$_invoke$arity$variadic = G__19035__delegate;
return G__19035;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__19041 = null;
if (arguments.length > 2) {
var G__19042__i = 0, G__19042__a = new Array(arguments.length -  2);
while (G__19042__i < G__19042__a.length) {G__19042__a[G__19042__i] = arguments[G__19042__i + 2]; ++G__19042__i;}
G__19041 = new cljs.core.IndexedSeq(G__19042__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4123__auto__ = x;
var y__4124__auto__ = y;
return ((x__4123__auto__ > y__4124__auto__) ? x__4123__auto__ : y__4124__auto__);
});
var max__3 = (function() { 
var G__19043__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4123__auto__ = x;
var y__4124__auto__ = y;
return ((x__4123__auto__ > y__4124__auto__) ? x__4123__auto__ : y__4124__auto__);
})(),more);
};
var G__19043 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19044__i = 0, G__19044__a = new Array(arguments.length -  2);
while (G__19044__i < G__19044__a.length) {G__19044__a[G__19044__i] = arguments[G__19044__i + 2]; ++G__19044__i;}
  more = new cljs.core.IndexedSeq(G__19044__a,0);
} 
return G__19043__delegate.call(this,x,y,more);};
G__19043.cljs$lang$maxFixedArity = 2;
G__19043.cljs$lang$applyTo = (function (arglist__19045){
var x = cljs.core.first(arglist__19045);
arglist__19045 = cljs.core.next(arglist__19045);
var y = cljs.core.first(arglist__19045);
var more = cljs.core.rest(arglist__19045);
return G__19043__delegate(x,y,more);
});
G__19043.cljs$core$IFn$_invoke$arity$variadic = G__19043__delegate;
return G__19043;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__19046 = null;
if (arguments.length > 2) {
var G__19047__i = 0, G__19047__a = new Array(arguments.length -  2);
while (G__19047__i < G__19047__a.length) {G__19047__a[G__19047__i] = arguments[G__19047__i + 2]; ++G__19047__i;}
G__19046 = new cljs.core.IndexedSeq(G__19047__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4130__auto__ = x;
var y__4131__auto__ = y;
return ((x__4130__auto__ < y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
});
var min__3 = (function() { 
var G__19048__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4130__auto__ = x;
var y__4131__auto__ = y;
return ((x__4130__auto__ < y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
})(),more);
};
var G__19048 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19049__i = 0, G__19049__a = new Array(arguments.length -  2);
while (G__19049__i < G__19049__a.length) {G__19049__a[G__19049__i] = arguments[G__19049__i + 2]; ++G__19049__i;}
  more = new cljs.core.IndexedSeq(G__19049__a,0);
} 
return G__19048__delegate.call(this,x,y,more);};
G__19048.cljs$lang$maxFixedArity = 2;
G__19048.cljs$lang$applyTo = (function (arglist__19050){
var x = cljs.core.first(arglist__19050);
arglist__19050 = cljs.core.next(arglist__19050);
var y = cljs.core.first(arglist__19050);
var more = cljs.core.rest(arglist__19050);
return G__19048__delegate(x,y,more);
});
G__19048.cljs$core$IFn$_invoke$arity$variadic = G__19048__delegate;
return G__19048;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__19051 = null;
if (arguments.length > 2) {
var G__19052__i = 0, G__19052__a = new Array(arguments.length -  2);
while (G__19052__i < G__19052__a.length) {G__19052__a[G__19052__i] = arguments[G__19052__i + 2]; ++G__19052__i;}
G__19051 = new cljs.core.IndexedSeq(G__19052__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__19053__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__19053 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19054__i = 0, G__19054__a = new Array(arguments.length -  2);
while (G__19054__i < G__19054__a.length) {G__19054__a[G__19054__i] = arguments[G__19054__i + 2]; ++G__19054__i;}
  more = new cljs.core.IndexedSeq(G__19054__a,0);
} 
return G__19053__delegate.call(this,x,y,more);};
G__19053.cljs$lang$maxFixedArity = 2;
G__19053.cljs$lang$applyTo = (function (arglist__19055){
var x = cljs.core.first(arglist__19055);
arglist__19055 = cljs.core.next(arglist__19055);
var y = cljs.core.first(arglist__19055);
var more = cljs.core.rest(arglist__19055);
return G__19053__delegate(x,y,more);
});
G__19053.cljs$core$IFn$_invoke$arity$variadic = G__19053__delegate;
return G__19053;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__19056 = null;
if (arguments.length > 2) {
var G__19057__i = 0, G__19057__a = new Array(arguments.length -  2);
while (G__19057__i < G__19057__a.length) {G__19057__a[G__19057__i] = arguments[G__19057__i + 2]; ++G__19057__i;}
G__19056 = new cljs.core.IndexedSeq(G__19057__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__19058__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__19058 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19059__i = 0, G__19059__a = new Array(arguments.length -  2);
while (G__19059__i < G__19059__a.length) {G__19059__a[G__19059__i] = arguments[G__19059__i + 2]; ++G__19059__i;}
  more = new cljs.core.IndexedSeq(G__19059__a,0);
} 
return G__19058__delegate.call(this,x,y,more);};
G__19058.cljs$lang$maxFixedArity = 2;
G__19058.cljs$lang$applyTo = (function (arglist__19060){
var x = cljs.core.first(arglist__19060);
arglist__19060 = cljs.core.next(arglist__19060);
var y = cljs.core.first(arglist__19060);
var more = cljs.core.rest(arglist__19060);
return G__19058__delegate(x,y,more);
});
G__19058.cljs$core$IFn$_invoke$arity$variadic = G__19058__delegate;
return G__19058;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__19061 = null;
if (arguments.length > 2) {
var G__19062__i = 0, G__19062__a = new Array(arguments.length -  2);
while (G__19062__i < G__19062__a.length) {G__19062__a[G__19062__i] = arguments[G__19062__i + 2]; ++G__19062__i;}
G__19061 = new cljs.core.IndexedSeq(G__19062__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19061);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__19067__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19067 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19068__i = 0, G__19068__a = new Array(arguments.length -  2);
while (G__19068__i < G__19068__a.length) {G__19068__a[G__19068__i] = arguments[G__19068__i + 2]; ++G__19068__i;}
  more = new cljs.core.IndexedSeq(G__19068__a,0);
} 
return G__19067__delegate.call(this,x,y,more);};
G__19067.cljs$lang$maxFixedArity = 2;
G__19067.cljs$lang$applyTo = (function (arglist__19069){
var x = cljs.core.first(arglist__19069);
arglist__19069 = cljs.core.next(arglist__19069);
var y = cljs.core.first(arglist__19069);
var more = cljs.core.rest(arglist__19069);
return G__19067__delegate(x,y,more);
});
G__19067.cljs$core$IFn$_invoke$arity$variadic = G__19067__delegate;
return G__19067;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__19070 = null;
if (arguments.length > 2) {
var G__19071__i = 0, G__19071__a = new Array(arguments.length -  2);
while (G__19071__i < G__19071__a.length) {G__19071__a[G__19071__i] = arguments[G__19071__i + 2]; ++G__19071__i;}
G__19070 = new cljs.core.IndexedSeq(G__19071__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__19072__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__19072 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19073__i = 0, G__19073__a = new Array(arguments.length -  2);
while (G__19073__i < G__19073__a.length) {G__19073__a[G__19073__i] = arguments[G__19073__i + 2]; ++G__19073__i;}
  more = new cljs.core.IndexedSeq(G__19073__a,0);
} 
return G__19072__delegate.call(this,x,y,more);};
G__19072.cljs$lang$maxFixedArity = 2;
G__19072.cljs$lang$applyTo = (function (arglist__19074){
var x = cljs.core.first(arglist__19074);
arglist__19074 = cljs.core.next(arglist__19074);
var y = cljs.core.first(arglist__19074);
var more = cljs.core.rest(arglist__19074);
return G__19072__delegate(x,y,more);
});
G__19072.cljs$core$IFn$_invoke$arity$variadic = G__19072__delegate;
return G__19072;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__19075 = null;
if (arguments.length > 2) {
var G__19076__i = 0, G__19076__a = new Array(arguments.length -  2);
while (G__19076__i < G__19076__a.length) {G__19076__a[G__19076__i] = arguments[G__19076__i + 2]; ++G__19076__i;}
G__19075 = new cljs.core.IndexedSeq(G__19076__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__19077__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__19077 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19078__i = 0, G__19078__a = new Array(arguments.length -  2);
while (G__19078__i < G__19078__a.length) {G__19078__a[G__19078__i] = arguments[G__19078__i + 2]; ++G__19078__i;}
  more = new cljs.core.IndexedSeq(G__19078__a,0);
} 
return G__19077__delegate.call(this,x,y,more);};
G__19077.cljs$lang$maxFixedArity = 2;
G__19077.cljs$lang$applyTo = (function (arglist__19079){
var x = cljs.core.first(arglist__19079);
arglist__19079 = cljs.core.next(arglist__19079);
var y = cljs.core.first(arglist__19079);
var more = cljs.core.rest(arglist__19079);
return G__19077__delegate(x,y,more);
});
G__19077.cljs$core$IFn$_invoke$arity$variadic = G__19077__delegate;
return G__19077;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__19080 = null;
if (arguments.length > 2) {
var G__19081__i = 0, G__19081__a = new Array(arguments.length -  2);
while (G__19081__i < G__19081__a.length) {G__19081__a[G__19081__i] = arguments[G__19081__i + 2]; ++G__19081__i;}
G__19080 = new cljs.core.IndexedSeq(G__19081__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19080);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__19084 = x;
var G__19085 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__19084,G__19085) : cljs.core.mod.call(null,G__19084,G__19085));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__19086__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__19086 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19087__i = 0, G__19087__a = new Array(arguments.length -  2);
while (G__19087__i < G__19087__a.length) {G__19087__a[G__19087__i] = arguments[G__19087__i + 2]; ++G__19087__i;}
  more = new cljs.core.IndexedSeq(G__19087__a,0);
} 
return G__19086__delegate.call(this,x,y,more);};
G__19086.cljs$lang$maxFixedArity = 2;
G__19086.cljs$lang$applyTo = (function (arglist__19088){
var x = cljs.core.first(arglist__19088);
arglist__19088 = cljs.core.next(arglist__19088);
var y = cljs.core.first(arglist__19088);
var more = cljs.core.rest(arglist__19088);
return G__19086__delegate(x,y,more);
});
G__19086.cljs$core$IFn$_invoke$arity$variadic = G__19086__delegate;
return G__19086;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19089 = null;
if (arguments.length > 2) {
var G__19090__i = 0, G__19090__a = new Array(arguments.length -  2);
while (G__19090__i < G__19090__a.length) {G__19090__a[G__19090__i] = arguments[G__19090__i + 2]; ++G__19090__i;}
G__19089 = new cljs.core.IndexedSeq(G__19090__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19091__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19091 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19092__i = 0, G__19092__a = new Array(arguments.length -  2);
while (G__19092__i < G__19092__a.length) {G__19092__a[G__19092__i] = arguments[G__19092__i + 2]; ++G__19092__i;}
  more = new cljs.core.IndexedSeq(G__19092__a,0);
} 
return G__19091__delegate.call(this,x,y,more);};
G__19091.cljs$lang$maxFixedArity = 2;
G__19091.cljs$lang$applyTo = (function (arglist__19093){
var x = cljs.core.first(arglist__19093);
arglist__19093 = cljs.core.next(arglist__19093);
var y = cljs.core.first(arglist__19093);
var more = cljs.core.rest(arglist__19093);
return G__19091__delegate(x,y,more);
});
G__19091.cljs$core$IFn$_invoke$arity$variadic = G__19091__delegate;
return G__19091;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19094 = null;
if (arguments.length > 2) {
var G__19095__i = 0, G__19095__a = new Array(arguments.length -  2);
while (G__19095__i < G__19095__a.length) {G__19095__a[G__19095__i] = arguments[G__19095__i + 2]; ++G__19095__i;}
G__19094 = new cljs.core.IndexedSeq(G__19095__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19098 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19098) : Math.floor.call(null,G__19098));
} else {
var G__19099 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19099) : Math.ceil.call(null,G__19099));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__19100__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__19100 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19101__i = 0, G__19101__a = new Array(arguments.length -  2);
while (G__19101__i < G__19101__a.length) {G__19101__a[G__19101__i] = arguments[G__19101__i + 2]; ++G__19101__i;}
  more = new cljs.core.IndexedSeq(G__19101__a,0);
} 
return G__19100__delegate.call(this,x,y,more);};
G__19100.cljs$lang$maxFixedArity = 2;
G__19100.cljs$lang$applyTo = (function (arglist__19102){
var x = cljs.core.first(arglist__19102);
arglist__19102 = cljs.core.next(arglist__19102);
var y = cljs.core.first(arglist__19102);
var more = cljs.core.rest(arglist__19102);
return G__19100__delegate(x,y,more);
});
G__19100.cljs$core$IFn$_invoke$arity$variadic = G__19100__delegate;
return G__19100;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__19103 = null;
if (arguments.length > 2) {
var G__19104__i = 0, G__19104__a = new Array(arguments.length -  2);
while (G__19104__i < G__19104__a.length) {G__19104__a[G__19104__i] = arguments[G__19104__i + 2]; ++G__19104__i;}
G__19103 = new cljs.core.IndexedSeq(G__19104__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19103);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__19105__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__19105 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19106__i = 0, G__19106__a = new Array(arguments.length -  2);
while (G__19106__i < G__19106__a.length) {G__19106__a[G__19106__i] = arguments[G__19106__i + 2]; ++G__19106__i;}
  more = new cljs.core.IndexedSeq(G__19106__a,0);
} 
return G__19105__delegate.call(this,x,y,more);};
G__19105.cljs$lang$maxFixedArity = 2;
G__19105.cljs$lang$applyTo = (function (arglist__19107){
var x = cljs.core.first(arglist__19107);
arglist__19107 = cljs.core.next(arglist__19107);
var y = cljs.core.first(arglist__19107);
var more = cljs.core.rest(arglist__19107);
return G__19105__delegate(x,y,more);
});
G__19105.cljs$core$IFn$_invoke$arity$variadic = G__19105__delegate;
return G__19105;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__19108 = null;
if (arguments.length > 2) {
var G__19109__i = 0, G__19109__a = new Array(arguments.length -  2);
while (G__19109__i < G__19109__a.length) {G__19109__a[G__19109__i] = arguments[G__19109__i + 2]; ++G__19109__i;}
G__19108 = new cljs.core.IndexedSeq(G__19109__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__19110__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__19110 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19111__i = 0, G__19111__a = new Array(arguments.length -  2);
while (G__19111__i < G__19111__a.length) {G__19111__a[G__19111__i] = arguments[G__19111__i + 2]; ++G__19111__i;}
  more = new cljs.core.IndexedSeq(G__19111__a,0);
} 
return G__19110__delegate.call(this,x,y,more);};
G__19110.cljs$lang$maxFixedArity = 2;
G__19110.cljs$lang$applyTo = (function (arglist__19112){
var x = cljs.core.first(arglist__19112);
arglist__19112 = cljs.core.next(arglist__19112);
var y = cljs.core.first(arglist__19112);
var more = cljs.core.rest(arglist__19112);
return G__19110__delegate(x,y,more);
});
G__19110.cljs$core$IFn$_invoke$arity$variadic = G__19110__delegate;
return G__19110;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__19113 = null;
if (arguments.length > 2) {
var G__19114__i = 0, G__19114__a = new Array(arguments.length -  2);
while (G__19114__i < G__19114__a.length) {G__19114__a[G__19114__i] = arguments[G__19114__i + 2]; ++G__19114__i;}
G__19113 = new cljs.core.IndexedSeq(G__19114__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__19115__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__19115 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19116__i = 0, G__19116__a = new Array(arguments.length -  2);
while (G__19116__i < G__19116__a.length) {G__19116__a[G__19116__i] = arguments[G__19116__i + 2]; ++G__19116__i;}
  more = new cljs.core.IndexedSeq(G__19116__a,0);
} 
return G__19115__delegate.call(this,x,y,more);};
G__19115.cljs$lang$maxFixedArity = 2;
G__19115.cljs$lang$applyTo = (function (arglist__19117){
var x = cljs.core.first(arglist__19117);
arglist__19117 = cljs.core.next(arglist__19117);
var y = cljs.core.first(arglist__19117);
var more = cljs.core.rest(arglist__19117);
return G__19115__delegate(x,y,more);
});
G__19115.cljs$core$IFn$_invoke$arity$variadic = G__19115__delegate;
return G__19115;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__19118 = null;
if (arguments.length > 2) {
var G__19119__i = 0, G__19119__a = new Array(arguments.length -  2);
while (G__19119__i < G__19119__a.length) {G__19119__a[G__19119__i] = arguments[G__19119__i + 2]; ++G__19119__i;}
G__19118 = new cljs.core.IndexedSeq(G__19119__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19124__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19125 = y;
var G__19126 = cljs.core.first(more);
var G__19127 = cljs.core.next(more);
x = G__19125;
y = G__19126;
more = G__19127;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19124 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19128__i = 0, G__19128__a = new Array(arguments.length -  2);
while (G__19128__i < G__19128__a.length) {G__19128__a[G__19128__i] = arguments[G__19128__i + 2]; ++G__19128__i;}
  more = new cljs.core.IndexedSeq(G__19128__a,0);
} 
return G__19124__delegate.call(this,x,y,more);};
G__19124.cljs$lang$maxFixedArity = 2;
G__19124.cljs$lang$applyTo = (function (arglist__19129){
var x = cljs.core.first(arglist__19129);
arglist__19129 = cljs.core.next(arglist__19129);
var y = cljs.core.first(arglist__19129);
var more = cljs.core.rest(arglist__19129);
return G__19124__delegate(x,y,more);
});
G__19124.cljs$core$IFn$_invoke$arity$variadic = G__19124__delegate;
return G__19124;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19130 = null;
if (arguments.length > 2) {
var G__19131__i = 0, G__19131__a = new Array(arguments.length -  2);
while (G__19131__i < G__19131__a.length) {G__19131__a[G__19131__i] = arguments[G__19131__i + 2]; ++G__19131__i;}
G__19130 = new cljs.core.IndexedSeq(G__19131__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19132 = (n__$1 - (1));
var G__19133 = cljs.core.next(xs);
n__$1 = G__19132;
xs = G__19133;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19137 = x;
return goog.string.buildString(G__19137);
}
});
var str__2 = (function() { 
var G__19138__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19139 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19140 = cljs.core.next(more);
sb = G__19139;
more = G__19140;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19138 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19141__i = 0, G__19141__a = new Array(arguments.length -  1);
while (G__19141__i < G__19141__a.length) {G__19141__a[G__19141__i] = arguments[G__19141__i + 1]; ++G__19141__i;}
  ys = new cljs.core.IndexedSeq(G__19141__a,0);
} 
return G__19138__delegate.call(this,x,ys);};
G__19138.cljs$lang$maxFixedArity = 1;
G__19138.cljs$lang$applyTo = (function (arglist__19142){
var x = cljs.core.first(arglist__19142);
var ys = cljs.core.rest(arglist__19142);
return G__19138__delegate(x,ys);
});
G__19138.cljs$core$IFn$_invoke$arity$variadic = G__19138__delegate;
return G__19138;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19143 = null;
if (arguments.length > 1) {
var G__19144__i = 0, G__19144__a = new Array(arguments.length -  1);
while (G__19144__i < G__19144__a.length) {G__19144__a[G__19144__i] = arguments[G__19144__i + 1]; ++G__19144__i;}
G__19143 = new cljs.core.IndexedSeq(G__19144__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19143);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19145 = cljs.core.next(xs);
var G__19146 = cljs.core.next(ys);
xs = G__19145;
ys = G__19146;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19147 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19148 = cljs.core.next(s);
res = G__19147;
s = G__19148;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19153 = ((h + (cljs.core.hash((function (){var G__19151 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19151) : cljs.core.key.call(null,G__19151));
})()) ^ cljs.core.hash((function (){var G__19152 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19152) : cljs.core.val.call(null,G__19152));
})()))) % (4503599627370496));
var G__19154 = cljs.core.next(s);
h = G__19153;
s = G__19154;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19155 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19156 = cljs.core.next(s__$1);
h = G__19155;
s__$1 = G__19156;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19167_19177 = cljs.core.seq(fn_map);
var chunk__19168_19178 = null;
var count__19169_19179 = (0);
var i__19170_19180 = (0);
while(true){
if((i__19170_19180 < count__19169_19179)){
var vec__19171_19181 = chunk__19168_19178.cljs$core$IIndexed$_nth$arity$2(null,i__19170_19180);
var key_name_19182 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19171_19181,(0),null);
var f_19183 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19171_19181,(1),null);
var str_name_19184 = (function (){var G__19172 = key_name_19182;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19172) : cljs.core.name.call(null,G__19172));
})();
(obj[str_name_19184] = f_19183);

var G__19185 = seq__19167_19177;
var G__19186 = chunk__19168_19178;
var G__19187 = count__19169_19179;
var G__19188 = (i__19170_19180 + (1));
seq__19167_19177 = G__19185;
chunk__19168_19178 = G__19186;
count__19169_19179 = G__19187;
i__19170_19180 = G__19188;
continue;
} else {
var temp__4126__auto___19189 = cljs.core.seq(seq__19167_19177);
if(temp__4126__auto___19189){
var seq__19167_19190__$1 = temp__4126__auto___19189;
if(cljs.core.chunked_seq_QMARK_(seq__19167_19190__$1)){
var c__4593__auto___19191 = (function (){var G__19173 = seq__19167_19190__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19173) : cljs.core.chunk_first.call(null,G__19173));
})();
var G__19192 = (function (){var G__19174 = seq__19167_19190__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19174) : cljs.core.chunk_rest.call(null,G__19174));
})();
var G__19193 = c__4593__auto___19191;
var G__19194 = cljs.core.count(c__4593__auto___19191);
var G__19195 = (0);
seq__19167_19177 = G__19192;
chunk__19168_19178 = G__19193;
count__19169_19179 = G__19194;
i__19170_19180 = G__19195;
continue;
} else {
var vec__19175_19196 = cljs.core.first(seq__19167_19190__$1);
var key_name_19197 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19175_19196,(0),null);
var f_19198 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19175_19196,(1),null);
var str_name_19199 = (function (){var G__19176 = key_name_19197;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19176) : cljs.core.name.call(null,G__19176));
})();
(obj[str_name_19199] = f_19198);

var G__19200 = cljs.core.next(seq__19167_19190__$1);
var G__19201 = null;
var G__19202 = (0);
var G__19203 = (0);
seq__19167_19177 = G__19200;
chunk__19168_19178 = G__19201;
count__19169_19179 = G__19202;
i__19170_19180 = G__19203;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__19205 = coll;
if(G__19205){
var bit__4487__auto__ = (G__19205.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4487__auto__) || (G__19205.cljs$core$IReversible$)){
return true;
} else {
if((!G__19205.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19205);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19205);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__19206 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__19206;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__19207 = (i - (1));
var G__19208 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__19207;
r = G__19208;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__19209__i = 0, G__19209__a = new Array(arguments.length -  0);
while (G__19209__i < G__19209__a.length) {G__19209__a[G__19209__i] = arguments[G__19209__i + 0]; ++G__19209__i;}
  xs = new cljs.core.IndexedSeq(G__19209__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__19210){
var xs = cljs.core.seq(arglist__19210);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3806__auto__ = (coll == null);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var G__19214 = coll;
if(G__19214){
var bit__4480__auto__ = (G__19214.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4480__auto__) || (G__19214.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__19216 = x;
if(G__19216){
var bit__4487__auto__ = (G__19216.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4487__auto__) || (G__19216.cljs$core$IList$)){
return true;
} else {
if((!G__19216.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19216);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19216);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3794__auto__ = cljs.core.not(a.ns);
if(and__3794__auto__){
return b.ns;
} else {
return and__3794__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19223 = a.ns;
var G__19224 = b.ns;
return goog.array.defaultCompare(G__19223,G__19224);
})();
if(((0) === nsc)){
var G__19225 = a.name;
var G__19226 = b.name;
return goog.array.defaultCompare(G__19225,G__19226);
} else {
return nsc;
}
}
} else {
var G__19227 = a.name;
var G__19228 = b.name;
return goog.array.defaultCompare(G__19227,G__19228);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4227__auto__ = self__._hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__19230 = null;
var G__19230__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__19230__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__19230 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19230__2.call(this,self__,coll);
case 3:
return G__19230__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19230.cljs$core$IFn$_invoke$arity$2 = G__19230__2;
G__19230.cljs$core$IFn$_invoke$arity$3 = G__19230__3;
return G__19230;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args19229){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19229)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__19232 = x;
if(G__19232){
var bit__4480__auto__ = (G__19232.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4480__auto__) || (G__19232.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__19234 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19234) : cljs.core.name.call(null,G__19234));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__19235 = ls.sval();
ls = G__19235;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__19237 = s;
if(G__19237){
var bit__4480__auto__ = (G__19237.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4480__auto__) || (G__19237.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__19238 = cljs.core.next(s__$1);
s__$1 = G__19238;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_19239 = (0);
var xs_19240 = cljs.core.seq(coll);
while(true){
if(xs_19240){
(ret[i_19239] = cljs.core.to_array(cljs.core.first(xs_19240)));

var G__19241 = (i_19239 + (1));
var G__19242 = cljs.core.next(xs_19240);
i_19239 = G__19241;
xs_19240 = G__19242;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19245 = (i + (1));
var G__19246 = cljs.core.next(s__$1);
i = G__19245;
s__$1 = G__19246;
continue;
} else {
return a;
}
break;
}
} else {
var n__4693__auto___19247 = size;
var i_19248 = (0);
while(true){
if((i_19248 < n__4693__auto___19247)){
(a[i_19248] = init_val_or_seq);

var G__19249 = (i_19248 + (1));
i_19248 = G__19249;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19252 = (i + (1));
var G__19253 = cljs.core.next(s__$1);
i = G__19252;
s__$1 = G__19253;
continue;
} else {
return a;
}
break;
}
} else {
var n__4693__auto___19254 = size;
var i_19255 = (0);
while(true){
if((i_19255 < n__4693__auto___19254)){
(a[i_19255] = init_val_or_seq);

var G__19256 = (i_19255 + (1));
i_19255 = G__19256;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19259 = (i + (1));
var G__19260 = cljs.core.next(s__$1);
i = G__19259;
s__$1 = G__19260;
continue;
} else {
return a;
}
break;
}
} else {
var n__4693__auto___19261 = size;
var i_19262 = (0);
while(true){
if((i_19262 < n__4693__auto___19261)){
(a[i_19262] = init_val_or_seq);

var G__19263 = (i_19262 + (1));
i_19262 = G__19263;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19266 = (i + (1));
var G__19267 = cljs.core.next(s__$1);
i = G__19266;
s__$1 = G__19267;
continue;
} else {
return a;
}
break;
}
} else {
var n__4693__auto___19268 = size;
var i_19269 = (0);
while(true){
if((i_19269 < n__4693__auto___19268)){
(a[i_19269] = init_val_or_seq);

var G__19270 = (i_19269 + (1));
i_19269 = G__19270;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19271 = cljs.core.next(s__$1);
var G__19272 = (i - (1));
var G__19273 = (sum + (1));
s__$1 = G__19271;
i = G__19272;
sum = G__19273;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19293__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19293 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19294__i = 0, G__19294__a = new Array(arguments.length -  2);
while (G__19294__i < G__19294__a.length) {G__19294__a[G__19294__i] = arguments[G__19294__i + 2]; ++G__19294__i;}
  zs = new cljs.core.IndexedSeq(G__19294__a,0);
} 
return G__19293__delegate.call(this,x,y,zs);};
G__19293.cljs$lang$maxFixedArity = 2;
G__19293.cljs$lang$applyTo = (function (arglist__19295){
var x = cljs.core.first(arglist__19295);
arglist__19295 = cljs.core.next(arglist__19295);
var y = cljs.core.first(arglist__19295);
var zs = cljs.core.rest(arglist__19295);
return G__19293__delegate(x,y,zs);
});
G__19293.cljs$core$IFn$_invoke$arity$variadic = G__19293__delegate;
return G__19293;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19296 = null;
if (arguments.length > 2) {
var G__19297__i = 0, G__19297__a = new Array(arguments.length -  2);
while (G__19297__i < G__19297__a.length) {G__19297__a[G__19297__i] = arguments[G__19297__i + 2]; ++G__19297__i;}
G__19296 = new cljs.core.IndexedSeq(G__19297__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19298__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19298 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19299__i = 0, G__19299__a = new Array(arguments.length -  4);
while (G__19299__i < G__19299__a.length) {G__19299__a[G__19299__i] = arguments[G__19299__i + 4]; ++G__19299__i;}
  more = new cljs.core.IndexedSeq(G__19299__a,0);
} 
return G__19298__delegate.call(this,a,b,c,d,more);};
G__19298.cljs$lang$maxFixedArity = 4;
G__19298.cljs$lang$applyTo = (function (arglist__19300){
var a = cljs.core.first(arglist__19300);
arglist__19300 = cljs.core.next(arglist__19300);
var b = cljs.core.first(arglist__19300);
arglist__19300 = cljs.core.next(arglist__19300);
var c = cljs.core.first(arglist__19300);
arglist__19300 = cljs.core.next(arglist__19300);
var d = cljs.core.first(arglist__19300);
var more = cljs.core.rest(arglist__19300);
return G__19298__delegate(a,b,c,d,more);
});
G__19298.cljs$core$IFn$_invoke$arity$variadic = G__19298__delegate;
return G__19298;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19301 = null;
if (arguments.length > 4) {
var G__19302__i = 0, G__19302__a = new Array(arguments.length -  4);
while (G__19302__i < G__19302__a.length) {G__19302__a[G__19302__i] = arguments[G__19302__i + 4]; ++G__19302__i;}
G__19301 = new cljs.core.IndexedSeq(G__19302__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19303__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19304 = ntcoll;
var G__19305 = cljs.core.first(vals);
var G__19306 = cljs.core.next(vals);
tcoll = G__19304;
val = G__19305;
vals = G__19306;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19303 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19307__i = 0, G__19307__a = new Array(arguments.length -  2);
while (G__19307__i < G__19307__a.length) {G__19307__a[G__19307__i] = arguments[G__19307__i + 2]; ++G__19307__i;}
  vals = new cljs.core.IndexedSeq(G__19307__a,0);
} 
return G__19303__delegate.call(this,tcoll,val,vals);};
G__19303.cljs$lang$maxFixedArity = 2;
G__19303.cljs$lang$applyTo = (function (arglist__19308){
var tcoll = cljs.core.first(arglist__19308);
arglist__19308 = cljs.core.next(arglist__19308);
var val = cljs.core.first(arglist__19308);
var vals = cljs.core.rest(arglist__19308);
return G__19303__delegate(tcoll,val,vals);
});
G__19303.cljs$core$IFn$_invoke$arity$variadic = G__19303__delegate;
return G__19303;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19309 = null;
if (arguments.length > 2) {
var G__19310__i = 0, G__19310__a = new Array(arguments.length -  2);
while (G__19310__i < G__19310__a.length) {G__19310__a[G__19310__i] = arguments[G__19310__i + 2]; ++G__19310__i;}
G__19309 = new cljs.core.IndexedSeq(G__19310__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19311__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19312 = ntcoll;
var G__19313 = cljs.core.first(kvs);
var G__19314 = cljs.core.second(kvs);
var G__19315 = cljs.core.nnext(kvs);
tcoll = G__19312;
key = G__19313;
val = G__19314;
kvs = G__19315;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19311 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19316__i = 0, G__19316__a = new Array(arguments.length -  3);
while (G__19316__i < G__19316__a.length) {G__19316__a[G__19316__i] = arguments[G__19316__i + 3]; ++G__19316__i;}
  kvs = new cljs.core.IndexedSeq(G__19316__a,0);
} 
return G__19311__delegate.call(this,tcoll,key,val,kvs);};
G__19311.cljs$lang$maxFixedArity = 3;
G__19311.cljs$lang$applyTo = (function (arglist__19317){
var tcoll = cljs.core.first(arglist__19317);
arglist__19317 = cljs.core.next(arglist__19317);
var key = cljs.core.first(arglist__19317);
arglist__19317 = cljs.core.next(arglist__19317);
var val = cljs.core.first(arglist__19317);
var kvs = cljs.core.rest(arglist__19317);
return G__19311__delegate(tcoll,key,val,kvs);
});
G__19311.cljs$core$IFn$_invoke$arity$variadic = G__19311__delegate;
return G__19311;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19318 = null;
if (arguments.length > 3) {
var G__19319__i = 0, G__19319__a = new Array(arguments.length -  3);
while (G__19319__i < G__19319__a.length) {G__19319__a[G__19319__i] = arguments[G__19319__i + 3]; ++G__19319__i;}
G__19318 = new cljs.core.IndexedSeq(G__19319__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__19320__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__19321 = ntcoll;
var G__19322 = cljs.core.first(ks);
var G__19323 = cljs.core.next(ks);
tcoll = G__19321;
key = G__19322;
ks = G__19323;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19320 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19324__i = 0, G__19324__a = new Array(arguments.length -  2);
while (G__19324__i < G__19324__a.length) {G__19324__a[G__19324__i] = arguments[G__19324__i + 2]; ++G__19324__i;}
  ks = new cljs.core.IndexedSeq(G__19324__a,0);
} 
return G__19320__delegate.call(this,tcoll,key,ks);};
G__19320.cljs$lang$maxFixedArity = 2;
G__19320.cljs$lang$applyTo = (function (arglist__19325){
var tcoll = cljs.core.first(arglist__19325);
arglist__19325 = cljs.core.next(arglist__19325);
var key = cljs.core.first(arglist__19325);
var ks = cljs.core.rest(arglist__19325);
return G__19320__delegate(tcoll,key,ks);
});
G__19320.cljs$core$IFn$_invoke$arity$variadic = G__19320__delegate;
return G__19320;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__19326 = null;
if (arguments.length > 2) {
var G__19327__i = 0, G__19327__a = new Array(arguments.length -  2);
while (G__19327__i < G__19327__a.length) {G__19327__a[G__19327__i] = arguments[G__19327__i + 2]; ++G__19327__i;}
G__19326 = new cljs.core.IndexedSeq(G__19327__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__19326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__19328__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19329 = ntcoll;
var G__19330 = cljs.core.first(vals);
var G__19331 = cljs.core.next(vals);
tcoll = G__19329;
val = G__19330;
vals = G__19331;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19328 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19332__i = 0, G__19332__a = new Array(arguments.length -  2);
while (G__19332__i < G__19332__a.length) {G__19332__a[G__19332__i] = arguments[G__19332__i + 2]; ++G__19332__i;}
  vals = new cljs.core.IndexedSeq(G__19332__a,0);
} 
return G__19328__delegate.call(this,tcoll,val,vals);};
G__19328.cljs$lang$maxFixedArity = 2;
G__19328.cljs$lang$applyTo = (function (arglist__19333){
var tcoll = cljs.core.first(arglist__19333);
arglist__19333 = cljs.core.next(arglist__19333);
var val = cljs.core.first(arglist__19333);
var vals = cljs.core.rest(arglist__19333);
return G__19328__delegate(tcoll,val,vals);
});
G__19328.cljs$core$IFn$_invoke$arity$variadic = G__19328__delegate;
return G__19328;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__19334 = null;
if (arguments.length > 2) {
var G__19335__i = 0, G__19335__a = new Array(arguments.length -  2);
while (G__19335__i < G__19335__a.length) {G__19335__a[G__19335__i] = arguments[G__19335__i + 2]; ++G__19335__i;}
G__19334 = new cljs.core.IndexedSeq(G__19335__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4737 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4737);
} else {
var G__19546 = a4737;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19546) : f.call(null,G__19546));
}
} else {
var b4738 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4737,b4738);
} else {
var G__19547 = a4737;
var G__19548 = b4738;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19547,G__19548) : f.call(null,G__19547,G__19548));
}
} else {
var c4739 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4737,b4738,c4739);
} else {
var G__19549 = a4737;
var G__19550 = b4738;
var G__19551 = c4739;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19549,G__19550,G__19551) : f.call(null,G__19549,G__19550,G__19551));
}
} else {
var d4740 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4737,b4738,c4739,d4740);
} else {
var G__19552 = a4737;
var G__19553 = b4738;
var G__19554 = c4739;
var G__19555 = d4740;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19552,G__19553,G__19554,G__19555) : f.call(null,G__19552,G__19553,G__19554,G__19555));
}
} else {
var e4741 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4737,b4738,c4739,d4740,e4741);
} else {
var G__19556 = a4737;
var G__19557 = b4738;
var G__19558 = c4739;
var G__19559 = d4740;
var G__19560 = e4741;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19556,G__19557,G__19558,G__19559,G__19560) : f.call(null,G__19556,G__19557,G__19558,G__19559,G__19560));
}
} else {
var f4742 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4737,b4738,c4739,d4740,e4741,f4742);
} else {
var G__19561 = a4737;
var G__19562 = b4738;
var G__19563 = c4739;
var G__19564 = d4740;
var G__19565 = e4741;
var G__19566 = f4742;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19561,G__19562,G__19563,G__19564,G__19565,G__19566) : f.call(null,G__19561,G__19562,G__19563,G__19564,G__19565,G__19566));
}
} else {
var g4743 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4737,b4738,c4739,d4740,e4741,f4742,g4743);
} else {
var G__19567 = a4737;
var G__19568 = b4738;
var G__19569 = c4739;
var G__19570 = d4740;
var G__19571 = e4741;
var G__19572 = f4742;
var G__19573 = g4743;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573) : f.call(null,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573));
}
} else {
var h4744 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744);
} else {
var G__19574 = a4737;
var G__19575 = b4738;
var G__19576 = c4739;
var G__19577 = d4740;
var G__19578 = e4741;
var G__19579 = f4742;
var G__19580 = g4743;
var G__19581 = h4744;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19574,G__19575,G__19576,G__19577,G__19578,G__19579,G__19580,G__19581) : f.call(null,G__19574,G__19575,G__19576,G__19577,G__19578,G__19579,G__19580,G__19581));
}
} else {
var i4745 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745);
} else {
var G__19582 = a4737;
var G__19583 = b4738;
var G__19584 = c4739;
var G__19585 = d4740;
var G__19586 = e4741;
var G__19587 = f4742;
var G__19588 = g4743;
var G__19589 = h4744;
var G__19590 = i4745;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590) : f.call(null,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590));
}
} else {
var j4746 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746);
} else {
var G__19591 = a4737;
var G__19592 = b4738;
var G__19593 = c4739;
var G__19594 = d4740;
var G__19595 = e4741;
var G__19596 = f4742;
var G__19597 = g4743;
var G__19598 = h4744;
var G__19599 = i4745;
var G__19600 = j4746;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19591,G__19592,G__19593,G__19594,G__19595,G__19596,G__19597,G__19598,G__19599,G__19600) : f.call(null,G__19591,G__19592,G__19593,G__19594,G__19595,G__19596,G__19597,G__19598,G__19599,G__19600));
}
} else {
var k4747 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747);
} else {
var G__19601 = a4737;
var G__19602 = b4738;
var G__19603 = c4739;
var G__19604 = d4740;
var G__19605 = e4741;
var G__19606 = f4742;
var G__19607 = g4743;
var G__19608 = h4744;
var G__19609 = i4745;
var G__19610 = j4746;
var G__19611 = k4747;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609,G__19610,G__19611) : f.call(null,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609,G__19610,G__19611));
}
} else {
var l4748 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748);
} else {
var G__19612 = a4737;
var G__19613 = b4738;
var G__19614 = c4739;
var G__19615 = d4740;
var G__19616 = e4741;
var G__19617 = f4742;
var G__19618 = g4743;
var G__19619 = h4744;
var G__19620 = i4745;
var G__19621 = j4746;
var G__19622 = k4747;
var G__19623 = l4748;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19612,G__19613,G__19614,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623) : f.call(null,G__19612,G__19613,G__19614,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623));
}
} else {
var m4749 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749);
} else {
var G__19624 = a4737;
var G__19625 = b4738;
var G__19626 = c4739;
var G__19627 = d4740;
var G__19628 = e4741;
var G__19629 = f4742;
var G__19630 = g4743;
var G__19631 = h4744;
var G__19632 = i4745;
var G__19633 = j4746;
var G__19634 = k4747;
var G__19635 = l4748;
var G__19636 = m4749;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636) : f.call(null,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636));
}
} else {
var n4750 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750);
} else {
var G__19637 = a4737;
var G__19638 = b4738;
var G__19639 = c4739;
var G__19640 = d4740;
var G__19641 = e4741;
var G__19642 = f4742;
var G__19643 = g4743;
var G__19644 = h4744;
var G__19645 = i4745;
var G__19646 = j4746;
var G__19647 = k4747;
var G__19648 = l4748;
var G__19649 = m4749;
var G__19650 = n4750;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19637,G__19638,G__19639,G__19640,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646,G__19647,G__19648,G__19649,G__19650) : f.call(null,G__19637,G__19638,G__19639,G__19640,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646,G__19647,G__19648,G__19649,G__19650));
}
} else {
var o4751 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750,o4751);
} else {
var G__19651 = a4737;
var G__19652 = b4738;
var G__19653 = c4739;
var G__19654 = d4740;
var G__19655 = e4741;
var G__19656 = f4742;
var G__19657 = g4743;
var G__19658 = h4744;
var G__19659 = i4745;
var G__19660 = j4746;
var G__19661 = k4747;
var G__19662 = l4748;
var G__19663 = m4749;
var G__19664 = n4750;
var G__19665 = o4751;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19651,G__19652,G__19653,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663,G__19664,G__19665) : f.call(null,G__19651,G__19652,G__19653,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663,G__19664,G__19665));
}
} else {
var p4752 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750,o4751,p4752);
} else {
var G__19666 = a4737;
var G__19667 = b4738;
var G__19668 = c4739;
var G__19669 = d4740;
var G__19670 = e4741;
var G__19671 = f4742;
var G__19672 = g4743;
var G__19673 = h4744;
var G__19674 = i4745;
var G__19675 = j4746;
var G__19676 = k4747;
var G__19677 = l4748;
var G__19678 = m4749;
var G__19679 = n4750;
var G__19680 = o4751;
var G__19681 = p4752;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19666,G__19667,G__19668,G__19669,G__19670,G__19671,G__19672,G__19673,G__19674,G__19675,G__19676,G__19677,G__19678,G__19679,G__19680,G__19681) : f.call(null,G__19666,G__19667,G__19668,G__19669,G__19670,G__19671,G__19672,G__19673,G__19674,G__19675,G__19676,G__19677,G__19678,G__19679,G__19680,G__19681));
}
} else {
var q4753 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750,o4751,p4752,q4753);
} else {
var G__19682 = a4737;
var G__19683 = b4738;
var G__19684 = c4739;
var G__19685 = d4740;
var G__19686 = e4741;
var G__19687 = f4742;
var G__19688 = g4743;
var G__19689 = h4744;
var G__19690 = i4745;
var G__19691 = j4746;
var G__19692 = k4747;
var G__19693 = l4748;
var G__19694 = m4749;
var G__19695 = n4750;
var G__19696 = o4751;
var G__19697 = p4752;
var G__19698 = q4753;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19682,G__19683,G__19684,G__19685,G__19686,G__19687,G__19688,G__19689,G__19690,G__19691,G__19692,G__19693,G__19694,G__19695,G__19696,G__19697,G__19698) : f.call(null,G__19682,G__19683,G__19684,G__19685,G__19686,G__19687,G__19688,G__19689,G__19690,G__19691,G__19692,G__19693,G__19694,G__19695,G__19696,G__19697,G__19698));
}
} else {
var r4754 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750,o4751,p4752,q4753,r4754);
} else {
var G__19699 = a4737;
var G__19700 = b4738;
var G__19701 = c4739;
var G__19702 = d4740;
var G__19703 = e4741;
var G__19704 = f4742;
var G__19705 = g4743;
var G__19706 = h4744;
var G__19707 = i4745;
var G__19708 = j4746;
var G__19709 = k4747;
var G__19710 = l4748;
var G__19711 = m4749;
var G__19712 = n4750;
var G__19713 = o4751;
var G__19714 = p4752;
var G__19715 = q4753;
var G__19716 = r4754;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19699,G__19700,G__19701,G__19702,G__19703,G__19704,G__19705,G__19706,G__19707,G__19708,G__19709,G__19710,G__19711,G__19712,G__19713,G__19714,G__19715,G__19716) : f.call(null,G__19699,G__19700,G__19701,G__19702,G__19703,G__19704,G__19705,G__19706,G__19707,G__19708,G__19709,G__19710,G__19711,G__19712,G__19713,G__19714,G__19715,G__19716));
}
} else {
var s4755 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750,o4751,p4752,q4753,r4754,s4755);
} else {
var G__19717 = a4737;
var G__19718 = b4738;
var G__19719 = c4739;
var G__19720 = d4740;
var G__19721 = e4741;
var G__19722 = f4742;
var G__19723 = g4743;
var G__19724 = h4744;
var G__19725 = i4745;
var G__19726 = j4746;
var G__19727 = k4747;
var G__19728 = l4748;
var G__19729 = m4749;
var G__19730 = n4750;
var G__19731 = o4751;
var G__19732 = p4752;
var G__19733 = q4753;
var G__19734 = r4754;
var G__19735 = s4755;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19717,G__19718,G__19719,G__19720,G__19721,G__19722,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730,G__19731,G__19732,G__19733,G__19734,G__19735) : f.call(null,G__19717,G__19718,G__19719,G__19720,G__19721,G__19722,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730,G__19731,G__19732,G__19733,G__19734,G__19735));
}
} else {
var t4756 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4737,b4738,c4739,d4740,e4741,f4742,g4743,h4744,i4745,j4746,k4747,l4748,m4749,n4750,o4751,p4752,q4753,r4754,s4755,t4756);
} else {
var G__19736 = a4737;
var G__19737 = b4738;
var G__19738 = c4739;
var G__19739 = d4740;
var G__19740 = e4741;
var G__19741 = f4742;
var G__19742 = g4743;
var G__19743 = h4744;
var G__19744 = i4745;
var G__19745 = j4746;
var G__19746 = k4747;
var G__19747 = l4748;
var G__19748 = m4749;
var G__19749 = n4750;
var G__19750 = o4751;
var G__19751 = p4752;
var G__19752 = q4753;
var G__19753 = r4754;
var G__19754 = s4755;
var G__19755 = t4756;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19736,G__19737,G__19738,G__19739,G__19740,G__19741,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752,G__19753,G__19754,G__19755) : f.call(null,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752,G__19753,G__19754,G__19755));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__19756__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__19756 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__19757__i = 0, G__19757__a = new Array(arguments.length -  5);
while (G__19757__i < G__19757__a.length) {G__19757__a[G__19757__i] = arguments[G__19757__i + 5]; ++G__19757__i;}
  args = new cljs.core.IndexedSeq(G__19757__a,0);
} 
return G__19756__delegate.call(this,f,a,b,c,d,args);};
G__19756.cljs$lang$maxFixedArity = 5;
G__19756.cljs$lang$applyTo = (function (arglist__19758){
var f = cljs.core.first(arglist__19758);
arglist__19758 = cljs.core.next(arglist__19758);
var a = cljs.core.first(arglist__19758);
arglist__19758 = cljs.core.next(arglist__19758);
var b = cljs.core.first(arglist__19758);
arglist__19758 = cljs.core.next(arglist__19758);
var c = cljs.core.first(arglist__19758);
arglist__19758 = cljs.core.next(arglist__19758);
var d = cljs.core.first(arglist__19758);
var args = cljs.core.rest(arglist__19758);
return G__19756__delegate(f,a,b,c,d,args);
});
G__19756.cljs$core$IFn$_invoke$arity$variadic = G__19756__delegate;
return G__19756;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__19759 = null;
if (arguments.length > 5) {
var G__19760__i = 0, G__19760__a = new Array(arguments.length -  5);
while (G__19760__i < G__19760__a.length) {G__19760__a[G__19760__i] = arguments[G__19760__i + 5]; ++G__19760__i;}
G__19759 = new cljs.core.IndexedSeq(G__19760__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__19759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__19776 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19776) : f.call(null,G__19776));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__19777 = cljs.core.meta(obj);
var G__19778 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19777,G__19778) : f.call(null,G__19777,G__19778));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__19779 = cljs.core.meta(obj);
var G__19780 = a;
var G__19781 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19779,G__19780,G__19781) : f.call(null,G__19779,G__19780,G__19781));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__19782 = cljs.core.meta(obj);
var G__19783 = a;
var G__19784 = b;
var G__19785 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19782,G__19783,G__19784,G__19785) : f.call(null,G__19782,G__19783,G__19784,G__19785));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__19786 = cljs.core.meta(obj);
var G__19787 = a;
var G__19788 = b;
var G__19789 = c;
var G__19790 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19786,G__19787,G__19788,G__19789,G__19790) : f.call(null,G__19786,G__19787,G__19788,G__19789,G__19790));
})());
});
var vary_meta__7 = (function() { 
var G__19791__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__19791 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__19792__i = 0, G__19792__a = new Array(arguments.length -  6);
while (G__19792__i < G__19792__a.length) {G__19792__a[G__19792__i] = arguments[G__19792__i + 6]; ++G__19792__i;}
  args = new cljs.core.IndexedSeq(G__19792__a,0);
} 
return G__19791__delegate.call(this,obj,f,a,b,c,d,args);};
G__19791.cljs$lang$maxFixedArity = 6;
G__19791.cljs$lang$applyTo = (function (arglist__19793){
var obj = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var f = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var a = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var b = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var c = cljs.core.first(arglist__19793);
arglist__19793 = cljs.core.next(arglist__19793);
var d = cljs.core.first(arglist__19793);
var args = cljs.core.rest(arglist__19793);
return G__19791__delegate(obj,f,a,b,c,d,args);
});
G__19791.cljs$core$IFn$_invoke$arity$variadic = G__19791__delegate;
return G__19791;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__19794 = null;
if (arguments.length > 6) {
var G__19795__i = 0, G__19795__a = new Array(arguments.length -  6);
while (G__19795__i < G__19795__a.length) {G__19795__a[G__19795__i] = arguments[G__19795__i + 6]; ++G__19795__i;}
G__19794 = new cljs.core.IndexedSeq(G__19795__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__19794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__19796__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__19796 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19797__i = 0, G__19797__a = new Array(arguments.length -  2);
while (G__19797__i < G__19797__a.length) {G__19797__a[G__19797__i] = arguments[G__19797__i + 2]; ++G__19797__i;}
  more = new cljs.core.IndexedSeq(G__19797__a,0);
} 
return G__19796__delegate.call(this,x,y,more);};
G__19796.cljs$lang$maxFixedArity = 2;
G__19796.cljs$lang$applyTo = (function (arglist__19798){
var x = cljs.core.first(arglist__19798);
arglist__19798 = cljs.core.next(arglist__19798);
var y = cljs.core.first(arglist__19798);
var more = cljs.core.rest(arglist__19798);
return G__19796__delegate(x,y,more);
});
G__19796.cljs$core$IFn$_invoke$arity$variadic = G__19796__delegate;
return G__19796;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__19799 = null;
if (arguments.length > 2) {
var G__19800__i = 0, G__19800__a = new Array(arguments.length -  2);
while (G__19800__i < G__19800__a.length) {G__19800__a[G__19800__i] = arguments[G__19800__i + 2]; ++G__19800__i;}
G__19799 = new cljs.core.IndexedSeq(G__19800__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t19804 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t19804 = (function (nil_iter,meta19805){
this.nil_iter = nil_iter;
this.meta19805 = meta19805;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t19804.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t19804.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t19804.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t19804.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_19806){
var self__ = this;
var _19806__$1 = this;
return self__.meta19805;
});

cljs.core.t19804.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_19806,meta19805__$1){
var self__ = this;
var _19806__$1 = this;
return (new cljs.core.t19804(self__.nil_iter,meta19805__$1));
});

cljs.core.t19804.cljs$lang$type = true;

cljs.core.t19804.cljs$lang$ctorStr = "cljs.core/t19804";

cljs.core.t19804.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/t19804");
});

cljs.core.__GT_t19804 = (function __GT_t19804(nil_iter__$1,meta19805){
return (new cljs.core.t19804(nil_iter__$1,meta19805));
});

}

return (new cljs.core.t19804(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3794__auto__ = !((lt.stepper == null));
if(and__3794__auto__){
return self__.iter.hasNext();
} else {
return and__3794__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__19807 = lt;
var G__19808 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19807,G__19808) : self__.xform.call(null,G__19807,G__19808));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19809 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19809) : self__.xform.call(null,G__19809));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__19811 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19811) : xform.call(null,G__19811));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__19813 = cljs.core.next(iters__$1);
iters__$1 = G__19813;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4693__auto___19814 = self__.iters.length;
var i_19815 = (0);
while(true){
if((i_19815 < n__4693__auto___19814)){
(self__.nexts[i_19815] = (self__.iters[i_19815]).next());

var G__19816 = (i_19815 + (1));
i_19815 = G__19816;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3794__auto__ = !((lt.stepper == null));
if(and__3794__auto__){
return this$.hasNext();
} else {
return and__3794__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19812 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19812) : self__.xform.call(null,G__19812));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__19821 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19821) : xform.call(null,G__19821));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__19822_19826 = cljs.core.seq(colls);
var chunk__19823_19827 = null;
var count__19824_19828 = (0);
var i__19825_19829 = (0);
while(true){
if((i__19825_19829 < count__19824_19828)){
var coll_19830 = chunk__19823_19827.cljs$core$IIndexed$_nth$arity$2(null,i__19825_19829);
iters.push(cljs.core.iter(coll_19830));

var G__19831 = seq__19822_19826;
var G__19832 = chunk__19823_19827;
var G__19833 = count__19824_19828;
var G__19834 = (i__19825_19829 + (1));
seq__19822_19826 = G__19831;
chunk__19823_19827 = G__19832;
count__19824_19828 = G__19833;
i__19825_19829 = G__19834;
continue;
} else {
var temp__4126__auto___19835 = cljs.core.seq(seq__19822_19826);
if(temp__4126__auto___19835){
var seq__19822_19836__$1 = temp__4126__auto___19835;
if(cljs.core.chunked_seq_QMARK_(seq__19822_19836__$1)){
var c__4593__auto___19837 = cljs.core.chunk_first(seq__19822_19836__$1);
var G__19838 = cljs.core.chunk_rest(seq__19822_19836__$1);
var G__19839 = c__4593__auto___19837;
var G__19840 = cljs.core.count(c__4593__auto___19837);
var G__19841 = (0);
seq__19822_19826 = G__19838;
chunk__19823_19827 = G__19839;
count__19824_19828 = G__19840;
i__19825_19829 = G__19841;
continue;
} else {
var coll_19842 = cljs.core.first(seq__19822_19836__$1);
iters.push(cljs.core.iter(coll_19842));

var G__19843 = cljs.core.next(seq__19822_19836__$1);
var G__19844 = null;
var G__19845 = (0);
var G__19846 = (0);
seq__19822_19826 = G__19843;
chunk__19823_19827 = G__19844;
count__19824_19828 = G__19845;
i__19825_19829 = G__19846;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3806__auto__ = cljs.core.seq(coll);
if(or__3806__auto__){
return or__3806__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__19847__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__19847 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__19848__i = 0, G__19848__a = new Array(arguments.length -  2);
while (G__19848__i < G__19848__a.length) {G__19848__a[G__19848__i] = arguments[G__19848__i + 2]; ++G__19848__i;}
  colls = new cljs.core.IndexedSeq(G__19848__a,0);
} 
return G__19847__delegate.call(this,xform,coll,colls);};
G__19847.cljs$lang$maxFixedArity = 2;
G__19847.cljs$lang$applyTo = (function (arglist__19849){
var xform = cljs.core.first(arglist__19849);
arglist__19849 = cljs.core.next(arglist__19849);
var coll = cljs.core.first(arglist__19849);
var colls = cljs.core.rest(arglist__19849);
return G__19847__delegate(xform,coll,colls);
});
G__19847.cljs$core$IFn$_invoke$arity$variadic = G__19847__delegate;
return G__19847;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__19850 = null;
if (arguments.length > 2) {
var G__19851__i = 0, G__19851__a = new Array(arguments.length -  2);
while (G__19851__i < G__19851__a.length) {G__19851__a[G__19851__i] = arguments[G__19851__i + 2]; ++G__19851__i;}
G__19850 = new cljs.core.IndexedSeq(G__19851__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__19850);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__19853 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19853) : pred.call(null,G__19853));
})())){
var G__19854 = pred;
var G__19855 = cljs.core.next(coll);
pred = G__19854;
coll = G__19855;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3806__auto__ = (function (){var G__19859 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19859) : pred.call(null,G__19859));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var G__19860 = pred;
var G__19861 = cljs.core.next(coll);
pred = G__19860;
coll = G__19861;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__19868 = null;
var G__19868__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__19868__1 = (function (x){
return cljs.core.not((function (){var G__19865 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19865) : f.call(null,G__19865));
})());
});
var G__19868__2 = (function (x,y){
return cljs.core.not((function (){var G__19866 = x;
var G__19867 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19866,G__19867) : f.call(null,G__19866,G__19867));
})());
});
var G__19868__3 = (function() { 
var G__19869__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__19869 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19870__i = 0, G__19870__a = new Array(arguments.length -  2);
while (G__19870__i < G__19870__a.length) {G__19870__a[G__19870__i] = arguments[G__19870__i + 2]; ++G__19870__i;}
  zs = new cljs.core.IndexedSeq(G__19870__a,0);
} 
return G__19869__delegate.call(this,x,y,zs);};
G__19869.cljs$lang$maxFixedArity = 2;
G__19869.cljs$lang$applyTo = (function (arglist__19871){
var x = cljs.core.first(arglist__19871);
arglist__19871 = cljs.core.next(arglist__19871);
var y = cljs.core.first(arglist__19871);
var zs = cljs.core.rest(arglist__19871);
return G__19869__delegate(x,y,zs);
});
G__19869.cljs$core$IFn$_invoke$arity$variadic = G__19869__delegate;
return G__19869;
})()
;
G__19868 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__19868__0.call(this);
case 1:
return G__19868__1.call(this,x);
case 2:
return G__19868__2.call(this,x,y);
default:
var G__19872 = null;
if (arguments.length > 2) {
var G__19873__i = 0, G__19873__a = new Array(arguments.length -  2);
while (G__19873__i < G__19873__a.length) {G__19873__a[G__19873__i] = arguments[G__19873__i + 2]; ++G__19873__i;}
G__19872 = new cljs.core.IndexedSeq(G__19873__a,0);
}
return G__19868__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19868.cljs$lang$maxFixedArity = 2;
G__19868.cljs$lang$applyTo = G__19868__3.cljs$lang$applyTo;
G__19868.cljs$core$IFn$_invoke$arity$0 = G__19868__0;
G__19868.cljs$core$IFn$_invoke$arity$1 = G__19868__1;
G__19868.cljs$core$IFn$_invoke$arity$2 = G__19868__2;
G__19868.cljs$core$IFn$_invoke$arity$variadic = G__19868__3.cljs$core$IFn$_invoke$arity$variadic;
return G__19868;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__19874__delegate = function (args){
return x;
};
var G__19874 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19875__i = 0, G__19875__a = new Array(arguments.length -  0);
while (G__19875__i < G__19875__a.length) {G__19875__a[G__19875__i] = arguments[G__19875__i + 0]; ++G__19875__i;}
  args = new cljs.core.IndexedSeq(G__19875__a,0);
} 
return G__19874__delegate.call(this,args);};
G__19874.cljs$lang$maxFixedArity = 0;
G__19874.cljs$lang$applyTo = (function (arglist__19876){
var args = cljs.core.seq(arglist__19876);
return G__19874__delegate(args);
});
G__19874.cljs$core$IFn$_invoke$arity$variadic = G__19874__delegate;
return G__19874;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__19931 = null;
var G__19931__0 = (function (){
var G__19904 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19904) : f.call(null,G__19904));
});
var G__19931__1 = (function (x){
var G__19905 = (function (){var G__19906 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19906) : g.call(null,G__19906));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19905) : f.call(null,G__19905));
});
var G__19931__2 = (function (x,y){
var G__19907 = (function (){var G__19908 = x;
var G__19909 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19908,G__19909) : g.call(null,G__19908,G__19909));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19907) : f.call(null,G__19907));
});
var G__19931__3 = (function (x,y,z){
var G__19910 = (function (){var G__19911 = x;
var G__19912 = y;
var G__19913 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19911,G__19912,G__19913) : g.call(null,G__19911,G__19912,G__19913));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19910) : f.call(null,G__19910));
});
var G__19931__4 = (function() { 
var G__19932__delegate = function (x,y,z,args){
var G__19914 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19914) : f.call(null,G__19914));
};
var G__19932 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19933__i = 0, G__19933__a = new Array(arguments.length -  3);
while (G__19933__i < G__19933__a.length) {G__19933__a[G__19933__i] = arguments[G__19933__i + 3]; ++G__19933__i;}
  args = new cljs.core.IndexedSeq(G__19933__a,0);
} 
return G__19932__delegate.call(this,x,y,z,args);};
G__19932.cljs$lang$maxFixedArity = 3;
G__19932.cljs$lang$applyTo = (function (arglist__19934){
var x = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var y = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var z = cljs.core.first(arglist__19934);
var args = cljs.core.rest(arglist__19934);
return G__19932__delegate(x,y,z,args);
});
G__19932.cljs$core$IFn$_invoke$arity$variadic = G__19932__delegate;
return G__19932;
})()
;
G__19931 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19931__0.call(this);
case 1:
return G__19931__1.call(this,x);
case 2:
return G__19931__2.call(this,x,y);
case 3:
return G__19931__3.call(this,x,y,z);
default:
var G__19935 = null;
if (arguments.length > 3) {
var G__19936__i = 0, G__19936__a = new Array(arguments.length -  3);
while (G__19936__i < G__19936__a.length) {G__19936__a[G__19936__i] = arguments[G__19936__i + 3]; ++G__19936__i;}
G__19935 = new cljs.core.IndexedSeq(G__19936__a,0);
}
return G__19931__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19931.cljs$lang$maxFixedArity = 3;
G__19931.cljs$lang$applyTo = G__19931__4.cljs$lang$applyTo;
G__19931.cljs$core$IFn$_invoke$arity$0 = G__19931__0;
G__19931.cljs$core$IFn$_invoke$arity$1 = G__19931__1;
G__19931.cljs$core$IFn$_invoke$arity$2 = G__19931__2;
G__19931.cljs$core$IFn$_invoke$arity$3 = G__19931__3;
G__19931.cljs$core$IFn$_invoke$arity$variadic = G__19931__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19931;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__19937 = null;
var G__19937__0 = (function (){
var G__19915 = (function (){var G__19916 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19916) : g.call(null,G__19916));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19915) : f.call(null,G__19915));
});
var G__19937__1 = (function (x){
var G__19917 = (function (){var G__19918 = (function (){var G__19919 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19919) : h.call(null,G__19919));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19918) : g.call(null,G__19918));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19917) : f.call(null,G__19917));
});
var G__19937__2 = (function (x,y){
var G__19920 = (function (){var G__19921 = (function (){var G__19922 = x;
var G__19923 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19922,G__19923) : h.call(null,G__19922,G__19923));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19921) : g.call(null,G__19921));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19920) : f.call(null,G__19920));
});
var G__19937__3 = (function (x,y,z){
var G__19924 = (function (){var G__19925 = (function (){var G__19926 = x;
var G__19927 = y;
var G__19928 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19926,G__19927,G__19928) : h.call(null,G__19926,G__19927,G__19928));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19925) : g.call(null,G__19925));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19924) : f.call(null,G__19924));
});
var G__19937__4 = (function() { 
var G__19938__delegate = function (x,y,z,args){
var G__19929 = (function (){var G__19930 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19930) : g.call(null,G__19930));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19929) : f.call(null,G__19929));
};
var G__19938 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19939__i = 0, G__19939__a = new Array(arguments.length -  3);
while (G__19939__i < G__19939__a.length) {G__19939__a[G__19939__i] = arguments[G__19939__i + 3]; ++G__19939__i;}
  args = new cljs.core.IndexedSeq(G__19939__a,0);
} 
return G__19938__delegate.call(this,x,y,z,args);};
G__19938.cljs$lang$maxFixedArity = 3;
G__19938.cljs$lang$applyTo = (function (arglist__19940){
var x = cljs.core.first(arglist__19940);
arglist__19940 = cljs.core.next(arglist__19940);
var y = cljs.core.first(arglist__19940);
arglist__19940 = cljs.core.next(arglist__19940);
var z = cljs.core.first(arglist__19940);
var args = cljs.core.rest(arglist__19940);
return G__19938__delegate(x,y,z,args);
});
G__19938.cljs$core$IFn$_invoke$arity$variadic = G__19938__delegate;
return G__19938;
})()
;
G__19937 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19937__0.call(this);
case 1:
return G__19937__1.call(this,x);
case 2:
return G__19937__2.call(this,x,y);
case 3:
return G__19937__3.call(this,x,y,z);
default:
var G__19941 = null;
if (arguments.length > 3) {
var G__19942__i = 0, G__19942__a = new Array(arguments.length -  3);
while (G__19942__i < G__19942__a.length) {G__19942__a[G__19942__i] = arguments[G__19942__i + 3]; ++G__19942__i;}
G__19941 = new cljs.core.IndexedSeq(G__19942__a,0);
}
return G__19937__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19937.cljs$lang$maxFixedArity = 3;
G__19937.cljs$lang$applyTo = G__19937__4.cljs$lang$applyTo;
G__19937.cljs$core$IFn$_invoke$arity$0 = G__19937__0;
G__19937.cljs$core$IFn$_invoke$arity$1 = G__19937__1;
G__19937.cljs$core$IFn$_invoke$arity$2 = G__19937__2;
G__19937.cljs$core$IFn$_invoke$arity$3 = G__19937__3;
G__19937.cljs$core$IFn$_invoke$arity$variadic = G__19937__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19937;
})()
});
var comp__4 = (function() { 
var G__19943__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__19944__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__19945 = cljs.core.first(fs__$2).call(null,ret);
var G__19946 = cljs.core.next(fs__$2);
ret = G__19945;
fs__$2 = G__19946;
continue;
} else {
return ret;
}
break;
}
};
var G__19944 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19947__i = 0, G__19947__a = new Array(arguments.length -  0);
while (G__19947__i < G__19947__a.length) {G__19947__a[G__19947__i] = arguments[G__19947__i + 0]; ++G__19947__i;}
  args = new cljs.core.IndexedSeq(G__19947__a,0);
} 
return G__19944__delegate.call(this,args);};
G__19944.cljs$lang$maxFixedArity = 0;
G__19944.cljs$lang$applyTo = (function (arglist__19948){
var args = cljs.core.seq(arglist__19948);
return G__19944__delegate(args);
});
G__19944.cljs$core$IFn$_invoke$arity$variadic = G__19944__delegate;
return G__19944;
})()
;
;})(fs__$1))
};
var G__19943 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__19949__i = 0, G__19949__a = new Array(arguments.length -  3);
while (G__19949__i < G__19949__a.length) {G__19949__a[G__19949__i] = arguments[G__19949__i + 3]; ++G__19949__i;}
  fs = new cljs.core.IndexedSeq(G__19949__a,0);
} 
return G__19943__delegate.call(this,f1,f2,f3,fs);};
G__19943.cljs$lang$maxFixedArity = 3;
G__19943.cljs$lang$applyTo = (function (arglist__19950){
var f1 = cljs.core.first(arglist__19950);
arglist__19950 = cljs.core.next(arglist__19950);
var f2 = cljs.core.first(arglist__19950);
arglist__19950 = cljs.core.next(arglist__19950);
var f3 = cljs.core.first(arglist__19950);
var fs = cljs.core.rest(arglist__19950);
return G__19943__delegate(f1,f2,f3,fs);
});
G__19943.cljs$core$IFn$_invoke$arity$variadic = G__19943__delegate;
return G__19943;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__19951 = null;
if (arguments.length > 3) {
var G__19952__i = 0, G__19952__a = new Array(arguments.length -  3);
while (G__19952__i < G__19952__a.length) {G__19952__a[G__19952__i] = arguments[G__19952__i + 3]; ++G__19952__i;}
G__19951 = new cljs.core.IndexedSeq(G__19952__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__19951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__20037 = null;
var G__20037__0 = (function (){
var G__19995 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19995) : f.call(null,G__19995));
});
var G__20037__1 = (function (x){
var G__19996 = arg1;
var G__19997 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19996,G__19997) : f.call(null,G__19996,G__19997));
});
var G__20037__2 = (function (x,y){
var G__19998 = arg1;
var G__19999 = x;
var G__20000 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19998,G__19999,G__20000) : f.call(null,G__19998,G__19999,G__20000));
});
var G__20037__3 = (function (x,y,z){
var G__20001 = arg1;
var G__20002 = x;
var G__20003 = y;
var G__20004 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20001,G__20002,G__20003,G__20004) : f.call(null,G__20001,G__20002,G__20003,G__20004));
});
var G__20037__4 = (function() { 
var G__20038__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__20038 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20039__i = 0, G__20039__a = new Array(arguments.length -  3);
while (G__20039__i < G__20039__a.length) {G__20039__a[G__20039__i] = arguments[G__20039__i + 3]; ++G__20039__i;}
  args = new cljs.core.IndexedSeq(G__20039__a,0);
} 
return G__20038__delegate.call(this,x,y,z,args);};
G__20038.cljs$lang$maxFixedArity = 3;
G__20038.cljs$lang$applyTo = (function (arglist__20040){
var x = cljs.core.first(arglist__20040);
arglist__20040 = cljs.core.next(arglist__20040);
var y = cljs.core.first(arglist__20040);
arglist__20040 = cljs.core.next(arglist__20040);
var z = cljs.core.first(arglist__20040);
var args = cljs.core.rest(arglist__20040);
return G__20038__delegate(x,y,z,args);
});
G__20038.cljs$core$IFn$_invoke$arity$variadic = G__20038__delegate;
return G__20038;
})()
;
G__20037 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20037__0.call(this);
case 1:
return G__20037__1.call(this,x);
case 2:
return G__20037__2.call(this,x,y);
case 3:
return G__20037__3.call(this,x,y,z);
default:
var G__20041 = null;
if (arguments.length > 3) {
var G__20042__i = 0, G__20042__a = new Array(arguments.length -  3);
while (G__20042__i < G__20042__a.length) {G__20042__a[G__20042__i] = arguments[G__20042__i + 3]; ++G__20042__i;}
G__20041 = new cljs.core.IndexedSeq(G__20042__a,0);
}
return G__20037__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20037.cljs$lang$maxFixedArity = 3;
G__20037.cljs$lang$applyTo = G__20037__4.cljs$lang$applyTo;
G__20037.cljs$core$IFn$_invoke$arity$0 = G__20037__0;
G__20037.cljs$core$IFn$_invoke$arity$1 = G__20037__1;
G__20037.cljs$core$IFn$_invoke$arity$2 = G__20037__2;
G__20037.cljs$core$IFn$_invoke$arity$3 = G__20037__3;
G__20037.cljs$core$IFn$_invoke$arity$variadic = G__20037__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20037;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__20043 = null;
var G__20043__0 = (function (){
var G__20005 = arg1;
var G__20006 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20005,G__20006) : f.call(null,G__20005,G__20006));
});
var G__20043__1 = (function (x){
var G__20007 = arg1;
var G__20008 = arg2;
var G__20009 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20007,G__20008,G__20009) : f.call(null,G__20007,G__20008,G__20009));
});
var G__20043__2 = (function (x,y){
var G__20010 = arg1;
var G__20011 = arg2;
var G__20012 = x;
var G__20013 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20010,G__20011,G__20012,G__20013) : f.call(null,G__20010,G__20011,G__20012,G__20013));
});
var G__20043__3 = (function (x,y,z){
var G__20014 = arg1;
var G__20015 = arg2;
var G__20016 = x;
var G__20017 = y;
var G__20018 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20014,G__20015,G__20016,G__20017,G__20018) : f.call(null,G__20014,G__20015,G__20016,G__20017,G__20018));
});
var G__20043__4 = (function() { 
var G__20044__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__20044 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20045__i = 0, G__20045__a = new Array(arguments.length -  3);
while (G__20045__i < G__20045__a.length) {G__20045__a[G__20045__i] = arguments[G__20045__i + 3]; ++G__20045__i;}
  args = new cljs.core.IndexedSeq(G__20045__a,0);
} 
return G__20044__delegate.call(this,x,y,z,args);};
G__20044.cljs$lang$maxFixedArity = 3;
G__20044.cljs$lang$applyTo = (function (arglist__20046){
var x = cljs.core.first(arglist__20046);
arglist__20046 = cljs.core.next(arglist__20046);
var y = cljs.core.first(arglist__20046);
arglist__20046 = cljs.core.next(arglist__20046);
var z = cljs.core.first(arglist__20046);
var args = cljs.core.rest(arglist__20046);
return G__20044__delegate(x,y,z,args);
});
G__20044.cljs$core$IFn$_invoke$arity$variadic = G__20044__delegate;
return G__20044;
})()
;
G__20043 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20043__0.call(this);
case 1:
return G__20043__1.call(this,x);
case 2:
return G__20043__2.call(this,x,y);
case 3:
return G__20043__3.call(this,x,y,z);
default:
var G__20047 = null;
if (arguments.length > 3) {
var G__20048__i = 0, G__20048__a = new Array(arguments.length -  3);
while (G__20048__i < G__20048__a.length) {G__20048__a[G__20048__i] = arguments[G__20048__i + 3]; ++G__20048__i;}
G__20047 = new cljs.core.IndexedSeq(G__20048__a,0);
}
return G__20043__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20043.cljs$lang$maxFixedArity = 3;
G__20043.cljs$lang$applyTo = G__20043__4.cljs$lang$applyTo;
G__20043.cljs$core$IFn$_invoke$arity$0 = G__20043__0;
G__20043.cljs$core$IFn$_invoke$arity$1 = G__20043__1;
G__20043.cljs$core$IFn$_invoke$arity$2 = G__20043__2;
G__20043.cljs$core$IFn$_invoke$arity$3 = G__20043__3;
G__20043.cljs$core$IFn$_invoke$arity$variadic = G__20043__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20043;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__20049 = null;
var G__20049__0 = (function (){
var G__20019 = arg1;
var G__20020 = arg2;
var G__20021 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20019,G__20020,G__20021) : f.call(null,G__20019,G__20020,G__20021));
});
var G__20049__1 = (function (x){
var G__20022 = arg1;
var G__20023 = arg2;
var G__20024 = arg3;
var G__20025 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20022,G__20023,G__20024,G__20025) : f.call(null,G__20022,G__20023,G__20024,G__20025));
});
var G__20049__2 = (function (x,y){
var G__20026 = arg1;
var G__20027 = arg2;
var G__20028 = arg3;
var G__20029 = x;
var G__20030 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20026,G__20027,G__20028,G__20029,G__20030) : f.call(null,G__20026,G__20027,G__20028,G__20029,G__20030));
});
var G__20049__3 = (function (x,y,z){
var G__20031 = arg1;
var G__20032 = arg2;
var G__20033 = arg3;
var G__20034 = x;
var G__20035 = y;
var G__20036 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20031,G__20032,G__20033,G__20034,G__20035,G__20036) : f.call(null,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036));
});
var G__20049__4 = (function() { 
var G__20050__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__20050 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20051__i = 0, G__20051__a = new Array(arguments.length -  3);
while (G__20051__i < G__20051__a.length) {G__20051__a[G__20051__i] = arguments[G__20051__i + 3]; ++G__20051__i;}
  args = new cljs.core.IndexedSeq(G__20051__a,0);
} 
return G__20050__delegate.call(this,x,y,z,args);};
G__20050.cljs$lang$maxFixedArity = 3;
G__20050.cljs$lang$applyTo = (function (arglist__20052){
var x = cljs.core.first(arglist__20052);
arglist__20052 = cljs.core.next(arglist__20052);
var y = cljs.core.first(arglist__20052);
arglist__20052 = cljs.core.next(arglist__20052);
var z = cljs.core.first(arglist__20052);
var args = cljs.core.rest(arglist__20052);
return G__20050__delegate(x,y,z,args);
});
G__20050.cljs$core$IFn$_invoke$arity$variadic = G__20050__delegate;
return G__20050;
})()
;
G__20049 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20049__0.call(this);
case 1:
return G__20049__1.call(this,x);
case 2:
return G__20049__2.call(this,x,y);
case 3:
return G__20049__3.call(this,x,y,z);
default:
var G__20053 = null;
if (arguments.length > 3) {
var G__20054__i = 0, G__20054__a = new Array(arguments.length -  3);
while (G__20054__i < G__20054__a.length) {G__20054__a[G__20054__i] = arguments[G__20054__i + 3]; ++G__20054__i;}
G__20053 = new cljs.core.IndexedSeq(G__20054__a,0);
}
return G__20049__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20049.cljs$lang$maxFixedArity = 3;
G__20049.cljs$lang$applyTo = G__20049__4.cljs$lang$applyTo;
G__20049.cljs$core$IFn$_invoke$arity$0 = G__20049__0;
G__20049.cljs$core$IFn$_invoke$arity$1 = G__20049__1;
G__20049.cljs$core$IFn$_invoke$arity$2 = G__20049__2;
G__20049.cljs$core$IFn$_invoke$arity$3 = G__20049__3;
G__20049.cljs$core$IFn$_invoke$arity$variadic = G__20049__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20049;
})()
});
var partial__5 = (function() { 
var G__20055__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__20056__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__20056 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20057__i = 0, G__20057__a = new Array(arguments.length -  0);
while (G__20057__i < G__20057__a.length) {G__20057__a[G__20057__i] = arguments[G__20057__i + 0]; ++G__20057__i;}
  args = new cljs.core.IndexedSeq(G__20057__a,0);
} 
return G__20056__delegate.call(this,args);};
G__20056.cljs$lang$maxFixedArity = 0;
G__20056.cljs$lang$applyTo = (function (arglist__20058){
var args = cljs.core.seq(arglist__20058);
return G__20056__delegate(args);
});
G__20056.cljs$core$IFn$_invoke$arity$variadic = G__20056__delegate;
return G__20056;
})()
;
};
var G__20055 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__20059__i = 0, G__20059__a = new Array(arguments.length -  4);
while (G__20059__i < G__20059__a.length) {G__20059__a[G__20059__i] = arguments[G__20059__i + 4]; ++G__20059__i;}
  more = new cljs.core.IndexedSeq(G__20059__a,0);
} 
return G__20055__delegate.call(this,f,arg1,arg2,arg3,more);};
G__20055.cljs$lang$maxFixedArity = 4;
G__20055.cljs$lang$applyTo = (function (arglist__20060){
var f = cljs.core.first(arglist__20060);
arglist__20060 = cljs.core.next(arglist__20060);
var arg1 = cljs.core.first(arglist__20060);
arglist__20060 = cljs.core.next(arglist__20060);
var arg2 = cljs.core.first(arglist__20060);
arglist__20060 = cljs.core.next(arglist__20060);
var arg3 = cljs.core.first(arglist__20060);
var more = cljs.core.rest(arglist__20060);
return G__20055__delegate(f,arg1,arg2,arg3,more);
});
G__20055.cljs$core$IFn$_invoke$arity$variadic = G__20055__delegate;
return G__20055;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__20061 = null;
if (arguments.length > 4) {
var G__20062__i = 0, G__20062__a = new Array(arguments.length -  4);
while (G__20062__i < G__20062__a.length) {G__20062__a[G__20062__i] = arguments[G__20062__i + 4]; ++G__20062__i;}
G__20061 = new cljs.core.IndexedSeq(G__20062__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__20061);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20095 = null;
var G__20095__1 = (function (a){
var G__20079 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20079) : f.call(null,G__20079));
});
var G__20095__2 = (function (a,b){
var G__20080 = (((a == null))?x:a);
var G__20081 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20080,G__20081) : f.call(null,G__20080,G__20081));
});
var G__20095__3 = (function (a,b,c){
var G__20082 = (((a == null))?x:a);
var G__20083 = b;
var G__20084 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20082,G__20083,G__20084) : f.call(null,G__20082,G__20083,G__20084));
});
var G__20095__4 = (function() { 
var G__20096__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20096 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20097__i = 0, G__20097__a = new Array(arguments.length -  3);
while (G__20097__i < G__20097__a.length) {G__20097__a[G__20097__i] = arguments[G__20097__i + 3]; ++G__20097__i;}
  ds = new cljs.core.IndexedSeq(G__20097__a,0);
} 
return G__20096__delegate.call(this,a,b,c,ds);};
G__20096.cljs$lang$maxFixedArity = 3;
G__20096.cljs$lang$applyTo = (function (arglist__20098){
var a = cljs.core.first(arglist__20098);
arglist__20098 = cljs.core.next(arglist__20098);
var b = cljs.core.first(arglist__20098);
arglist__20098 = cljs.core.next(arglist__20098);
var c = cljs.core.first(arglist__20098);
var ds = cljs.core.rest(arglist__20098);
return G__20096__delegate(a,b,c,ds);
});
G__20096.cljs$core$IFn$_invoke$arity$variadic = G__20096__delegate;
return G__20096;
})()
;
G__20095 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20095__1.call(this,a);
case 2:
return G__20095__2.call(this,a,b);
case 3:
return G__20095__3.call(this,a,b,c);
default:
var G__20099 = null;
if (arguments.length > 3) {
var G__20100__i = 0, G__20100__a = new Array(arguments.length -  3);
while (G__20100__i < G__20100__a.length) {G__20100__a[G__20100__i] = arguments[G__20100__i + 3]; ++G__20100__i;}
G__20099 = new cljs.core.IndexedSeq(G__20100__a,0);
}
return G__20095__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20095.cljs$lang$maxFixedArity = 3;
G__20095.cljs$lang$applyTo = G__20095__4.cljs$lang$applyTo;
G__20095.cljs$core$IFn$_invoke$arity$1 = G__20095__1;
G__20095.cljs$core$IFn$_invoke$arity$2 = G__20095__2;
G__20095.cljs$core$IFn$_invoke$arity$3 = G__20095__3;
G__20095.cljs$core$IFn$_invoke$arity$variadic = G__20095__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20095;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20101 = null;
var G__20101__2 = (function (a,b){
var G__20085 = (((a == null))?x:a);
var G__20086 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20085,G__20086) : f.call(null,G__20085,G__20086));
});
var G__20101__3 = (function (a,b,c){
var G__20087 = (((a == null))?x:a);
var G__20088 = (((b == null))?y:b);
var G__20089 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20087,G__20088,G__20089) : f.call(null,G__20087,G__20088,G__20089));
});
var G__20101__4 = (function() { 
var G__20102__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20102 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20103__i = 0, G__20103__a = new Array(arguments.length -  3);
while (G__20103__i < G__20103__a.length) {G__20103__a[G__20103__i] = arguments[G__20103__i + 3]; ++G__20103__i;}
  ds = new cljs.core.IndexedSeq(G__20103__a,0);
} 
return G__20102__delegate.call(this,a,b,c,ds);};
G__20102.cljs$lang$maxFixedArity = 3;
G__20102.cljs$lang$applyTo = (function (arglist__20104){
var a = cljs.core.first(arglist__20104);
arglist__20104 = cljs.core.next(arglist__20104);
var b = cljs.core.first(arglist__20104);
arglist__20104 = cljs.core.next(arglist__20104);
var c = cljs.core.first(arglist__20104);
var ds = cljs.core.rest(arglist__20104);
return G__20102__delegate(a,b,c,ds);
});
G__20102.cljs$core$IFn$_invoke$arity$variadic = G__20102__delegate;
return G__20102;
})()
;
G__20101 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20101__2.call(this,a,b);
case 3:
return G__20101__3.call(this,a,b,c);
default:
var G__20105 = null;
if (arguments.length > 3) {
var G__20106__i = 0, G__20106__a = new Array(arguments.length -  3);
while (G__20106__i < G__20106__a.length) {G__20106__a[G__20106__i] = arguments[G__20106__i + 3]; ++G__20106__i;}
G__20105 = new cljs.core.IndexedSeq(G__20106__a,0);
}
return G__20101__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20101.cljs$lang$maxFixedArity = 3;
G__20101.cljs$lang$applyTo = G__20101__4.cljs$lang$applyTo;
G__20101.cljs$core$IFn$_invoke$arity$2 = G__20101__2;
G__20101.cljs$core$IFn$_invoke$arity$3 = G__20101__3;
G__20101.cljs$core$IFn$_invoke$arity$variadic = G__20101__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20101;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20107 = null;
var G__20107__2 = (function (a,b){
var G__20090 = (((a == null))?x:a);
var G__20091 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20090,G__20091) : f.call(null,G__20090,G__20091));
});
var G__20107__3 = (function (a,b,c){
var G__20092 = (((a == null))?x:a);
var G__20093 = (((b == null))?y:b);
var G__20094 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20092,G__20093,G__20094) : f.call(null,G__20092,G__20093,G__20094));
});
var G__20107__4 = (function() { 
var G__20108__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20108 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20109__i = 0, G__20109__a = new Array(arguments.length -  3);
while (G__20109__i < G__20109__a.length) {G__20109__a[G__20109__i] = arguments[G__20109__i + 3]; ++G__20109__i;}
  ds = new cljs.core.IndexedSeq(G__20109__a,0);
} 
return G__20108__delegate.call(this,a,b,c,ds);};
G__20108.cljs$lang$maxFixedArity = 3;
G__20108.cljs$lang$applyTo = (function (arglist__20110){
var a = cljs.core.first(arglist__20110);
arglist__20110 = cljs.core.next(arglist__20110);
var b = cljs.core.first(arglist__20110);
arglist__20110 = cljs.core.next(arglist__20110);
var c = cljs.core.first(arglist__20110);
var ds = cljs.core.rest(arglist__20110);
return G__20108__delegate(a,b,c,ds);
});
G__20108.cljs$core$IFn$_invoke$arity$variadic = G__20108__delegate;
return G__20108;
})()
;
G__20107 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20107__2.call(this,a,b);
case 3:
return G__20107__3.call(this,a,b,c);
default:
var G__20111 = null;
if (arguments.length > 3) {
var G__20112__i = 0, G__20112__a = new Array(arguments.length -  3);
while (G__20112__i < G__20112__a.length) {G__20112__a[G__20112__i] = arguments[G__20112__i + 3]; ++G__20112__i;}
G__20111 = new cljs.core.IndexedSeq(G__20112__a,0);
}
return G__20107__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20107.cljs$lang$maxFixedArity = 3;
G__20107.cljs$lang$applyTo = G__20107__4.cljs$lang$applyTo;
G__20107.cljs$core$IFn$_invoke$arity$2 = G__20107__2;
G__20107.cljs$core$IFn$_invoke$arity$3 = G__20107__3;
G__20107.cljs$core$IFn$_invoke$arity$variadic = G__20107__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20107;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__20143 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__20143) : cljs.core.volatile_BANG_.call(null,G__20143));
})();
return ((function (i){
return (function() {
var G__20173 = null;
var G__20173__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20173__1 = (function (result){
var G__20144 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20144) : rf.call(null,G__20144));
});
var G__20173__2 = (function (result,input){
var G__20145 = result;
var G__20146 = (function (){var G__20147 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__20148 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20147,G__20148) : f.call(null,G__20147,G__20148));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20145,G__20146) : rf.call(null,G__20145,G__20146));
});
G__20173 = function(result,input){
switch(arguments.length){
case 0:
return G__20173__0.call(this);
case 1:
return G__20173__1.call(this,result);
case 2:
return G__20173__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20173.cljs$core$IFn$_invoke$arity$0 = G__20173__0;
G__20173.cljs$core$IFn$_invoke$arity$1 = G__20173__1;
G__20173.cljs$core$IFn$_invoke$arity$2 = G__20173__2;
return G__20173;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4693__auto___20174 = size;
var i_20175 = (0);
while(true){
if((i_20175 < n__4693__auto___20174)){
cljs.core.chunk_append(b,(function (){var G__20169 = (idx + i_20175);
var G__20170 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20175);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20169,G__20170) : f.call(null,G__20169,G__20170));
})());

var G__20176 = (i_20175 + (1));
i_20175 = G__20176;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20171 = idx;
var G__20172 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20171,G__20172) : f.call(null,G__20171,G__20172));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__20195 = null;
var G__20195__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20195__1 = (function (result){
var G__20189 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20189) : rf.call(null,G__20189));
});
var G__20195__2 = (function (result,input){
var v = (function (){var G__20190 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20190) : f.call(null,G__20190));
})();
if((v == null)){
return result;
} else {
var G__20191 = result;
var G__20192 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20191,G__20192) : rf.call(null,G__20191,G__20192));
}
});
G__20195 = function(result,input){
switch(arguments.length){
case 0:
return G__20195__0.call(this);
case 1:
return G__20195__1.call(this,result);
case 2:
return G__20195__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20195.cljs$core$IFn$_invoke$arity$0 = G__20195__0;
G__20195.cljs$core$IFn$_invoke$arity$1 = G__20195__1;
G__20195.cljs$core$IFn$_invoke$arity$2 = G__20195__2;
return G__20195;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4693__auto___20196 = size;
var i_20197 = (0);
while(true){
if((i_20197 < n__4693__auto___20196)){
var x_20198 = (function (){var G__20193 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20197);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20193) : f.call(null,G__20193));
})();
if((x_20198 == null)){
} else {
cljs.core.chunk_append(b,x_20198);
}

var G__20199 = (i_20197 + (1));
i_20197 = G__20199;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20194 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20194) : f.call(null,G__20194));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20200 = this$__$1;
return goog.getUid(G__20200);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__20201 = cljs.core.seq(self__.watches);
var chunk__20202 = null;
var count__20203 = (0);
var i__20204 = (0);
while(true){
if((i__20204 < count__20203)){
var vec__20205 = chunk__20202.cljs$core$IIndexed$_nth$arity$2(null,i__20204);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20205,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20205,(1),null);
var G__20206_20215 = key;
var G__20207_20216 = this$__$1;
var G__20208_20217 = oldval;
var G__20209_20218 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20206_20215,G__20207_20216,G__20208_20217,G__20209_20218) : f.call(null,G__20206_20215,G__20207_20216,G__20208_20217,G__20209_20218));

var G__20219 = seq__20201;
var G__20220 = chunk__20202;
var G__20221 = count__20203;
var G__20222 = (i__20204 + (1));
seq__20201 = G__20219;
chunk__20202 = G__20220;
count__20203 = G__20221;
i__20204 = G__20222;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20201);
if(temp__4126__auto__){
var seq__20201__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20201__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__20201__$1);
var G__20223 = cljs.core.chunk_rest(seq__20201__$1);
var G__20224 = c__4593__auto__;
var G__20225 = cljs.core.count(c__4593__auto__);
var G__20226 = (0);
seq__20201 = G__20223;
chunk__20202 = G__20224;
count__20203 = G__20225;
i__20204 = G__20226;
continue;
} else {
var vec__20210 = cljs.core.first(seq__20201__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20210,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20210,(1),null);
var G__20211_20227 = key;
var G__20212_20228 = this$__$1;
var G__20213_20229 = oldval;
var G__20214_20230 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20211_20227,G__20212_20228,G__20213_20229,G__20214_20230) : f.call(null,G__20211_20227,G__20212_20228,G__20213_20229,G__20214_20230));

var G__20231 = cljs.core.next(seq__20201__$1);
var G__20232 = null;
var G__20233 = (0);
var G__20234 = (0);
seq__20201 = G__20231;
chunk__20202 = G__20232;
count__20203 = G__20233;
i__20204 = G__20234;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__20238__delegate = function (x,p__20235){
var map__20237 = p__20235;
var map__20237__$1 = ((cljs.core.seq_QMARK_(map__20237))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20237):map__20237);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20237__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20237__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__20238 = function (x,var_args){
var p__20235 = null;
if (arguments.length > 1) {
var G__20239__i = 0, G__20239__a = new Array(arguments.length -  1);
while (G__20239__i < G__20239__a.length) {G__20239__a[G__20239__i] = arguments[G__20239__i + 1]; ++G__20239__i;}
  p__20235 = new cljs.core.IndexedSeq(G__20239__a,0);
} 
return G__20238__delegate.call(this,x,p__20235);};
G__20238.cljs$lang$maxFixedArity = 1;
G__20238.cljs$lang$applyTo = (function (arglist__20240){
var x = cljs.core.first(arglist__20240);
var p__20235 = cljs.core.rest(arglist__20240);
return G__20238__delegate(x,p__20235);
});
G__20238.cljs$core$IFn$_invoke$arity$variadic = G__20238__delegate;
return G__20238;
})()
;
atom = function(x,var_args){
var p__20235 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__20241 = null;
if (arguments.length > 1) {
var G__20242__i = 0, G__20242__a = new Array(arguments.length -  1);
while (G__20242__i < G__20242__a.length) {G__20242__a[G__20242__i] = arguments[G__20242__i + 1]; ++G__20242__i;}
G__20241 = new cljs.core.IndexedSeq(G__20242__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20249 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20249) : f.call(null,G__20249));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20250 = a.state;
var G__20251 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20250,G__20251) : f.call(null,G__20250,G__20251));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20252 = a.state;
var G__20253 = x;
var G__20254 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20252,G__20253,G__20254) : f.call(null,G__20252,G__20253,G__20254));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__20255__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__20255 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__20256__i = 0, G__20256__a = new Array(arguments.length -  4);
while (G__20256__i < G__20256__a.length) {G__20256__a[G__20256__i] = arguments[G__20256__i + 4]; ++G__20256__i;}
  more = new cljs.core.IndexedSeq(G__20256__a,0);
} 
return G__20255__delegate.call(this,a,f,x,y,more);};
G__20255.cljs$lang$maxFixedArity = 4;
G__20255.cljs$lang$applyTo = (function (arglist__20257){
var a = cljs.core.first(arglist__20257);
arglist__20257 = cljs.core.next(arglist__20257);
var f = cljs.core.first(arglist__20257);
arglist__20257 = cljs.core.next(arglist__20257);
var x = cljs.core.first(arglist__20257);
arglist__20257 = cljs.core.next(arglist__20257);
var y = cljs.core.first(arglist__20257);
var more = cljs.core.rest(arglist__20257);
return G__20255__delegate(a,f,x,y,more);
});
G__20255.cljs$core$IFn$_invoke$arity$variadic = G__20255__delegate;
return G__20255;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__20258 = null;
if (arguments.length > 4) {
var G__20259__i = 0, G__20259__a = new Array(arguments.length -  4);
while (G__20259__i < G__20259__a.length) {G__20259__a[G__20259__i] = arguments[G__20259__i + 4]; ++G__20259__i;}
G__20258 = new cljs.core.IndexedSeq(G__20259__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__20258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__20326 = null;
var G__20326__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20326__1 = (function (result){
var G__20293 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20293) : rf.call(null,G__20293));
});
var G__20326__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20294 = i;
var G__20295 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20294,G__20295) : f.call(null,G__20294,G__20295));
})();
if((v == null)){
return result;
} else {
var G__20296 = result;
var G__20297 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20296,G__20297) : rf.call(null,G__20296,G__20297));
}
});
G__20326 = function(result,input){
switch(arguments.length){
case 0:
return G__20326__0.call(this);
case 1:
return G__20326__1.call(this,result);
case 2:
return G__20326__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20326.cljs$core$IFn$_invoke$arity$0 = G__20326__0;
G__20326.cljs$core$IFn$_invoke$arity$1 = G__20326__1;
G__20326.cljs$core$IFn$_invoke$arity$2 = G__20326__2;
return G__20326;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4693__auto___20327 = size;
var i_20328 = (0);
while(true){
if((i_20328 < n__4693__auto___20327)){
var x_20329 = (function (){var G__20322 = (idx + i_20328);
var G__20323 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20328);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20322,G__20323) : f.call(null,G__20322,G__20323));
})();
if((x_20329 == null)){
} else {
cljs.core.chunk_append(b,x_20329);
}

var G__20330 = (i_20328 + (1));
i_20328 = G__20330;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20324 = idx;
var G__20325 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20324,G__20325) : f.call(null,G__20324,G__20325));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__20544 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20544) : p.call(null,G__20544));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20546 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20546) : p.call(null,G__20546));
})();
if(cljs.core.truth_(and__3794__auto__)){
var G__20547 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20547) : p.call(null,G__20547));
} else {
return and__3794__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20549 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20549) : p.call(null,G__20549));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20551 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20551) : p.call(null,G__20551));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var G__20552 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20552) : p.call(null,G__20552));
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__20721__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__20721 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20722__i = 0, G__20722__a = new Array(arguments.length -  3);
while (G__20722__i < G__20722__a.length) {G__20722__a[G__20722__i] = arguments[G__20722__i + 3]; ++G__20722__i;}
  args = new cljs.core.IndexedSeq(G__20722__a,0);
} 
return G__20721__delegate.call(this,x,y,z,args);};
G__20721.cljs$lang$maxFixedArity = 3;
G__20721.cljs$lang$applyTo = (function (arglist__20723){
var x = cljs.core.first(arglist__20723);
arglist__20723 = cljs.core.next(arglist__20723);
var y = cljs.core.first(arglist__20723);
arglist__20723 = cljs.core.next(arglist__20723);
var z = cljs.core.first(arglist__20723);
var args = cljs.core.rest(arglist__20723);
return G__20721__delegate(x,y,z,args);
});
G__20721.cljs$core$IFn$_invoke$arity$variadic = G__20721__delegate;
return G__20721;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__20724 = null;
if (arguments.length > 3) {
var G__20725__i = 0, G__20725__a = new Array(arguments.length -  3);
while (G__20725__i < G__20725__a.length) {G__20725__a[G__20725__i] = arguments[G__20725__i + 3]; ++G__20725__i;}
G__20724 = new cljs.core.IndexedSeq(G__20725__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20584 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20584) : p1.call(null,G__20584));
})();
if(cljs.core.truth_(and__3794__auto__)){
var G__20585 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20585) : p2.call(null,G__20585));
} else {
return and__3794__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20587 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20587) : p1.call(null,G__20587));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20589 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20589) : p1.call(null,G__20589));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var and__3794__auto____$2 = (function (){var G__20591 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20591) : p2.call(null,G__20591));
})();
if(cljs.core.truth_(and__3794__auto____$2)){
var G__20592 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20592) : p2.call(null,G__20592));
} else {
return and__3794__auto____$2;
}
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20594 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20594) : p1.call(null,G__20594));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20596 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20596) : p1.call(null,G__20596));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var and__3794__auto____$2 = (function (){var G__20598 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20598) : p1.call(null,G__20598));
})();
if(cljs.core.truth_(and__3794__auto____$2)){
var and__3794__auto____$3 = (function (){var G__20600 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20600) : p2.call(null,G__20600));
})();
if(cljs.core.truth_(and__3794__auto____$3)){
var and__3794__auto____$4 = (function (){var G__20602 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20602) : p2.call(null,G__20602));
})();
if(cljs.core.truth_(and__3794__auto____$4)){
var G__20603 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20603) : p2.call(null,G__20603));
} else {
return and__3794__auto____$4;
}
} else {
return and__3794__auto____$3;
}
} else {
return and__3794__auto____$2;
}
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__20726__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20331_SHARP_){
var and__3794__auto__ = (function (){var G__20608 = p1__20331_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20608) : p1.call(null,G__20608));
})();
if(cljs.core.truth_(and__3794__auto__)){
var G__20609 = p1__20331_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20609) : p2.call(null,G__20609));
} else {
return and__3794__auto__;
}
}),args)));
};
var G__20726 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20727__i = 0, G__20727__a = new Array(arguments.length -  3);
while (G__20727__i < G__20727__a.length) {G__20727__a[G__20727__i] = arguments[G__20727__i + 3]; ++G__20727__i;}
  args = new cljs.core.IndexedSeq(G__20727__a,0);
} 
return G__20726__delegate.call(this,x,y,z,args);};
G__20726.cljs$lang$maxFixedArity = 3;
G__20726.cljs$lang$applyTo = (function (arglist__20728){
var x = cljs.core.first(arglist__20728);
arglist__20728 = cljs.core.next(arglist__20728);
var y = cljs.core.first(arglist__20728);
arglist__20728 = cljs.core.next(arglist__20728);
var z = cljs.core.first(arglist__20728);
var args = cljs.core.rest(arglist__20728);
return G__20726__delegate(x,y,z,args);
});
G__20726.cljs$core$IFn$_invoke$arity$variadic = G__20726__delegate;
return G__20726;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__20729 = null;
if (arguments.length > 3) {
var G__20730__i = 0, G__20730__a = new Array(arguments.length -  3);
while (G__20730__i < G__20730__a.length) {G__20730__a[G__20730__i] = arguments[G__20730__i + 3]; ++G__20730__i;}
G__20729 = new cljs.core.IndexedSeq(G__20730__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20655 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20655) : p1.call(null,G__20655));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20657 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20657) : p2.call(null,G__20657));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var G__20658 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20658) : p3.call(null,G__20658));
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20660 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20660) : p1.call(null,G__20660));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20662 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20662) : p2.call(null,G__20662));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var and__3794__auto____$2 = (function (){var G__20664 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20664) : p3.call(null,G__20664));
})();
if(cljs.core.truth_(and__3794__auto____$2)){
var and__3794__auto____$3 = (function (){var G__20666 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20666) : p1.call(null,G__20666));
})();
if(cljs.core.truth_(and__3794__auto____$3)){
var and__3794__auto____$4 = (function (){var G__20668 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20668) : p2.call(null,G__20668));
})();
if(cljs.core.truth_(and__3794__auto____$4)){
var G__20669 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20669) : p3.call(null,G__20669));
} else {
return and__3794__auto____$4;
}
} else {
return and__3794__auto____$3;
}
} else {
return and__3794__auto____$2;
}
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3794__auto__ = (function (){var G__20671 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20671) : p1.call(null,G__20671));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20673 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20673) : p2.call(null,G__20673));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var and__3794__auto____$2 = (function (){var G__20675 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20675) : p3.call(null,G__20675));
})();
if(cljs.core.truth_(and__3794__auto____$2)){
var and__3794__auto____$3 = (function (){var G__20677 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20677) : p1.call(null,G__20677));
})();
if(cljs.core.truth_(and__3794__auto____$3)){
var and__3794__auto____$4 = (function (){var G__20679 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20679) : p2.call(null,G__20679));
})();
if(cljs.core.truth_(and__3794__auto____$4)){
var and__3794__auto____$5 = (function (){var G__20681 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20681) : p3.call(null,G__20681));
})();
if(cljs.core.truth_(and__3794__auto____$5)){
var and__3794__auto____$6 = (function (){var G__20683 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20683) : p1.call(null,G__20683));
})();
if(cljs.core.truth_(and__3794__auto____$6)){
var and__3794__auto____$7 = (function (){var G__20685 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20685) : p2.call(null,G__20685));
})();
if(cljs.core.truth_(and__3794__auto____$7)){
var G__20686 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20686) : p3.call(null,G__20686));
} else {
return and__3794__auto____$7;
}
} else {
return and__3794__auto____$6;
}
} else {
return and__3794__auto____$5;
}
} else {
return and__3794__auto____$4;
}
} else {
return and__3794__auto____$3;
}
} else {
return and__3794__auto____$2;
}
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__20731__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20332_SHARP_){
var and__3794__auto__ = (function (){var G__20693 = p1__20332_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20693) : p1.call(null,G__20693));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20695 = p1__20332_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20695) : p2.call(null,G__20695));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var G__20696 = p1__20332_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20696) : p3.call(null,G__20696));
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
}),args)));
};
var G__20731 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20732__i = 0, G__20732__a = new Array(arguments.length -  3);
while (G__20732__i < G__20732__a.length) {G__20732__a[G__20732__i] = arguments[G__20732__i + 3]; ++G__20732__i;}
  args = new cljs.core.IndexedSeq(G__20732__a,0);
} 
return G__20731__delegate.call(this,x,y,z,args);};
G__20731.cljs$lang$maxFixedArity = 3;
G__20731.cljs$lang$applyTo = (function (arglist__20733){
var x = cljs.core.first(arglist__20733);
arglist__20733 = cljs.core.next(arglist__20733);
var y = cljs.core.first(arglist__20733);
arglist__20733 = cljs.core.next(arglist__20733);
var z = cljs.core.first(arglist__20733);
var args = cljs.core.rest(arglist__20733);
return G__20731__delegate(x,y,z,args);
});
G__20731.cljs$core$IFn$_invoke$arity$variadic = G__20731__delegate;
return G__20731;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__20734 = null;
if (arguments.length > 3) {
var G__20735__i = 0, G__20735__a = new Array(arguments.length -  3);
while (G__20735__i < G__20735__a.length) {G__20735__a[G__20735__i] = arguments[G__20735__i + 3]; ++G__20735__i;}
G__20734 = new cljs.core.IndexedSeq(G__20735__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__20736__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20333_SHARP_){
var G__20712 = x;
return (p1__20333_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20333_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20712) : p1__20333_SHARP_.call(null,G__20712));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20334_SHARP_){
var and__3794__auto__ = (function (){var G__20714 = x;
return (p1__20334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20334_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20714) : p1__20334_SHARP_.call(null,G__20714));
})();
if(cljs.core.truth_(and__3794__auto__)){
var G__20715 = y;
return (p1__20334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20334_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20715) : p1__20334_SHARP_.call(null,G__20715));
} else {
return and__3794__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20335_SHARP_){
var and__3794__auto__ = (function (){var G__20717 = x;
return (p1__20335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20335_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20717) : p1__20335_SHARP_.call(null,G__20717));
})();
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__20719 = y;
return (p1__20335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20335_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20719) : p1__20335_SHARP_.call(null,G__20719));
})();
if(cljs.core.truth_(and__3794__auto____$1)){
var G__20720 = z;
return (p1__20335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20335_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20720) : p1__20335_SHARP_.call(null,G__20720));
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__20737__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20336_SHARP_){
return cljs.core.every_QMARK_(p1__20336_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__20737 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20738__i = 0, G__20738__a = new Array(arguments.length -  3);
while (G__20738__i < G__20738__a.length) {G__20738__a[G__20738__i] = arguments[G__20738__i + 3]; ++G__20738__i;}
  args = new cljs.core.IndexedSeq(G__20738__a,0);
} 
return G__20737__delegate.call(this,x,y,z,args);};
G__20737.cljs$lang$maxFixedArity = 3;
G__20737.cljs$lang$applyTo = (function (arglist__20739){
var x = cljs.core.first(arglist__20739);
arglist__20739 = cljs.core.next(arglist__20739);
var y = cljs.core.first(arglist__20739);
arglist__20739 = cljs.core.next(arglist__20739);
var z = cljs.core.first(arglist__20739);
var args = cljs.core.rest(arglist__20739);
return G__20737__delegate(x,y,z,args);
});
G__20737.cljs$core$IFn$_invoke$arity$variadic = G__20737__delegate;
return G__20737;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__20740 = null;
if (arguments.length > 3) {
var G__20741__i = 0, G__20741__a = new Array(arguments.length -  3);
while (G__20741__i < G__20741__a.length) {G__20741__a[G__20741__i] = arguments[G__20741__i + 3]; ++G__20741__i;}
G__20740 = new cljs.core.IndexedSeq(G__20741__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__20736 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__20742__i = 0, G__20742__a = new Array(arguments.length -  3);
while (G__20742__i < G__20742__a.length) {G__20742__a[G__20742__i] = arguments[G__20742__i + 3]; ++G__20742__i;}
  ps = new cljs.core.IndexedSeq(G__20742__a,0);
} 
return G__20736__delegate.call(this,p1,p2,p3,ps);};
G__20736.cljs$lang$maxFixedArity = 3;
G__20736.cljs$lang$applyTo = (function (arglist__20743){
var p1 = cljs.core.first(arglist__20743);
arglist__20743 = cljs.core.next(arglist__20743);
var p2 = cljs.core.first(arglist__20743);
arglist__20743 = cljs.core.next(arglist__20743);
var p3 = cljs.core.first(arglist__20743);
var ps = cljs.core.rest(arglist__20743);
return G__20736__delegate(p1,p2,p3,ps);
});
G__20736.cljs$core$IFn$_invoke$arity$variadic = G__20736__delegate;
return G__20736;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__20744 = null;
if (arguments.length > 3) {
var G__20745__i = 0, G__20745__a = new Array(arguments.length -  3);
while (G__20745__i < G__20745__a.length) {G__20745__a[G__20745__i] = arguments[G__20745__i + 3]; ++G__20745__i;}
G__20744 = new cljs.core.IndexedSeq(G__20745__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__20744);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__20951 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20951) : p.call(null,G__20951));
});
var sp1__2 = (function (x,y){
var or__3806__auto__ = (function (){var G__20953 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20953) : p.call(null,G__20953));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var G__20954 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20954) : p.call(null,G__20954));
}
});
var sp1__3 = (function (x,y,z){
var or__3806__auto__ = (function (){var G__20956 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20956) : p.call(null,G__20956));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__20958 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20958) : p.call(null,G__20958));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var G__20959 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20959) : p.call(null,G__20959));
}
}
});
var sp1__4 = (function() { 
var G__21120__delegate = function (x,y,z,args){
var or__3806__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21120 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21121__i = 0, G__21121__a = new Array(arguments.length -  3);
while (G__21121__i < G__21121__a.length) {G__21121__a[G__21121__i] = arguments[G__21121__i + 3]; ++G__21121__i;}
  args = new cljs.core.IndexedSeq(G__21121__a,0);
} 
return G__21120__delegate.call(this,x,y,z,args);};
G__21120.cljs$lang$maxFixedArity = 3;
G__21120.cljs$lang$applyTo = (function (arglist__21122){
var x = cljs.core.first(arglist__21122);
arglist__21122 = cljs.core.next(arglist__21122);
var y = cljs.core.first(arglist__21122);
arglist__21122 = cljs.core.next(arglist__21122);
var z = cljs.core.first(arglist__21122);
var args = cljs.core.rest(arglist__21122);
return G__21120__delegate(x,y,z,args);
});
G__21120.cljs$core$IFn$_invoke$arity$variadic = G__21120__delegate;
return G__21120;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21123 = null;
if (arguments.length > 3) {
var G__21124__i = 0, G__21124__a = new Array(arguments.length -  3);
while (G__21124__i < G__21124__a.length) {G__21124__a[G__21124__i] = arguments[G__21124__i + 3]; ++G__21124__i;}
G__21123 = new cljs.core.IndexedSeq(G__21124__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3806__auto__ = (function (){var G__20991 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20991) : p1.call(null,G__20991));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var G__20992 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20992) : p2.call(null,G__20992));
}
});
var sp2__2 = (function (x,y){
var or__3806__auto__ = (function (){var G__20994 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20994) : p1.call(null,G__20994));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__20996 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20996) : p1.call(null,G__20996));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var or__3806__auto____$2 = (function (){var G__20998 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20998) : p2.call(null,G__20998));
})();
if(cljs.core.truth_(or__3806__auto____$2)){
return or__3806__auto____$2;
} else {
var G__20999 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20999) : p2.call(null,G__20999));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3806__auto__ = (function (){var G__21001 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21001) : p1.call(null,G__21001));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__21003 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21003) : p1.call(null,G__21003));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var or__3806__auto____$2 = (function (){var G__21005 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21005) : p1.call(null,G__21005));
})();
if(cljs.core.truth_(or__3806__auto____$2)){
return or__3806__auto____$2;
} else {
var or__3806__auto____$3 = (function (){var G__21007 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21007) : p2.call(null,G__21007));
})();
if(cljs.core.truth_(or__3806__auto____$3)){
return or__3806__auto____$3;
} else {
var or__3806__auto____$4 = (function (){var G__21009 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21009) : p2.call(null,G__21009));
})();
if(cljs.core.truth_(or__3806__auto____$4)){
return or__3806__auto____$4;
} else {
var G__21010 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21010) : p2.call(null,G__21010));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21125__delegate = function (x,y,z,args){
var or__3806__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.some(((function (or__3806__auto__){
return (function (p1__20746_SHARP_){
var or__3806__auto____$1 = (function (){var G__21012 = p1__20746_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21012) : p1.call(null,G__21012));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var G__21013 = p1__20746_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21013) : p2.call(null,G__21013));
}
});})(or__3806__auto__))
,args);
}
};
var G__21125 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21126__i = 0, G__21126__a = new Array(arguments.length -  3);
while (G__21126__i < G__21126__a.length) {G__21126__a[G__21126__i] = arguments[G__21126__i + 3]; ++G__21126__i;}
  args = new cljs.core.IndexedSeq(G__21126__a,0);
} 
return G__21125__delegate.call(this,x,y,z,args);};
G__21125.cljs$lang$maxFixedArity = 3;
G__21125.cljs$lang$applyTo = (function (arglist__21127){
var x = cljs.core.first(arglist__21127);
arglist__21127 = cljs.core.next(arglist__21127);
var y = cljs.core.first(arglist__21127);
arglist__21127 = cljs.core.next(arglist__21127);
var z = cljs.core.first(arglist__21127);
var args = cljs.core.rest(arglist__21127);
return G__21125__delegate(x,y,z,args);
});
G__21125.cljs$core$IFn$_invoke$arity$variadic = G__21125__delegate;
return G__21125;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21128 = null;
if (arguments.length > 3) {
var G__21129__i = 0, G__21129__a = new Array(arguments.length -  3);
while (G__21129__i < G__21129__a.length) {G__21129__a[G__21129__i] = arguments[G__21129__i + 3]; ++G__21129__i;}
G__21128 = new cljs.core.IndexedSeq(G__21129__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3806__auto__ = (function (){var G__21059 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21059) : p1.call(null,G__21059));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__21061 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21061) : p2.call(null,G__21061));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var G__21062 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21062) : p3.call(null,G__21062));
}
}
});
var sp3__2 = (function (x,y){
var or__3806__auto__ = (function (){var G__21064 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21064) : p1.call(null,G__21064));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__21066 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21066) : p2.call(null,G__21066));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var or__3806__auto____$2 = (function (){var G__21068 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21068) : p3.call(null,G__21068));
})();
if(cljs.core.truth_(or__3806__auto____$2)){
return or__3806__auto____$2;
} else {
var or__3806__auto____$3 = (function (){var G__21070 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21070) : p1.call(null,G__21070));
})();
if(cljs.core.truth_(or__3806__auto____$3)){
return or__3806__auto____$3;
} else {
var or__3806__auto____$4 = (function (){var G__21072 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21072) : p2.call(null,G__21072));
})();
if(cljs.core.truth_(or__3806__auto____$4)){
return or__3806__auto____$4;
} else {
var G__21073 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21073) : p3.call(null,G__21073));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3806__auto__ = (function (){var G__21075 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21075) : p1.call(null,G__21075));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__21077 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21077) : p2.call(null,G__21077));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var or__3806__auto____$2 = (function (){var G__21079 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21079) : p3.call(null,G__21079));
})();
if(cljs.core.truth_(or__3806__auto____$2)){
return or__3806__auto____$2;
} else {
var or__3806__auto____$3 = (function (){var G__21081 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21081) : p1.call(null,G__21081));
})();
if(cljs.core.truth_(or__3806__auto____$3)){
return or__3806__auto____$3;
} else {
var or__3806__auto____$4 = (function (){var G__21083 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21083) : p2.call(null,G__21083));
})();
if(cljs.core.truth_(or__3806__auto____$4)){
return or__3806__auto____$4;
} else {
var or__3806__auto____$5 = (function (){var G__21085 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21085) : p3.call(null,G__21085));
})();
if(cljs.core.truth_(or__3806__auto____$5)){
return or__3806__auto____$5;
} else {
var or__3806__auto____$6 = (function (){var G__21087 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21087) : p1.call(null,G__21087));
})();
if(cljs.core.truth_(or__3806__auto____$6)){
return or__3806__auto____$6;
} else {
var or__3806__auto____$7 = (function (){var G__21089 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21089) : p2.call(null,G__21089));
})();
if(cljs.core.truth_(or__3806__auto____$7)){
return or__3806__auto____$7;
} else {
var G__21090 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21090) : p3.call(null,G__21090));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21130__delegate = function (x,y,z,args){
var or__3806__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.some(((function (or__3806__auto__){
return (function (p1__20747_SHARP_){
var or__3806__auto____$1 = (function (){var G__21092 = p1__20747_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21092) : p1.call(null,G__21092));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var or__3806__auto____$2 = (function (){var G__21094 = p1__20747_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21094) : p2.call(null,G__21094));
})();
if(cljs.core.truth_(or__3806__auto____$2)){
return or__3806__auto____$2;
} else {
var G__21095 = p1__20747_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21095) : p3.call(null,G__21095));
}
}
});})(or__3806__auto__))
,args);
}
};
var G__21130 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21131__i = 0, G__21131__a = new Array(arguments.length -  3);
while (G__21131__i < G__21131__a.length) {G__21131__a[G__21131__i] = arguments[G__21131__i + 3]; ++G__21131__i;}
  args = new cljs.core.IndexedSeq(G__21131__a,0);
} 
return G__21130__delegate.call(this,x,y,z,args);};
G__21130.cljs$lang$maxFixedArity = 3;
G__21130.cljs$lang$applyTo = (function (arglist__21132){
var x = cljs.core.first(arglist__21132);
arglist__21132 = cljs.core.next(arglist__21132);
var y = cljs.core.first(arglist__21132);
arglist__21132 = cljs.core.next(arglist__21132);
var z = cljs.core.first(arglist__21132);
var args = cljs.core.rest(arglist__21132);
return G__21130__delegate(x,y,z,args);
});
G__21130.cljs$core$IFn$_invoke$arity$variadic = G__21130__delegate;
return G__21130;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21133 = null;
if (arguments.length > 3) {
var G__21134__i = 0, G__21134__a = new Array(arguments.length -  3);
while (G__21134__i < G__21134__a.length) {G__21134__a[G__21134__i] = arguments[G__21134__i + 3]; ++G__21134__i;}
G__21133 = new cljs.core.IndexedSeq(G__21134__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21135__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__20748_SHARP_){
var G__21111 = x;
return (p1__20748_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20748_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21111) : p1__20748_SHARP_.call(null,G__21111));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__20749_SHARP_){
var or__3806__auto__ = (function (){var G__21113 = x;
return (p1__20749_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20749_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21113) : p1__20749_SHARP_.call(null,G__21113));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var G__21114 = y;
return (p1__20749_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20749_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21114) : p1__20749_SHARP_.call(null,G__21114));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__20750_SHARP_){
var or__3806__auto__ = (function (){var G__21116 = x;
return (p1__20750_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20750_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21116) : p1__20750_SHARP_.call(null,G__21116));
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var G__21118 = y;
return (p1__20750_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20750_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21118) : p1__20750_SHARP_.call(null,G__21118));
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var G__21119 = z;
return (p1__20750_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20750_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21119) : p1__20750_SHARP_.call(null,G__21119));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21136__delegate = function (x,y,z,args){
var or__3806__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.some(((function (or__3806__auto__,ps__$1){
return (function (p1__20751_SHARP_){
return cljs.core.some(p1__20751_SHARP_,args);
});})(or__3806__auto__,ps__$1))
,ps__$1);
}
};
var G__21136 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21137__i = 0, G__21137__a = new Array(arguments.length -  3);
while (G__21137__i < G__21137__a.length) {G__21137__a[G__21137__i] = arguments[G__21137__i + 3]; ++G__21137__i;}
  args = new cljs.core.IndexedSeq(G__21137__a,0);
} 
return G__21136__delegate.call(this,x,y,z,args);};
G__21136.cljs$lang$maxFixedArity = 3;
G__21136.cljs$lang$applyTo = (function (arglist__21138){
var x = cljs.core.first(arglist__21138);
arglist__21138 = cljs.core.next(arglist__21138);
var y = cljs.core.first(arglist__21138);
arglist__21138 = cljs.core.next(arglist__21138);
var z = cljs.core.first(arglist__21138);
var args = cljs.core.rest(arglist__21138);
return G__21136__delegate(x,y,z,args);
});
G__21136.cljs$core$IFn$_invoke$arity$variadic = G__21136__delegate;
return G__21136;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21139 = null;
if (arguments.length > 3) {
var G__21140__i = 0, G__21140__a = new Array(arguments.length -  3);
while (G__21140__i < G__21140__a.length) {G__21140__a[G__21140__i] = arguments[G__21140__i + 3]; ++G__21140__i;}
G__21139 = new cljs.core.IndexedSeq(G__21140__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21135 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21141__i = 0, G__21141__a = new Array(arguments.length -  3);
while (G__21141__i < G__21141__a.length) {G__21141__a[G__21141__i] = arguments[G__21141__i + 3]; ++G__21141__i;}
  ps = new cljs.core.IndexedSeq(G__21141__a,0);
} 
return G__21135__delegate.call(this,p1,p2,p3,ps);};
G__21135.cljs$lang$maxFixedArity = 3;
G__21135.cljs$lang$applyTo = (function (arglist__21142){
var p1 = cljs.core.first(arglist__21142);
arglist__21142 = cljs.core.next(arglist__21142);
var p2 = cljs.core.first(arglist__21142);
arglist__21142 = cljs.core.next(arglist__21142);
var p3 = cljs.core.first(arglist__21142);
var ps = cljs.core.rest(arglist__21142);
return G__21135__delegate(p1,p2,p3,ps);
});
G__21135.cljs$core$IFn$_invoke$arity$variadic = G__21135__delegate;
return G__21135;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21143 = null;
if (arguments.length > 3) {
var G__21144__i = 0, G__21144__a = new Array(arguments.length -  3);
while (G__21144__i < G__21144__a.length) {G__21144__a[G__21144__i] = arguments[G__21144__i + 3]; ++G__21144__i;}
G__21143 = new cljs.core.IndexedSeq(G__21144__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21143);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__21199 = null;
var G__21199__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21199__1 = (function (result){
var G__21185 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21185) : rf.call(null,G__21185));
});
var G__21199__2 = (function (result,input){
var G__21186 = result;
var G__21187 = (function (){var G__21188 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21188) : f.call(null,G__21188));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21186,G__21187) : rf.call(null,G__21186,G__21187));
});
var G__21199__3 = (function() { 
var G__21200__delegate = function (result,input,inputs){
var G__21189 = result;
var G__21190 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21189,G__21190) : rf.call(null,G__21189,G__21190));
};
var G__21200 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__21201__i = 0, G__21201__a = new Array(arguments.length -  2);
while (G__21201__i < G__21201__a.length) {G__21201__a[G__21201__i] = arguments[G__21201__i + 2]; ++G__21201__i;}
  inputs = new cljs.core.IndexedSeq(G__21201__a,0);
} 
return G__21200__delegate.call(this,result,input,inputs);};
G__21200.cljs$lang$maxFixedArity = 2;
G__21200.cljs$lang$applyTo = (function (arglist__21202){
var result = cljs.core.first(arglist__21202);
arglist__21202 = cljs.core.next(arglist__21202);
var input = cljs.core.first(arglist__21202);
var inputs = cljs.core.rest(arglist__21202);
return G__21200__delegate(result,input,inputs);
});
G__21200.cljs$core$IFn$_invoke$arity$variadic = G__21200__delegate;
return G__21200;
})()
;
G__21199 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__21199__0.call(this);
case 1:
return G__21199__1.call(this,result);
case 2:
return G__21199__2.call(this,result,input);
default:
var G__21203 = null;
if (arguments.length > 2) {
var G__21204__i = 0, G__21204__a = new Array(arguments.length -  2);
while (G__21204__i < G__21204__a.length) {G__21204__a[G__21204__i] = arguments[G__21204__i + 2]; ++G__21204__i;}
G__21203 = new cljs.core.IndexedSeq(G__21204__a,0);
}
return G__21199__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__21203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21199.cljs$lang$maxFixedArity = 2;
G__21199.cljs$lang$applyTo = G__21199__3.cljs$lang$applyTo;
G__21199.cljs$core$IFn$_invoke$arity$0 = G__21199__0;
G__21199.cljs$core$IFn$_invoke$arity$1 = G__21199__1;
G__21199.cljs$core$IFn$_invoke$arity$2 = G__21199__2;
G__21199.cljs$core$IFn$_invoke$arity$variadic = G__21199__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21199;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4693__auto___21205 = size;
var i_21206 = (0);
while(true){
if((i_21206 < n__4693__auto___21205)){
cljs.core.chunk_append(b,(function (){var G__21191 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21206);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21191) : f.call(null,G__21191));
})());

var G__21207 = (i_21206 + (1));
i_21206 = G__21207;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21192 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21192) : f.call(null,G__21192));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__21193 = cljs.core.first(s1);
var G__21194 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21193,G__21194) : f.call(null,G__21193,G__21194));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__21195 = cljs.core.first(s1);
var G__21196 = cljs.core.first(s2);
var G__21197 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21195,G__21196,G__21197) : f.call(null,G__21195,G__21196,G__21197));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__21208__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21145_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21145_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__21208 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21209__i = 0, G__21209__a = new Array(arguments.length -  4);
while (G__21209__i < G__21209__a.length) {G__21209__a[G__21209__i] = arguments[G__21209__i + 4]; ++G__21209__i;}
  colls = new cljs.core.IndexedSeq(G__21209__a,0);
} 
return G__21208__delegate.call(this,f,c1,c2,c3,colls);};
G__21208.cljs$lang$maxFixedArity = 4;
G__21208.cljs$lang$applyTo = (function (arglist__21210){
var f = cljs.core.first(arglist__21210);
arglist__21210 = cljs.core.next(arglist__21210);
var c1 = cljs.core.first(arglist__21210);
arglist__21210 = cljs.core.next(arglist__21210);
var c2 = cljs.core.first(arglist__21210);
arglist__21210 = cljs.core.next(arglist__21210);
var c3 = cljs.core.first(arglist__21210);
var colls = cljs.core.rest(arglist__21210);
return G__21208__delegate(f,c1,c2,c3,colls);
});
G__21208.cljs$core$IFn$_invoke$arity$variadic = G__21208__delegate;
return G__21208;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__21211 = null;
if (arguments.length > 4) {
var G__21212__i = 0, G__21212__a = new Array(arguments.length -  4);
while (G__21212__i < G__21212__a.length) {G__21212__a[G__21212__i] = arguments[G__21212__i + 4]; ++G__21212__i;}
G__21211 = new cljs.core.IndexedSeq(G__21212__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21221 = null;
var G__21221__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21221__1 = (function (result){
var G__21218 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21218) : rf.call(null,G__21218));
});
var G__21221__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__21219 = result;
var G__21220 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21219,G__21220) : rf.call(null,G__21219,G__21220));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__21221 = function(result,input){
switch(arguments.length){
case 0:
return G__21221__0.call(this);
case 1:
return G__21221__1.call(this,result);
case 2:
return G__21221__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21221.cljs$core$IFn$_invoke$arity$0 = G__21221__0;
G__21221.cljs$core$IFn$_invoke$arity$1 = G__21221__1;
G__21221.cljs$core$IFn$_invoke$arity$2 = G__21221__2;
return G__21221;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21228 = null;
var G__21228__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21228__1 = (function (result){
var G__21225 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21225) : rf.call(null,G__21225));
});
var G__21228__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__21226 = result;
var G__21227 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21226,G__21227) : rf.call(null,G__21226,G__21227));
}
});
G__21228 = function(result,input){
switch(arguments.length){
case 0:
return G__21228__0.call(this);
case 1:
return G__21228__1.call(this,result);
case 2:
return G__21228__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21228.cljs$core$IFn$_invoke$arity$0 = G__21228__0;
G__21228.cljs$core$IFn$_invoke$arity$1 = G__21228__1;
G__21228.cljs$core$IFn$_invoke$arity$2 = G__21228__2;
return G__21228;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__21229 = (n__$1 - (1));
var G__21230 = cljs.core.rest(s);
n__$1 = G__21229;
coll__$1 = G__21230;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__21233 = cljs.core.next(s);
var G__21234 = cljs.core.next(lead);
s = G__21233;
lead = G__21234;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__21247 = null;
var G__21247__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21247__1 = (function (result){
var G__21241 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21241) : rf.call(null,G__21241));
});
var G__21247__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3794__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3794__auto__)){
var G__21242 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21242) : pred.call(null,G__21242));
} else {
return and__3794__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__21243 = result;
var G__21244 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21243,G__21244) : rf.call(null,G__21243,G__21244));
}
});
G__21247 = function(result,input){
switch(arguments.length){
case 0:
return G__21247__0.call(this);
case 1:
return G__21247__1.call(this,result);
case 2:
return G__21247__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21247.cljs$core$IFn$_invoke$arity$0 = G__21247__0;
G__21247.cljs$core$IFn$_invoke$arity$1 = G__21247__1;
G__21247.cljs$core$IFn$_invoke$arity$2 = G__21247__2;
return G__21247;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3794__auto__ = s;
if(and__3794__auto__){
var G__21246 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21246) : pred__$1.call(null,G__21246));
} else {
return and__3794__auto__;
}
})())){
var G__21248 = pred__$1;
var G__21249 = cljs.core.rest(s);
pred__$1 = G__21248;
coll__$1 = G__21249;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__21258 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21258) : f.call(null,G__21258));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__21261__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__21261 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21262__i = 0, G__21262__a = new Array(arguments.length -  2);
while (G__21262__i < G__21262__a.length) {G__21262__a[G__21262__i] = arguments[G__21262__i + 2]; ++G__21262__i;}
  colls = new cljs.core.IndexedSeq(G__21262__a,0);
} 
return G__21261__delegate.call(this,c1,c2,colls);};
G__21261.cljs$lang$maxFixedArity = 2;
G__21261.cljs$lang$applyTo = (function (arglist__21263){
var c1 = cljs.core.first(arglist__21263);
arglist__21263 = cljs.core.next(arglist__21263);
var c2 = cljs.core.first(arglist__21263);
var colls = cljs.core.rest(arglist__21263);
return G__21261__delegate(c1,c2,colls);
});
G__21261.cljs$core$IFn$_invoke$arity$variadic = G__21261__delegate;
return G__21261;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21264 = null;
if (arguments.length > 2) {
var G__21265__i = 0, G__21265__a = new Array(arguments.length -  2);
while (G__21265__i < G__21265__a.length) {G__21265__a[G__21265__i] = arguments[G__21265__i + 2]; ++G__21265__i;}
G__21264 = new cljs.core.IndexedSeq(G__21265__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__21280 = null;
var G__21280__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21280__1 = (function (result){
var G__21273 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21273) : rf.call(null,G__21273));
});
var G__21280__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__21274 = result;
var G__21275 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21274,G__21275) : rf.call(null,G__21274,G__21275));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__21276 = sepr;
var G__21277 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21276,G__21277) : rf.call(null,G__21276,G__21277));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__21278 = result;
var G__21279 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21278,G__21279) : rf.call(null,G__21278,G__21279));
}
});
G__21280 = function(result,input){
switch(arguments.length){
case 0:
return G__21280__0.call(this);
case 1:
return G__21280__1.call(this,result);
case 2:
return G__21280__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21280.cljs$core$IFn$_invoke$arity$0 = G__21280__0;
G__21280.cljs$core$IFn$_invoke$arity$1 = G__21280__1;
G__21280.cljs$core$IFn$_invoke$arity$2 = G__21280__2;
return G__21280;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21289__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21289 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21290__i = 0, G__21290__a = new Array(arguments.length -  1);
while (G__21290__i < G__21290__a.length) {G__21290__a[G__21290__i] = arguments[G__21290__i + 1]; ++G__21290__i;}
  colls = new cljs.core.IndexedSeq(G__21290__a,0);
} 
return G__21289__delegate.call(this,f,colls);};
G__21289.cljs$lang$maxFixedArity = 1;
G__21289.cljs$lang$applyTo = (function (arglist__21291){
var f = cljs.core.first(arglist__21291);
var colls = cljs.core.rest(arglist__21291);
return G__21289__delegate(f,colls);
});
G__21289.cljs$core$IFn$_invoke$arity$variadic = G__21289__delegate;
return G__21289;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21292 = null;
if (arguments.length > 1) {
var G__21293__i = 0, G__21293__a = new Array(arguments.length -  1);
while (G__21293__i < G__21293__a.length) {G__21293__a[G__21293__i] = arguments[G__21293__i + 1]; ++G__21293__i;}
G__21292 = new cljs.core.IndexedSeq(G__21293__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21312 = null;
var G__21312__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21312__1 = (function (result){
var G__21306 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21306) : rf.call(null,G__21306));
});
var G__21312__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21307 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21307) : pred.call(null,G__21307));
})())){
var G__21308 = result;
var G__21309 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21308,G__21309) : rf.call(null,G__21308,G__21309));
} else {
return result;
}
});
G__21312 = function(result,input){
switch(arguments.length){
case 0:
return G__21312__0.call(this);
case 1:
return G__21312__1.call(this,result);
case 2:
return G__21312__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21312.cljs$core$IFn$_invoke$arity$0 = G__21312__0;
G__21312.cljs$core$IFn$_invoke$arity$1 = G__21312__1;
G__21312.cljs$core$IFn$_invoke$arity$2 = G__21312__2;
return G__21312;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4693__auto___21313 = size;
var i_21314 = (0);
while(true){
if((i_21314 < n__4693__auto___21313)){
if(cljs.core.truth_((function (){var G__21310 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21314);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21310) : pred.call(null,G__21310));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21314));
} else {
}

var G__21315 = (i_21314 + (1));
i_21314 = G__21315;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21311 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21311) : pred.call(null,G__21311));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__21322 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21322) : branch_QMARK_.call(null,G__21322));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__21323 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21323) : children.call(null,G__21323));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__21324_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__21324_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__21327 = to;
if(G__21327){
var bit__4480__auto__ = (G__21327.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4480__auto__) || (G__21327.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__21328 = to;
if(G__21328){
var bit__4480__auto__ = (G__21328.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4480__auto__) || (G__21328.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__21330 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21330) : f.call(null,G__21330));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__21331__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__21331 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21332__i = 0, G__21332__a = new Array(arguments.length -  4);
while (G__21332__i < G__21332__a.length) {G__21332__a[G__21332__i] = arguments[G__21332__i + 4]; ++G__21332__i;}
  colls = new cljs.core.IndexedSeq(G__21332__a,0);
} 
return G__21331__delegate.call(this,f,c1,c2,c3,colls);};
G__21331.cljs$lang$maxFixedArity = 4;
G__21331.cljs$lang$applyTo = (function (arglist__21333){
var f = cljs.core.first(arglist__21333);
arglist__21333 = cljs.core.next(arglist__21333);
var c1 = cljs.core.first(arglist__21333);
arglist__21333 = cljs.core.next(arglist__21333);
var c2 = cljs.core.first(arglist__21333);
arglist__21333 = cljs.core.next(arglist__21333);
var c3 = cljs.core.first(arglist__21333);
var colls = cljs.core.rest(arglist__21333);
return G__21331__delegate(f,c1,c2,c3,colls);
});
G__21331.cljs$core$IFn$_invoke$arity$variadic = G__21331__delegate;
return G__21331;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__21334 = null;
if (arguments.length > 4) {
var G__21335__i = 0, G__21335__a = new Array(arguments.length -  4);
while (G__21335__i < G__21335__a.length) {G__21335__a[G__21335__i] = arguments[G__21335__i + 4]; ++G__21335__i;}
G__21334 = new cljs.core.IndexedSeq(G__21335__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__21337 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21337) : pred.call(null,G__21337));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__21352 = m__$1;
if(G__21352){
var bit__4487__auto__ = (G__21352.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4487__auto__) || (G__21352.cljs$core$ILookup$)){
return true;
} else {
if((!G__21352.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21352);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21352);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__21353 = sentinel;
var G__21354 = m__$2;
var G__21355 = cljs.core.next(ks__$1);
sentinel = G__21353;
m__$1 = G__21354;
ks__$1 = G__21355;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__21356,v){
var vec__21361 = p__21356;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21361,(0),null);
var ks = cljs.core.nthnext(vec__21361,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__21362,f){
var vec__21400 = p__21362;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21400,(0),null);
var ks = cljs.core.nthnext(vec__21400,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21401 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21401) : f.call(null,G__21401));
})());
}
});
var update_in__4 = (function (m,p__21363,f,a){
var vec__21402 = p__21363;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21402,(0),null);
var ks = cljs.core.nthnext(vec__21402,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21403 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21404 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21403,G__21404) : f.call(null,G__21403,G__21404));
})());
}
});
var update_in__5 = (function (m,p__21364,f,a,b){
var vec__21405 = p__21364;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21405,(0),null);
var ks = cljs.core.nthnext(vec__21405,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21406 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21407 = a;
var G__21408 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21406,G__21407,G__21408) : f.call(null,G__21406,G__21407,G__21408));
})());
}
});
var update_in__6 = (function (m,p__21365,f,a,b,c){
var vec__21409 = p__21365;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21409,(0),null);
var ks = cljs.core.nthnext(vec__21409,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21410 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21411 = a;
var G__21412 = b;
var G__21413 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21410,G__21411,G__21412,G__21413) : f.call(null,G__21410,G__21411,G__21412,G__21413));
})());
}
});
var update_in__7 = (function() { 
var G__21415__delegate = function (m,p__21366,f,a,b,c,args){
var vec__21414 = p__21366;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21414,(0),null);
var ks = cljs.core.nthnext(vec__21414,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__21415 = function (m,p__21366,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__21416__i = 0, G__21416__a = new Array(arguments.length -  6);
while (G__21416__i < G__21416__a.length) {G__21416__a[G__21416__i] = arguments[G__21416__i + 6]; ++G__21416__i;}
  args = new cljs.core.IndexedSeq(G__21416__a,0);
} 
return G__21415__delegate.call(this,m,p__21366,f,a,b,c,args);};
G__21415.cljs$lang$maxFixedArity = 6;
G__21415.cljs$lang$applyTo = (function (arglist__21417){
var m = cljs.core.first(arglist__21417);
arglist__21417 = cljs.core.next(arglist__21417);
var p__21366 = cljs.core.first(arglist__21417);
arglist__21417 = cljs.core.next(arglist__21417);
var f = cljs.core.first(arglist__21417);
arglist__21417 = cljs.core.next(arglist__21417);
var a = cljs.core.first(arglist__21417);
arglist__21417 = cljs.core.next(arglist__21417);
var b = cljs.core.first(arglist__21417);
arglist__21417 = cljs.core.next(arglist__21417);
var c = cljs.core.first(arglist__21417);
var args = cljs.core.rest(arglist__21417);
return G__21415__delegate(m,p__21366,f,a,b,c,args);
});
G__21415.cljs$core$IFn$_invoke$arity$variadic = G__21415__delegate;
return G__21415;
})()
;
update_in = function(m,p__21366,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__21366,f);
case 4:
return update_in__4.call(this,m,p__21366,f,a);
case 5:
return update_in__5.call(this,m,p__21366,f,a,b);
case 6:
return update_in__6.call(this,m,p__21366,f,a,b,c);
default:
var G__21418 = null;
if (arguments.length > 6) {
var G__21419__i = 0, G__21419__a = new Array(arguments.length -  6);
while (G__21419__i < G__21419__a.length) {G__21419__a[G__21419__i] = arguments[G__21419__i + 6]; ++G__21419__i;}
G__21418 = new cljs.core.IndexedSeq(G__21419__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__21366,f,a,b,c, G__21418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21430 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21430) : f.call(null,G__21430));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21431 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21432 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21431,G__21432) : f.call(null,G__21431,G__21432));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21433 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21434 = x;
var G__21435 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21433,G__21434,G__21435) : f.call(null,G__21433,G__21434,G__21435));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21436 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21437 = x;
var G__21438 = y;
var G__21439 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21436,G__21437,G__21438,G__21439) : f.call(null,G__21436,G__21437,G__21438,G__21439));
})());
});
var update__7 = (function() { 
var G__21440__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__21440 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__21441__i = 0, G__21441__a = new Array(arguments.length -  6);
while (G__21441__i < G__21441__a.length) {G__21441__a[G__21441__i] = arguments[G__21441__i + 6]; ++G__21441__i;}
  more = new cljs.core.IndexedSeq(G__21441__a,0);
} 
return G__21440__delegate.call(this,m,k,f,x,y,z,more);};
G__21440.cljs$lang$maxFixedArity = 6;
G__21440.cljs$lang$applyTo = (function (arglist__21442){
var m = cljs.core.first(arglist__21442);
arglist__21442 = cljs.core.next(arglist__21442);
var k = cljs.core.first(arglist__21442);
arglist__21442 = cljs.core.next(arglist__21442);
var f = cljs.core.first(arglist__21442);
arglist__21442 = cljs.core.next(arglist__21442);
var x = cljs.core.first(arglist__21442);
arglist__21442 = cljs.core.next(arglist__21442);
var y = cljs.core.first(arglist__21442);
arglist__21442 = cljs.core.next(arglist__21442);
var z = cljs.core.first(arglist__21442);
var more = cljs.core.rest(arglist__21442);
return G__21440__delegate(m,k,f,x,y,z,more);
});
G__21440.cljs$core$IFn$_invoke$arity$variadic = G__21440__delegate;
return G__21440;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__21443 = null;
if (arguments.length > 6) {
var G__21444__i = 0, G__21444__a = new Array(arguments.length -  6);
while (G__21444__i < G__21444__a.length) {G__21444__a[G__21444__i] = arguments[G__21444__i + 6]; ++G__21444__i;}
G__21443 = new cljs.core.IndexedSeq(G__21444__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__21443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__21445 = (ll - (5));
var G__21446 = r;
ll = G__21445;
ret = G__21446;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21451 = cljs.core.pv_aget(node,(0));
var G__21452 = (level - (5));
node = G__21451;
level = G__21452;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21453 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__21454 = (level - (5));
node = G__21453;
level = G__21454;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21464 = init__$2;
var G__21465 = (j + i);
var G__21466 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21464,G__21465,G__21466) : f.call(null,G__21464,G__21465,G__21466));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21477 = (j + (1));
var G__21478 = init__$3;
j = G__21477;
init__$2 = G__21478;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21467 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21467) : cljs.core.deref.call(null,G__21467));
} else {
var G__21479 = (i + len);
var G__21480 = init__$2;
i = G__21479;
init__$1 = G__21480;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__21468 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__21468) : cljs.core.tv_editable_root.call(null,G__21468));
})(),(function (){var G__21469 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__21469) : cljs.core.tv_editable_tail.call(null,G__21469));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21470 = init__$2;
var G__21471 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21470,G__21471) : f.call(null,G__21470,G__21471));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21481 = (j + (1));
var G__21482 = init__$3;
j = G__21481;
init__$2 = G__21482;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21472 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21472) : cljs.core.deref.call(null,G__21472));
} else {
var G__21483 = (i + len);
var G__21484 = init__$2;
i = G__21483;
init__$1 = G__21484;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__21473 = coll__$1;
var G__21474 = cljs.core.first_array_for_longvec(coll__$1);
var G__21475 = (0);
var G__21476 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21473,G__21474,G__21475,G__21476) : cljs.core.chunked_seq.call(null,G__21473,G__21474,G__21475,G__21476));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4693__auto___21485 = len;
var i_21486 = (0);
while(true){
if((i_21486 < n__4693__auto___21485)){
(new_tail[i_21486] = (self__.tail[i_21486]));

var G__21487 = (i_21486 + (1));
i_21486 = G__21487;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__21488 = null;
var G__21488__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21488__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21488 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21488__2.call(this,self__,k);
case 3:
return G__21488__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21488.cljs$core$IFn$_invoke$arity$2 = G__21488__2;
G__21488.cljs$core$IFn$_invoke$arity$3 = G__21488__3;
return G__21488;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args21463){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21463)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__21489 = (i + (1));
var G__21490 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__21489;
out = G__21490;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21491__i = 0, G__21491__a = new Array(arguments.length -  0);
while (G__21491__i < G__21491__a.length) {G__21491__a[G__21491__i] = arguments[G__21491__i + 0]; ++G__21491__i;}
  args = new cljs.core.IndexedSeq(G__21491__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__21492){
var args = cljs.core.seq(arglist__21492);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21493 = self__.vec;
var G__21494 = self__.node;
var G__21495 = self__.i;
var G__21496 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21493,G__21494,G__21495,G__21496) : cljs.core.chunked_seq.call(null,G__21493,G__21494,G__21495,G__21496));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__21497 = self__.vec;
var G__21498 = (self__.i + self__.off);
var G__21499 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21497,G__21498,G__21499) : cljs.core.subvec.call(null,G__21497,G__21498,G__21499));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__21500 = self__.vec;
var G__21501 = (self__.i + self__.off);
var G__21502 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21500,G__21501,G__21502) : cljs.core.subvec.call(null,G__21500,G__21501,G__21502));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21503 = self__.vec;
var G__21504 = self__.node;
var G__21505 = self__.i;
var G__21506 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21503,G__21504,G__21505,G__21506) : cljs.core.chunked_seq.call(null,G__21503,G__21504,G__21505,G__21506));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21507 = self__.vec;
var G__21508 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21509 = end;
var G__21510 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21507,G__21508,G__21509,G__21510) : cljs.core.chunked_seq.call(null,G__21507,G__21508,G__21509,G__21510));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__21511 = self__.vec;
var G__21512 = self__.node;
var G__21513 = self__.i;
var G__21514 = self__.off;
var G__21515 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__21511,G__21512,G__21513,G__21514,G__21515) : cljs.core.chunked_seq.call(null,G__21511,G__21512,G__21513,G__21514,G__21515));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21516 = self__.vec;
var G__21517 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21518 = end;
var G__21519 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21516,G__21517,G__21518,G__21519) : cljs.core.chunked_seq.call(null,G__21516,G__21517,G__21518,G__21519));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__21521 = self__.meta;
var G__21522 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__21523 = self__.start;
var G__21524 = (function (){var x__4123__auto__ = self__.end;
var y__4124__auto__ = (v_pos + (1));
return ((x__4123__auto__ > y__4124__auto__) ? x__4123__auto__ : y__4124__auto__);
})();
var G__21525 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21521,G__21522,G__21523,G__21524,G__21525) : cljs.core.build_subvec.call(null,G__21521,G__21522,G__21523,G__21524,G__21525));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__21526 = self__.meta;
var G__21527 = self__.v;
var G__21528 = self__.start;
var G__21529 = (self__.end - (1));
var G__21530 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21526,G__21527,G__21528,G__21529,G__21530) : cljs.core.build_subvec.call(null,G__21526,G__21527,G__21528,G__21529,G__21530));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__21532 = meta__$1;
var G__21533 = self__.v;
var G__21534 = self__.start;
var G__21535 = self__.end;
var G__21536 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21532,G__21533,G__21534,G__21535,G__21536) : cljs.core.build_subvec.call(null,G__21532,G__21533,G__21534,G__21535,G__21536));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21537 = self__.meta;
var G__21538 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__21539 = self__.start;
var G__21540 = (self__.end + (1));
var G__21541 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21537,G__21538,G__21539,G__21540,G__21541) : cljs.core.build_subvec.call(null,G__21537,G__21538,G__21539,G__21540,G__21541));
});

cljs.core.Subvec.prototype.call = (function() {
var G__21542 = null;
var G__21542__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21542__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21542 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21542__2.call(this,self__,k);
case 3:
return G__21542__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21542.cljs$core$IFn$_invoke$arity$2 = G__21542__2;
G__21542.cljs$core$IFn$_invoke$arity$3 = G__21542__3;
return G__21542;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args21520){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21520)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__21543 = meta;
var G__21544 = v.v;
var G__21545 = (v.start + start);
var G__21546 = (v.start + end);
var G__21547 = __hash;
meta = G__21543;
v = G__21544;
start = G__21545;
end = G__21546;
__hash = G__21547;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj21554 = {};
return obj21554;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__21562 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__21563 = (level - (5));
node = G__21562;
level = G__21563;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__21567 = null;
var G__21567__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21567__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21567 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21567__2.call(this,self__,k);
case 3:
return G__21567__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21567.cljs$core$IFn$_invoke$arity$2 = G__21567__2;
G__21567.cljs$core$IFn$_invoke$arity$3 = G__21567__3;
return G__21567;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args21564){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21564)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3806__auto__ = self__.front;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3806__auto__ = self__.rear;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__21568 = (i + incr);
i = G__21568;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__21569 = (i + (1));
var G__21570 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__21569;
out = G__21570;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj21574 = {};
return obj21574;
})();
var l = ks.length;
var i_21575 = (0);
while(true){
if((i_21575 < l)){
var k_21576 = (ks[i_21575]);
(new_obj[k_21576] = (obj[k_21576]));

var G__21577 = (i_21575 + (1));
i_21575 = G__21577;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3794__auto__ = (function (){var G__21581 = k;
return goog.isString(G__21581);
})();
if(cljs.core.truth_(and__3794__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3794__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__21582 = init__$1;
var G__21583 = k;
var G__21584 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21582,G__21583,G__21584) : f.call(null,G__21582,G__21583,G__21584));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21585 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21585) : cljs.core.deref.call(null,G__21585));
} else {
var G__21591 = cljs.core.rest(keys__$1);
var G__21592 = init__$2;
keys__$1 = G__21591;
init__$1 = G__21592;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3794__auto__ = (function (){var G__21587 = k;
return goog.isString(G__21587);
})();
if(cljs.core.truth_(and__3794__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3794__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__21588 = k;
return goog.isString(G__21588);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3794__auto__ = (function (){var G__21590 = k;
return goog.isString(G__21590);
})();
if(cljs.core.truth_(and__3794__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3794__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__21578_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__21578_SHARP_,(self__.strobj[p1__21578_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__21593 = null;
var G__21593__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21593__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21593 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21593__2.call(this,self__,k);
case 3:
return G__21593__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21593.cljs$core$IFn$_invoke$arity$2 = G__21593__2;
G__21593.cljs$core$IFn$_invoke$arity$3 = G__21593__3;
return G__21593;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args21579){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21579)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj21595 = {};
return obj21595;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__21596 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21596,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21596,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__21597 = (i + (2));
i = G__21597;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__21598 = (i + (2));
i = G__21598;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__21599 = (i + (2));
i = G__21599;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__21600 = (i + (2));
i = G__21600;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__21601 = (i + (2));
i = G__21601;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3806__auto__ = (function (){var G__21605 = k;
return goog.isString(G__21605);
})();
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_21606 = (0);
while(true){
if((i_21606 < l)){
(narr[i_21606] = (arr[i_21606]));

var G__21607 = (i_21606 + (1));
i_21606 = G__21607;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21609 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21609) : cljs.core.keys.call(null,G__21609));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21610 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21610) : cljs.core.vals.call(null,G__21610));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21611 = cljs.core.seq(coll);
var chunk__21612 = null;
var count__21613 = (0);
var i__21614 = (0);
while(true){
if((i__21614 < count__21613)){
var vec__21615 = chunk__21612.cljs$core$IIndexed$_nth$arity$2(null,i__21614);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21615,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21615,(1),null);
var G__21616_21629 = v;
var G__21617_21630 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21616_21629,G__21617_21630) : f.call(null,G__21616_21629,G__21617_21630));

var G__21631 = seq__21611;
var G__21632 = chunk__21612;
var G__21633 = count__21613;
var G__21634 = (i__21614 + (1));
seq__21611 = G__21631;
chunk__21612 = G__21632;
count__21613 = G__21633;
i__21614 = G__21634;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21611);
if(temp__4126__auto__){
var seq__21611__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21611__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__21611__$1);
var G__21635 = cljs.core.chunk_rest(seq__21611__$1);
var G__21636 = c__4593__auto__;
var G__21637 = cljs.core.count(c__4593__auto__);
var G__21638 = (0);
seq__21611 = G__21635;
chunk__21612 = G__21636;
count__21613 = G__21637;
i__21614 = G__21638;
continue;
} else {
var vec__21618 = cljs.core.first(seq__21611__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21618,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21618,(1),null);
var G__21619_21639 = v;
var G__21620_21640 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21619_21639,G__21620_21640) : f.call(null,G__21619_21639,G__21620_21640));

var G__21641 = cljs.core.next(seq__21611__$1);
var G__21642 = null;
var G__21643 = (0);
var G__21644 = (0);
seq__21611 = G__21641;
chunk__21612 = G__21642;
count__21613 = G__21643;
i__21614 = G__21644;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__21621 = init__$1;
var G__21622 = (self__.arr[i]);
var G__21623 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21621,G__21622,G__21623) : f.call(null,G__21621,G__21622,G__21623));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21624 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21624) : cljs.core.deref.call(null,G__21624));
} else {
var G__21645 = (i + (2));
var G__21646 = init__$2;
i = G__21645;
init__$1 = G__21646;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__21625 = other;
if(G__21625){
var bit__4480__auto__ = (G__21625.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4480__auto__) || (G__21625.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__21647 = (i + (2));
i = G__21647;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj21627 = {};
return obj21627;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__21648 = (s + (2));
var G__21649 = d;
s = G__21648;
d = G__21649;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__21650 = (s + (2));
var G__21651 = (d + (2));
s = G__21650;
d = G__21651;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__21628 = cljs.core.aclone(self__.arr);
(G__21628[(idx + (1))] = v);

return G__21628;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21652 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21653 = cljs.core.next(es);
ret = G__21652;
es = G__21653;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__21654 = null;
var G__21654__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21654__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21654 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21654__2.call(this,self__,k);
case 3:
return G__21654__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21654.cljs$core$IFn$_invoke$arity$2 = G__21654__2;
G__21654.cljs$core$IFn$_invoke$arity$3 = G__21654__3;
return G__21654;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args21608){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21608)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21655 = (i + (2));
var G__21656 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21655;
ret = G__21656;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__21657_21665 = self__.arr;
G__21657_21665.pop();

G__21657_21665.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__21658 = self__.len;
var G__21659 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__21658,G__21659) : cljs.core.array__GT_transient_hash_map.call(null,G__21658,G__21659));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__21660 = o;
if(G__21660){
var bit__4487__auto__ = (G__21660.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4487__auto__) || (G__21660.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21660.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21660);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21660);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__21661 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21661) : cljs.core.key.call(null,G__21661));
})(),(function (){var G__21662 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21662) : cljs.core.val.call(null,G__21662));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21666 = cljs.core.next(es);
var G__21667 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__21663 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21663) : cljs.core.key.call(null,G__21663));
})(),(function (){var G__21664 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21664) : cljs.core.val.call(null,G__21664));
})());
es = G__21666;
tcoll__$2 = G__21667;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__21668 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__21669 = (i + (2));
out = G__21668;
i = G__21669;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__21672 = cljs.core.aclone(arr);
(G__21672[i] = a);

return G__21672;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__21673 = cljs.core.aclone(arr);
(G__21673[i] = a);

(G__21673[j] = b);

return G__21673;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__21678 = init__$1;
var G__21679 = k;
var G__21680 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21678,G__21679,G__21680) : f.call(null,G__21678,G__21679,G__21680));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21681 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21681) : cljs.core.deref.call(null,G__21681));
} else {
var G__21682 = (i + (2));
var G__21683 = init__$2;
i = G__21682;
init__$1 = G__21683;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21684 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21684) : cljs.core.create_inode_seq.call(null,G__21684));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21698 = (0);
var j_21699 = (0);
while(true){
if((i_21698 < (32))){
if((((self__.bitmap >>> i_21698) & (1)) === (0))){
var G__21700 = (i_21698 + (1));
var G__21701 = j_21699;
i_21698 = G__21700;
j_21699 = G__21701;
continue;
} else {
(nodes[i_21698] = ((!(((self__.arr[j_21699]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_21699])),(self__.arr[j_21699]),(self__.arr[(j_21699 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21699 + (1))])));

var G__21702 = (i_21698 + (1));
var G__21703 = (j_21699 + (2));
i_21698 = G__21702;
j_21699 = G__21703;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21685 = edit__$1;
var G__21686 = (shift + (5));
var G__21687 = key_or_nil;
var G__21688 = val_or_node;
var G__21689 = hash;
var G__21690 = key;
var G__21691 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__21685,G__21686,G__21687,G__21688,G__21689,G__21690,G__21691) : cljs.core.create_node.call(null,G__21685,G__21686,G__21687,G__21688,G__21689,G__21690,G__21691));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21704 = (0);
var j_21705 = (0);
while(true){
if((i_21704 < (32))){
if((((self__.bitmap >>> i_21704) & (1)) === (0))){
var G__21706 = (i_21704 + (1));
var G__21707 = j_21705;
i_21704 = G__21706;
j_21705 = G__21707;
continue;
} else {
(nodes[i_21704] = ((!(((self__.arr[j_21705]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_21705])),(self__.arr[j_21705]),(self__.arr[(j_21705 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21705 + (1))])));

var G__21708 = (i_21704 + (1));
var G__21709 = (j_21705 + (2));
i_21704 = G__21708;
j_21705 = G__21709;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21692 = (shift + (5));
var G__21693 = key_or_nil;
var G__21694 = val_or_node;
var G__21695 = hash;
var G__21696 = key;
var G__21697 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__21692,G__21693,G__21694,G__21695,G__21696,G__21697) : cljs.core.create_node.call(null,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__21710 = (i + (1));
var G__21711 = (j + (2));
var G__21712 = (bitmap | ((1) << i));
i = G__21710;
j = G__21711;
bitmap = G__21712;
continue;
} else {
var G__21713 = (i + (1));
var G__21714 = j;
var G__21715 = bitmap;
i = G__21713;
j = G__21714;
bitmap = G__21715;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21716 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__21716) : cljs.core.create_array_node_seq.call(null,G__21716));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21717 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21717) : cljs.core.deref.call(null,G__21717));
} else {
var G__21718 = (i + (1));
var G__21719 = init__$2;
i = G__21718;
init__$1 = G__21719;
continue;
}
} else {
var G__21720 = (i + (1));
var G__21721 = init__$1;
i = G__21720;
init__$1 = G__21721;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__21722 = (i + (2));
i = G__21722;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21723 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21723) : cljs.core.create_inode_seq.call(null,G__21723));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__21724 = self__.nodes;
var G__21725 = (self__.i + (2));
var G__21726 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21724,G__21725,G__21726) : cljs.core.create_inode_seq.call(null,G__21724,G__21725,G__21726));
} else {
var G__21727 = self__.nodes;
var G__21728 = self__.i;
var G__21729 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21727,G__21728,G__21729) : cljs.core.create_inode_seq.call(null,G__21727,G__21728,G__21729));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__21733 = (j + (2));
j = G__21733;
continue;
}
} else {
var G__21734 = (j + (2));
j = G__21734;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21735 = null;
var G__21736 = self__.nodes;
var G__21737 = self__.i;
var G__21738 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__21735,G__21736,G__21737,G__21738) : cljs.core.create_array_node_seq.call(null,G__21735,G__21736,G__21737,G__21738));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__21743 = (j + (1));
j = G__21743;
continue;
}
} else {
var G__21744 = (j + (1));
j = G__21744;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21746 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21746) : cljs.core.keys.call(null,G__21746));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21747 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21747) : cljs.core.vals.call(null,G__21747));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21748 = cljs.core.seq(coll);
var chunk__21749 = null;
var count__21750 = (0);
var i__21751 = (0);
while(true){
if((i__21751 < count__21750)){
var vec__21752 = chunk__21749.cljs$core$IIndexed$_nth$arity$2(null,i__21751);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21752,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21752,(1),null);
var G__21753_21764 = v;
var G__21754_21765 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21753_21764,G__21754_21765) : f.call(null,G__21753_21764,G__21754_21765));

var G__21766 = seq__21748;
var G__21767 = chunk__21749;
var G__21768 = count__21750;
var G__21769 = (i__21751 + (1));
seq__21748 = G__21766;
chunk__21749 = G__21767;
count__21750 = G__21768;
i__21751 = G__21769;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21748);
if(temp__4126__auto__){
var seq__21748__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21748__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__21748__$1);
var G__21770 = cljs.core.chunk_rest(seq__21748__$1);
var G__21771 = c__4593__auto__;
var G__21772 = cljs.core.count(c__4593__auto__);
var G__21773 = (0);
seq__21748 = G__21770;
chunk__21749 = G__21771;
count__21750 = G__21772;
i__21751 = G__21773;
continue;
} else {
var vec__21755 = cljs.core.first(seq__21748__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21755,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21755,(1),null);
var G__21756_21774 = v;
var G__21757_21775 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21756_21774,G__21757_21775) : f.call(null,G__21756_21774,G__21757_21775));

var G__21776 = cljs.core.next(seq__21748__$1);
var G__21777 = null;
var G__21778 = (0);
var G__21779 = (0);
seq__21748 = G__21776;
chunk__21749 = G__21777;
count__21750 = G__21778;
i__21751 = G__21779;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__21758 = init;
var G__21759 = null;
var G__21760 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21758,G__21759,G__21760) : f.call(null,G__21758,G__21759,G__21760));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21761 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21761) : cljs.core.deref.call(null,G__21761));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj21763 = {};
return obj21763;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21780 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21781 = cljs.core.next(es);
ret = G__21780;
es = G__21781;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__21782 = null;
var G__21782__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21782__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21782 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21782__2.call(this,self__,k);
case 3:
return G__21782__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21782.cljs$core$IFn$_invoke$arity$2 = G__21782__2;
G__21782.cljs$core$IFn$_invoke$arity$3 = G__21782__3;
return G__21782;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args21745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21745)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21783 = (i + (2));
var G__21784 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21783;
ret = G__21784;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21785 = (i + (1));
var G__21786 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__21785;
out = G__21786;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__21787 = o;
if(G__21787){
var bit__4487__auto__ = (G__21787.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4487__auto__) || (G__21787.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21787.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21787);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21787);
}
})()){
return tcoll.assoc_BANG_((function (){var G__21788 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21788) : cljs.core.key.call(null,G__21788));
})(),(function (){var G__21789 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21789) : cljs.core.val.call(null,G__21789));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21792 = cljs.core.next(es);
var G__21793 = tcoll__$1.assoc_BANG_((function (){var G__21790 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21790) : cljs.core.key.call(null,G__21790));
})(),(function (){var G__21791 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21791) : cljs.core.val.call(null,G__21791));
})());
es = G__21792;
tcoll__$1 = G__21793;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__21794 = ((ascending_QMARK_)?t.left:t.right);
var G__21795 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__21794;
stack__$1 = G__21795;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21808 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21808) : cljs.core.deref.call(null,G__21808));
} else {
var init__$2 = (function (){var G__21809 = init__$1;
var G__21810 = node.key;
var G__21811 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21809,G__21810,G__21811) : f.call(null,G__21809,G__21810,G__21811));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21812 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21812) : cljs.core.deref.call(null,G__21812));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__21813 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21813) : cljs.core.deref.call(null,G__21813));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__21815 = null;
var G__21815__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21815__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21815 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21815__2.call(this,self__,k);
case 3:
return G__21815__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21815.cljs$core$IFn$_invoke$arity$2 = G__21815__2;
G__21815.cljs$core$IFn$_invoke$arity$3 = G__21815__3;
return G__21815;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args21814){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21814)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__21817 = null;
var G__21817__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21817__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21817 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21817__2.call(this,self__,k);
case 3:
return G__21817__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21817.cljs$core$IFn$_invoke$arity$2 = G__21817__2;
G__21817.cljs$core$IFn$_invoke$arity$3 = G__21817__3;
return G__21817;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args21816){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21816)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__21830 = k;
var G__21831 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21830,G__21831) : comp.call(null,G__21830,G__21831));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__21850 = k;
var G__21851 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21850,G__21851) : comp.call(null,G__21850,G__21851));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__21862 = k;
var G__21863 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21862,G__21863) : comp.call(null,G__21862,G__21863));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21865 = cljs.core.seq(coll);
var chunk__21866 = null;
var count__21867 = (0);
var i__21868 = (0);
while(true){
if((i__21868 < count__21867)){
var vec__21869 = chunk__21866.cljs$core$IIndexed$_nth$arity$2(null,i__21868);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(1),null);
var G__21870_21882 = v;
var G__21871_21883 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21870_21882,G__21871_21883) : f.call(null,G__21870_21882,G__21871_21883));

var G__21884 = seq__21865;
var G__21885 = chunk__21866;
var G__21886 = count__21867;
var G__21887 = (i__21868 + (1));
seq__21865 = G__21884;
chunk__21866 = G__21885;
count__21867 = G__21886;
i__21868 = G__21887;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21865);
if(temp__4126__auto__){
var seq__21865__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21865__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__21865__$1);
var G__21888 = cljs.core.chunk_rest(seq__21865__$1);
var G__21889 = c__4593__auto__;
var G__21890 = cljs.core.count(c__4593__auto__);
var G__21891 = (0);
seq__21865 = G__21888;
chunk__21866 = G__21889;
count__21867 = G__21890;
i__21868 = G__21891;
continue;
} else {
var vec__21872 = cljs.core.first(seq__21865__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872,(1),null);
var G__21873_21892 = v;
var G__21874_21893 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21873_21892,G__21874_21893) : f.call(null,G__21873_21892,G__21874_21893));

var G__21894 = cljs.core.next(seq__21865__$1);
var G__21895 = null;
var G__21896 = (0);
var G__21897 = (0);
seq__21865 = G__21894;
chunk__21866 = G__21895;
count__21867 = G__21896;
i__21868 = G__21897;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21875 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21875) : cljs.core.keys.call(null,G__21875));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21876 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21876) : cljs.core.vals.call(null,G__21876));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21877 = k;
var G__21878 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21877,G__21878) : self__.comp.call(null,G__21877,G__21878));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__21898 = t.left;
t = G__21898;
continue;
} else {
var G__21899 = t.right;
t = G__21899;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21900 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21901 = cljs.core.next(es);
ret = G__21900;
es = G__21901;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__21902 = null;
var G__21902__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21902__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21902 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21902__2.call(this,self__,k);
case 3:
return G__21902__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21902.cljs$core$IFn$_invoke$arity$2 = G__21902__2;
G__21902.cljs$core$IFn$_invoke$arity$3 = G__21902__3;
return G__21902;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args21864){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21864)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21879 = k;
var G__21880 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21879,G__21880) : self__.comp.call(null,G__21879,G__21880));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__21903 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__21904 = t.left;
stack = G__21903;
t = G__21904;
continue;
} else {
var G__21905 = stack;
var G__21906 = t.right;
stack = G__21905;
t = G__21906;
continue;
}
} else {
if((c > (0))){
var G__21907 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__21908 = t.right;
stack = G__21907;
t = G__21908;
continue;
} else {
var G__21909 = stack;
var G__21910 = t.left;
stack = G__21909;
t = G__21910;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__21881 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21881) : cljs.core.key.call(null,G__21881));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__21911 = cljs.core.nnext(in$);
var G__21912 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21911;
out = G__21912;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21913__i = 0, G__21913__a = new Array(arguments.length -  0);
while (G__21913__i < G__21913__a.length) {G__21913__a[G__21913__i] = arguments[G__21913__i + 0]; ++G__21913__i;}
  keyvals = new cljs.core.IndexedSeq(G__21913__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__21914){
var keyvals = cljs.core.seq(arglist__21914);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21915__i = 0, G__21915__a = new Array(arguments.length -  0);
while (G__21915__i < G__21915__a.length) {G__21915__a[G__21915__i] = arguments[G__21915__i + 0]; ++G__21915__i;}
  keyvals = new cljs.core.IndexedSeq(G__21915__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__21916){
var keyvals = cljs.core.seq(arglist__21916);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj21920 = {};
return obj21920;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__21921 = cljs.core.nnext(kvs);
kvs = G__21921;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21922__i = 0, G__21922__a = new Array(arguments.length -  0);
while (G__21922__i < G__21922__a.length) {G__21922__a[G__21922__i] = arguments[G__21922__i + 0]; ++G__21922__i;}
  keyvals = new cljs.core.IndexedSeq(G__21922__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__21923){
var keyvals = cljs.core.seq(arglist__21923);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__21924 = cljs.core.nnext(in$);
var G__21925 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21924;
out = G__21925;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21926__i = 0, G__21926__a = new Array(arguments.length -  0);
while (G__21926__i < G__21926__a.length) {G__21926__a[G__21926__i] = arguments[G__21926__i + 0]; ++G__21926__i;}
  keyvals = new cljs.core.IndexedSeq(G__21926__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__21927){
var keyvals = cljs.core.seq(arglist__21927);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__21928 = cljs.core.nnext(in$);
var G__21929 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__21928;
out = G__21929;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__21930__i = 0, G__21930__a = new Array(arguments.length -  1);
while (G__21930__i < G__21930__a.length) {G__21930__a[G__21930__i] = arguments[G__21930__i + 1]; ++G__21930__i;}
  keyvals = new cljs.core.IndexedSeq(G__21930__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__21931){
var comparator = cljs.core.first(arglist__21931);
var keyvals = cljs.core.rest(arglist__21931);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21932 = self__.mseq;
if(G__21932){
var bit__4487__auto__ = (G__21932.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4487__auto__) || (G__21932.cljs$core$INext$)){
return true;
} else {
if((!G__21932.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21932);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21932);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21933 = self__.mseq;
if(G__21933){
var bit__4487__auto__ = (G__21933.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4487__auto__) || (G__21933.cljs$core$INext$)){
return true;
} else {
if((!G__21933.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21933);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21933);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21934 = self__.mseq;
if(G__21934){
var bit__4487__auto__ = (G__21934.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4487__auto__) || (G__21934.cljs$core$INext$)){
return true;
} else {
if((!G__21934.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21934);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21934);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__21935 = self__.mseq;
if(G__21935){
var bit__4487__auto__ = (G__21935.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4487__auto__) || (G__21935.cljs$core$INext$)){
return true;
} else {
if((!G__21935.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21935);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__21935);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__21936_SHARP_,p2__21937_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3806__auto__ = p1__21936_SHARP_;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__21937_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__21938__i = 0, G__21938__a = new Array(arguments.length -  0);
while (G__21938__i < G__21938__a.length) {G__21938__a[G__21938__i] = arguments[G__21938__i + 0]; ++G__21938__i;}
  maps = new cljs.core.IndexedSeq(G__21938__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__21939){
var maps = cljs.core.seq(arglist__21939);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21942 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21943 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21942,G__21943) : f.call(null,G__21942,G__21943));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3806__auto__ = m1;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__21944__i = 0, G__21944__a = new Array(arguments.length -  1);
while (G__21944__i < G__21944__a.length) {G__21944__a[G__21944__i] = arguments[G__21944__i + 1]; ++G__21944__i;}
  maps = new cljs.core.IndexedSeq(G__21944__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__21945){
var f = cljs.core.first(arglist__21945);
var maps = cljs.core.rest(arglist__21945);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__21946 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__21947 = cljs.core.next(keys);
ret = G__21946;
keys = G__21947;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21950 = cljs.core.seq(coll);
var chunk__21951 = null;
var count__21952 = (0);
var i__21953 = (0);
while(true){
if((i__21953 < count__21952)){
var vec__21954 = chunk__21951.cljs$core$IIndexed$_nth$arity$2(null,i__21953);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21954,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21954,(1),null);
var G__21955_21960 = v;
var G__21956_21961 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21955_21960,G__21956_21961) : f.call(null,G__21955_21960,G__21956_21961));

var G__21962 = seq__21950;
var G__21963 = chunk__21951;
var G__21964 = count__21952;
var G__21965 = (i__21953 + (1));
seq__21950 = G__21962;
chunk__21951 = G__21963;
count__21952 = G__21964;
i__21953 = G__21965;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21950);
if(temp__4126__auto__){
var seq__21950__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21950__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__21950__$1);
var G__21966 = cljs.core.chunk_rest(seq__21950__$1);
var G__21967 = c__4593__auto__;
var G__21968 = cljs.core.count(c__4593__auto__);
var G__21969 = (0);
seq__21950 = G__21966;
chunk__21951 = G__21967;
count__21952 = G__21968;
i__21953 = G__21969;
continue;
} else {
var vec__21957 = cljs.core.first(seq__21950__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21957,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21957,(1),null);
var G__21958_21970 = v;
var G__21959_21971 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21958_21970,G__21959_21971) : f.call(null,G__21958_21970,G__21959_21971));

var G__21972 = cljs.core.next(seq__21950__$1);
var G__21973 = null;
var G__21974 = (0);
var G__21975 = (0);
seq__21950 = G__21972;
chunk__21951 = G__21973;
count__21952 = G__21974;
i__21953 = G__21975;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__21948_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__21948_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__21976 = null;
var G__21976__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21976__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21976 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21976__2.call(this,self__,k);
case 3:
return G__21976__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21976.cljs$core$IFn$_invoke$arity$2 = G__21976__2;
G__21976.cljs$core$IFn$_invoke$arity$3 = G__21976__3;
return G__21976;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args21949){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21949)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21977 = (i + (1));
var G__21978 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__21977;
out = G__21978;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__21979 = (i + (1));
var G__21980 = cljs.core._conj_BANG_(out,(items[i]));
i = G__21979;
out = G__21980;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__21982 = null;
var G__21982__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__21982__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__21982 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21982__2.call(this,self__,k);
case 3:
return G__21982__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21982.cljs$core$IFn$_invoke$arity$2 = G__21982__2;
G__21982.cljs$core$IFn$_invoke$arity$3 = G__21982__3;
return G__21982;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args21981){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21981)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21985 = cljs.core.seq(coll);
var chunk__21986 = null;
var count__21987 = (0);
var i__21988 = (0);
while(true){
if((i__21988 < count__21987)){
var vec__21989 = chunk__21986.cljs$core$IIndexed$_nth$arity$2(null,i__21988);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21989,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21989,(1),null);
var G__21990_21995 = v;
var G__21991_21996 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21990_21995,G__21991_21996) : f.call(null,G__21990_21995,G__21991_21996));

var G__21997 = seq__21985;
var G__21998 = chunk__21986;
var G__21999 = count__21987;
var G__22000 = (i__21988 + (1));
seq__21985 = G__21997;
chunk__21986 = G__21998;
count__21987 = G__21999;
i__21988 = G__22000;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21985);
if(temp__4126__auto__){
var seq__21985__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21985__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__21985__$1);
var G__22001 = cljs.core.chunk_rest(seq__21985__$1);
var G__22002 = c__4593__auto__;
var G__22003 = cljs.core.count(c__4593__auto__);
var G__22004 = (0);
seq__21985 = G__22001;
chunk__21986 = G__22002;
count__21987 = G__22003;
i__21988 = G__22004;
continue;
} else {
var vec__21992 = cljs.core.first(seq__21985__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21992,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21992,(1),null);
var G__21993_22005 = v;
var G__21994_22006 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21993_22005,G__21994_22006) : f.call(null,G__21993_22005,G__21994_22006));

var G__22007 = cljs.core.next(seq__21985__$1);
var G__22008 = null;
var G__22009 = (0);
var G__22010 = (0);
seq__21985 = G__22007;
chunk__21986 = G__22008;
count__21987 = G__22009;
i__21988 = G__22010;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__21983_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__21983_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__22011 = null;
var G__22011__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22011__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22011 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22011__2.call(this,self__,k);
case 3:
return G__22011__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22011.cljs$core$IFn$_invoke$arity$2 = G__22011__2;
G__22011.cljs$core$IFn$_invoke$arity$3 = G__22011__3;
return G__22011;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args21984){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21984)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4687__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4687__auto__.length)){
var G__22012 = (i + (1));
var G__22013 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__22012;
res = G__22013;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__22014 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__22015 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__22014;
out = G__22015;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__22016__delegate = function (keys){
return cljs.core.set(keys);
};
var G__22016 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22017__i = 0, G__22017__a = new Array(arguments.length -  0);
while (G__22017__i < G__22017__a.length) {G__22017__a[G__22017__i] = arguments[G__22017__i + 0]; ++G__22017__i;}
  keys = new cljs.core.IndexedSeq(G__22017__a,0);
} 
return G__22016__delegate.call(this,keys);};
G__22016.cljs$lang$maxFixedArity = 0;
G__22016.cljs$lang$applyTo = (function (arglist__22018){
var keys = cljs.core.seq(arglist__22018);
return G__22016__delegate(keys);
});
G__22016.cljs$core$IFn$_invoke$arity$variadic = G__22016__delegate;
return G__22016;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__22019 = null;
if (arguments.length > 0) {
var G__22020__i = 0, G__22020__a = new Array(arguments.length -  0);
while (G__22020__i < G__22020__a.length) {G__22020__a[G__22020__i] = arguments[G__22020__i + 0]; ++G__22020__i;}
G__22019 = new cljs.core.IndexedSeq(G__22020__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__22019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22021__i = 0, G__22021__a = new Array(arguments.length -  0);
while (G__22021__i < G__22021__a.length) {G__22021__a[G__22021__i] = arguments[G__22021__i + 0]; ++G__22021__i;}
  keys = new cljs.core.IndexedSeq(G__22021__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__22022){
var keys = cljs.core.seq(arglist__22022);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__22023__i = 0, G__22023__a = new Array(arguments.length -  1);
while (G__22023__i < G__22023__a.length) {G__22023__a[G__22023__i] = arguments[G__22023__i + 1]; ++G__22023__i;}
  keys = new cljs.core.IndexedSeq(G__22023__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__22024){
var comparator = cljs.core.first(arglist__22024);
var keys = cljs.core.rest(arglist__22024);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__22025_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22025_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__22025_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22026_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22026_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__22026_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__22047 = null;
var G__22047__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22047__1 = (function (result){
var G__22037 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22037) : rf.call(null,G__22037));
});
var G__22047__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__22038 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22038) : cljs.core.deref.call(null,G__22038));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__22039 = result;
var G__22040 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22039,G__22040) : rf.call(null,G__22039,G__22040));
}
});
G__22047 = function(result,input){
switch(arguments.length){
case 0:
return G__22047__0.call(this);
case 1:
return G__22047__1.call(this,result);
case 2:
return G__22047__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22047.cljs$core$IFn$_invoke$arity$0 = G__22047__0;
G__22047.cljs$core$IFn$_invoke$arity$1 = G__22047__1;
G__22047.cljs$core$IFn$_invoke$arity$2 = G__22047__2;
return G__22047;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__22045,seen__$1){
while(true){
var vec__22046 = p__22045;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22046,(0),null);
var xs__$1 = vec__22046;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__22048 = cljs.core.rest(s);
var G__22049 = seen__$1;
p__22045 = G__22048;
seen__$1 = G__22049;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__22050 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__22051 = cljs.core.next(s__$1);
ret = G__22050;
s__$1 = G__22051;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__22053 = x;
if(G__22053){
var bit__4480__auto__ = (G__22053.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4480__auto__) || (G__22053.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__22054 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__22055 = cljs.core.next(ks);
var G__22056 = cljs.core.next(vs);
map = G__22054;
ks = G__22055;
vs = G__22056;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__22067 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22067) : k.call(null,G__22067));
})() > (function (){var G__22068 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22068) : k.call(null,G__22068));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__22069__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22057_SHARP_,p2__22058_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__22057_SHARP_,p2__22058_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22069 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22070__i = 0, G__22070__a = new Array(arguments.length -  3);
while (G__22070__i < G__22070__a.length) {G__22070__a[G__22070__i] = arguments[G__22070__i + 3]; ++G__22070__i;}
  more = new cljs.core.IndexedSeq(G__22070__a,0);
} 
return G__22069__delegate.call(this,k,x,y,more);};
G__22069.cljs$lang$maxFixedArity = 3;
G__22069.cljs$lang$applyTo = (function (arglist__22071){
var k = cljs.core.first(arglist__22071);
arglist__22071 = cljs.core.next(arglist__22071);
var x = cljs.core.first(arglist__22071);
arglist__22071 = cljs.core.next(arglist__22071);
var y = cljs.core.first(arglist__22071);
var more = cljs.core.rest(arglist__22071);
return G__22069__delegate(k,x,y,more);
});
G__22069.cljs$core$IFn$_invoke$arity$variadic = G__22069__delegate;
return G__22069;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__22072 = null;
if (arguments.length > 3) {
var G__22073__i = 0, G__22073__a = new Array(arguments.length -  3);
while (G__22073__i < G__22073__a.length) {G__22073__a[G__22073__i] = arguments[G__22073__i + 3]; ++G__22073__i;}
G__22072 = new cljs.core.IndexedSeq(G__22073__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__22084 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22084) : k.call(null,G__22084));
})() < (function (){var G__22085 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22085) : k.call(null,G__22085));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22086__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22074_SHARP_,p2__22075_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__22074_SHARP_,p2__22075_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22086 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22087__i = 0, G__22087__a = new Array(arguments.length -  3);
while (G__22087__i < G__22087__a.length) {G__22087__a[G__22087__i] = arguments[G__22087__i + 3]; ++G__22087__i;}
  more = new cljs.core.IndexedSeq(G__22087__a,0);
} 
return G__22086__delegate.call(this,k,x,y,more);};
G__22086.cljs$lang$maxFixedArity = 3;
G__22086.cljs$lang$applyTo = (function (arglist__22088){
var k = cljs.core.first(arglist__22088);
arglist__22088 = cljs.core.next(arglist__22088);
var x = cljs.core.first(arglist__22088);
arglist__22088 = cljs.core.next(arglist__22088);
var y = cljs.core.first(arglist__22088);
var more = cljs.core.rest(arglist__22088);
return G__22086__delegate(k,x,y,more);
});
G__22086.cljs$core$IFn$_invoke$arity$variadic = G__22086__delegate;
return G__22086;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22089 = null;
if (arguments.length > 3) {
var G__22090__i = 0, G__22090__a = new Array(arguments.length -  3);
while (G__22090__i < G__22090__a.length) {G__22090__a[G__22090__i] = arguments[G__22090__i + 3]; ++G__22090__i;}
G__22089 = new cljs.core.IndexedSeq(G__22090__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22107 = null;
var G__22107__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22107__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22102 = result;
var G__22103 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22102,G__22103) : rf.call(null,G__22102,G__22103));
})());
})());
var G__22104 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22104) : rf.call(null,G__22104));
});
var G__22107__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22105 = result;
var G__22106 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22105,G__22106) : rf.call(null,G__22105,G__22106));
} else {
return result;
}
});
G__22107 = function(result,input){
switch(arguments.length){
case 0:
return G__22107__0.call(this);
case 1:
return G__22107__1.call(this,result);
case 2:
return G__22107__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22107.cljs$core$IFn$_invoke$arity$0 = G__22107__0;
G__22107.cljs$core$IFn$_invoke$arity$1 = G__22107__1;
G__22107.cljs$core$IFn$_invoke$arity$2 = G__22107__2;
return G__22107;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22120 = null;
var G__22120__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22120__1 = (function (result){
var G__22115 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22115) : rf.call(null,G__22115));
});
var G__22120__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22116 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22116) : pred.call(null,G__22116));
})())){
var G__22117 = result;
var G__22118 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22117,G__22118) : rf.call(null,G__22117,G__22118));
} else {
return cljs.core.reduced(result);
}
});
G__22120 = function(result,input){
switch(arguments.length){
case 0:
return G__22120__0.call(this);
case 1:
return G__22120__1.call(this,result);
case 2:
return G__22120__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22120.cljs$core$IFn$_invoke$arity$0 = G__22120__0;
G__22120.cljs$core$IFn$_invoke$arity$1 = G__22120__1;
G__22120.cljs$core$IFn$_invoke$arity$2 = G__22120__2;
return G__22120;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22119 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22119) : pred.call(null,G__22119));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22125 = (function (){var G__22127 = cljs.core._entry_key(sc,e);
var G__22128 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22127,G__22128) : comp.call(null,G__22127,G__22128));
})();
var G__22126 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22125,G__22126) : test.call(null,G__22125,G__22126));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22132 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22132,(0),null);
var s = vec__22132;
if(cljs.core.truth_((function (){var G__22133 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22133) : include.call(null,G__22133));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22134 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22134,(0),null);
var s = vec__22134;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22138 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22138,(0),null);
var s = vec__22138;
if(cljs.core.truth_((function (){var G__22139 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22139) : include.call(null,G__22139));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22140 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22140,(0),null);
var s = vec__22140;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22141 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22141) : Math.ceil.call(null,G__22141));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4227__auto__ = self__.__hash;
if(!((h__4227__auto__ == null))){
return h__4227__auto__;
} else {
var h__4227__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4227__auto____$1;

return h__4227__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22142 = ret;
var G__22143 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22142,G__22143) : f.call(null,G__22142,G__22143));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22144 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22144) : cljs.core.deref.call(null,G__22144));
} else {
var G__22145 = (i + self__.step);
var G__22146 = ret__$1;
i = G__22145;
ret = G__22146;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22164 = null;
var G__22164__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22164__1 = (function (result){
var G__22161 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22161) : rf.call(null,G__22161));
});
var G__22164__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22162 = result;
var G__22163 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22162,G__22163) : rf.call(null,G__22162,G__22163));
} else {
return result;
}
});
G__22164 = function(result,input){
switch(arguments.length){
case 0:
return G__22164__0.call(this);
case 1:
return G__22164__1.call(this,result);
case 2:
return G__22164__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22164.cljs$core$IFn$_invoke$arity$0 = G__22164__0;
G__22164.cljs$core$IFn$_invoke$arity$1 = G__22164__1;
G__22164.cljs$core$IFn$_invoke$arity$2 = G__22164__2;
return G__22164;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__22186 = null;
var G__22186__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22186__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22177 = result;
var G__22178 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22177,G__22178) : rf.call(null,G__22177,G__22178));
})());
})());
var G__22179 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22179) : rf.call(null,G__22179));
});
var G__22186__2 = (function (result,input){
var pval = (function (){var G__22180 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22180) : cljs.core.deref.call(null,G__22180));
})();
var val = (function (){var G__22181 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22181) : f.call(null,G__22181));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__22182 = result;
var G__22183 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22182,G__22183) : rf.call(null,G__22182,G__22183));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__22186 = function(result,input){
switch(arguments.length){
case 0:
return G__22186__0.call(this);
case 1:
return G__22186__1.call(this,result);
case 2:
return G__22186__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22186.cljs$core$IFn$_invoke$arity$0 = G__22186__0;
G__22186.cljs$core$IFn$_invoke$arity$1 = G__22186__1;
G__22186.cljs$core$IFn$_invoke$arity$2 = G__22186__2;
return G__22186;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__22184 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22184) : f.call(null,G__22184));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22165_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__22185 = p1__22165_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22185) : f.call(null,G__22185));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__22195 = init;
var G__22196 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22195,G__22196) : f.call(null,G__22195,G__22196));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22291 = null;
var G__22291__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22291__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22249 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22249) : f.call(null,G__22249));
})()],null));
});
var G__22291__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22250 = x;
var G__22251 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22250,G__22251) : f.call(null,G__22250,G__22251));
})()],null));
});
var G__22291__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22252 = x;
var G__22253 = y;
var G__22254 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22252,G__22253,G__22254) : f.call(null,G__22252,G__22253,G__22254));
})()],null));
});
var G__22291__4 = (function() { 
var G__22292__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22292 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22293__i = 0, G__22293__a = new Array(arguments.length -  3);
while (G__22293__i < G__22293__a.length) {G__22293__a[G__22293__i] = arguments[G__22293__i + 3]; ++G__22293__i;}
  args = new cljs.core.IndexedSeq(G__22293__a,0);
} 
return G__22292__delegate.call(this,x,y,z,args);};
G__22292.cljs$lang$maxFixedArity = 3;
G__22292.cljs$lang$applyTo = (function (arglist__22294){
var x = cljs.core.first(arglist__22294);
arglist__22294 = cljs.core.next(arglist__22294);
var y = cljs.core.first(arglist__22294);
arglist__22294 = cljs.core.next(arglist__22294);
var z = cljs.core.first(arglist__22294);
var args = cljs.core.rest(arglist__22294);
return G__22292__delegate(x,y,z,args);
});
G__22292.cljs$core$IFn$_invoke$arity$variadic = G__22292__delegate;
return G__22292;
})()
;
G__22291 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22291__0.call(this);
case 1:
return G__22291__1.call(this,x);
case 2:
return G__22291__2.call(this,x,y);
case 3:
return G__22291__3.call(this,x,y,z);
default:
var G__22295 = null;
if (arguments.length > 3) {
var G__22296__i = 0, G__22296__a = new Array(arguments.length -  3);
while (G__22296__i < G__22296__a.length) {G__22296__a[G__22296__i] = arguments[G__22296__i + 3]; ++G__22296__i;}
G__22295 = new cljs.core.IndexedSeq(G__22296__a,0);
}
return G__22291__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22291.cljs$lang$maxFixedArity = 3;
G__22291.cljs$lang$applyTo = G__22291__4.cljs$lang$applyTo;
G__22291.cljs$core$IFn$_invoke$arity$0 = G__22291__0;
G__22291.cljs$core$IFn$_invoke$arity$1 = G__22291__1;
G__22291.cljs$core$IFn$_invoke$arity$2 = G__22291__2;
G__22291.cljs$core$IFn$_invoke$arity$3 = G__22291__3;
G__22291.cljs$core$IFn$_invoke$arity$variadic = G__22291__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22291;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22297 = null;
var G__22297__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22297__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22255 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22255) : f.call(null,G__22255));
})(),(function (){var G__22256 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22256) : g.call(null,G__22256));
})()],null));
});
var G__22297__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22257 = x;
var G__22258 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22257,G__22258) : f.call(null,G__22257,G__22258));
})(),(function (){var G__22259 = x;
var G__22260 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22259,G__22260) : g.call(null,G__22259,G__22260));
})()],null));
});
var G__22297__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22261 = x;
var G__22262 = y;
var G__22263 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22261,G__22262,G__22263) : f.call(null,G__22261,G__22262,G__22263));
})(),(function (){var G__22264 = x;
var G__22265 = y;
var G__22266 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22264,G__22265,G__22266) : g.call(null,G__22264,G__22265,G__22266));
})()],null));
});
var G__22297__4 = (function() { 
var G__22298__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22298 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22299__i = 0, G__22299__a = new Array(arguments.length -  3);
while (G__22299__i < G__22299__a.length) {G__22299__a[G__22299__i] = arguments[G__22299__i + 3]; ++G__22299__i;}
  args = new cljs.core.IndexedSeq(G__22299__a,0);
} 
return G__22298__delegate.call(this,x,y,z,args);};
G__22298.cljs$lang$maxFixedArity = 3;
G__22298.cljs$lang$applyTo = (function (arglist__22300){
var x = cljs.core.first(arglist__22300);
arglist__22300 = cljs.core.next(arglist__22300);
var y = cljs.core.first(arglist__22300);
arglist__22300 = cljs.core.next(arglist__22300);
var z = cljs.core.first(arglist__22300);
var args = cljs.core.rest(arglist__22300);
return G__22298__delegate(x,y,z,args);
});
G__22298.cljs$core$IFn$_invoke$arity$variadic = G__22298__delegate;
return G__22298;
})()
;
G__22297 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22297__0.call(this);
case 1:
return G__22297__1.call(this,x);
case 2:
return G__22297__2.call(this,x,y);
case 3:
return G__22297__3.call(this,x,y,z);
default:
var G__22301 = null;
if (arguments.length > 3) {
var G__22302__i = 0, G__22302__a = new Array(arguments.length -  3);
while (G__22302__i < G__22302__a.length) {G__22302__a[G__22302__i] = arguments[G__22302__i + 3]; ++G__22302__i;}
G__22301 = new cljs.core.IndexedSeq(G__22302__a,0);
}
return G__22297__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22297.cljs$lang$maxFixedArity = 3;
G__22297.cljs$lang$applyTo = G__22297__4.cljs$lang$applyTo;
G__22297.cljs$core$IFn$_invoke$arity$0 = G__22297__0;
G__22297.cljs$core$IFn$_invoke$arity$1 = G__22297__1;
G__22297.cljs$core$IFn$_invoke$arity$2 = G__22297__2;
G__22297.cljs$core$IFn$_invoke$arity$3 = G__22297__3;
G__22297.cljs$core$IFn$_invoke$arity$variadic = G__22297__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22297;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22303 = null;
var G__22303__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22303__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22267 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22267) : f.call(null,G__22267));
})(),(function (){var G__22268 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22268) : g.call(null,G__22268));
})(),(function (){var G__22269 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22269) : h.call(null,G__22269));
})()],null));
});
var G__22303__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22270 = x;
var G__22271 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22270,G__22271) : f.call(null,G__22270,G__22271));
})(),(function (){var G__22272 = x;
var G__22273 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22272,G__22273) : g.call(null,G__22272,G__22273));
})(),(function (){var G__22274 = x;
var G__22275 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22274,G__22275) : h.call(null,G__22274,G__22275));
})()],null));
});
var G__22303__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22276 = x;
var G__22277 = y;
var G__22278 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22276,G__22277,G__22278) : f.call(null,G__22276,G__22277,G__22278));
})(),(function (){var G__22279 = x;
var G__22280 = y;
var G__22281 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22279,G__22280,G__22281) : g.call(null,G__22279,G__22280,G__22281));
})(),(function (){var G__22282 = x;
var G__22283 = y;
var G__22284 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22282,G__22283,G__22284) : h.call(null,G__22282,G__22283,G__22284));
})()],null));
});
var G__22303__4 = (function() { 
var G__22304__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22304 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22305__i = 0, G__22305__a = new Array(arguments.length -  3);
while (G__22305__i < G__22305__a.length) {G__22305__a[G__22305__i] = arguments[G__22305__i + 3]; ++G__22305__i;}
  args = new cljs.core.IndexedSeq(G__22305__a,0);
} 
return G__22304__delegate.call(this,x,y,z,args);};
G__22304.cljs$lang$maxFixedArity = 3;
G__22304.cljs$lang$applyTo = (function (arglist__22306){
var x = cljs.core.first(arglist__22306);
arglist__22306 = cljs.core.next(arglist__22306);
var y = cljs.core.first(arglist__22306);
arglist__22306 = cljs.core.next(arglist__22306);
var z = cljs.core.first(arglist__22306);
var args = cljs.core.rest(arglist__22306);
return G__22304__delegate(x,y,z,args);
});
G__22304.cljs$core$IFn$_invoke$arity$variadic = G__22304__delegate;
return G__22304;
})()
;
G__22303 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22303__0.call(this);
case 1:
return G__22303__1.call(this,x);
case 2:
return G__22303__2.call(this,x,y);
case 3:
return G__22303__3.call(this,x,y,z);
default:
var G__22307 = null;
if (arguments.length > 3) {
var G__22308__i = 0, G__22308__a = new Array(arguments.length -  3);
while (G__22308__i < G__22308__a.length) {G__22308__a[G__22308__i] = arguments[G__22308__i + 3]; ++G__22308__i;}
G__22307 = new cljs.core.IndexedSeq(G__22308__a,0);
}
return G__22303__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22303.cljs$lang$maxFixedArity = 3;
G__22303.cljs$lang$applyTo = G__22303__4.cljs$lang$applyTo;
G__22303.cljs$core$IFn$_invoke$arity$0 = G__22303__0;
G__22303.cljs$core$IFn$_invoke$arity$1 = G__22303__1;
G__22303.cljs$core$IFn$_invoke$arity$2 = G__22303__2;
G__22303.cljs$core$IFn$_invoke$arity$3 = G__22303__3;
G__22303.cljs$core$IFn$_invoke$arity$variadic = G__22303__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22303;
})()
});
var juxt__4 = (function() { 
var G__22309__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22310 = null;
var G__22310__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22197_SHARP_,p2__22198_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22197_SHARP_,(function (){return (p2__22198_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22198_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22198_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22310__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22199_SHARP_,p2__22200_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22199_SHARP_,(function (){var G__22285 = x;
return (p2__22200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22285) : p2__22200_SHARP_.call(null,G__22285));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22310__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22201_SHARP_,p2__22202_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22201_SHARP_,(function (){var G__22286 = x;
var G__22287 = y;
return (p2__22202_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22202_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22286,G__22287) : p2__22202_SHARP_.call(null,G__22286,G__22287));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22310__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22203_SHARP_,p2__22204_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22203_SHARP_,(function (){var G__22288 = x;
var G__22289 = y;
var G__22290 = z;
return (p2__22204_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22204_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22288,G__22289,G__22290) : p2__22204_SHARP_.call(null,G__22288,G__22289,G__22290));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22310__4 = (function() { 
var G__22311__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22205_SHARP_,p2__22206_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22205_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22206_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22311 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22312__i = 0, G__22312__a = new Array(arguments.length -  3);
while (G__22312__i < G__22312__a.length) {G__22312__a[G__22312__i] = arguments[G__22312__i + 3]; ++G__22312__i;}
  args = new cljs.core.IndexedSeq(G__22312__a,0);
} 
return G__22311__delegate.call(this,x,y,z,args);};
G__22311.cljs$lang$maxFixedArity = 3;
G__22311.cljs$lang$applyTo = (function (arglist__22313){
var x = cljs.core.first(arglist__22313);
arglist__22313 = cljs.core.next(arglist__22313);
var y = cljs.core.first(arglist__22313);
arglist__22313 = cljs.core.next(arglist__22313);
var z = cljs.core.first(arglist__22313);
var args = cljs.core.rest(arglist__22313);
return G__22311__delegate(x,y,z,args);
});
G__22311.cljs$core$IFn$_invoke$arity$variadic = G__22311__delegate;
return G__22311;
})()
;
G__22310 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22310__0.call(this);
case 1:
return G__22310__1.call(this,x);
case 2:
return G__22310__2.call(this,x,y);
case 3:
return G__22310__3.call(this,x,y,z);
default:
var G__22314 = null;
if (arguments.length > 3) {
var G__22315__i = 0, G__22315__a = new Array(arguments.length -  3);
while (G__22315__i < G__22315__a.length) {G__22315__a[G__22315__i] = arguments[G__22315__i + 3]; ++G__22315__i;}
G__22314 = new cljs.core.IndexedSeq(G__22315__a,0);
}
return G__22310__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22310.cljs$lang$maxFixedArity = 3;
G__22310.cljs$lang$applyTo = G__22310__4.cljs$lang$applyTo;
G__22310.cljs$core$IFn$_invoke$arity$0 = G__22310__0;
G__22310.cljs$core$IFn$_invoke$arity$1 = G__22310__1;
G__22310.cljs$core$IFn$_invoke$arity$2 = G__22310__2;
G__22310.cljs$core$IFn$_invoke$arity$3 = G__22310__3;
G__22310.cljs$core$IFn$_invoke$arity$variadic = G__22310__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22310;
})()
;})(fs__$1))
};
var G__22309 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22316__i = 0, G__22316__a = new Array(arguments.length -  3);
while (G__22316__i < G__22316__a.length) {G__22316__a[G__22316__i] = arguments[G__22316__i + 3]; ++G__22316__i;}
  fs = new cljs.core.IndexedSeq(G__22316__a,0);
} 
return G__22309__delegate.call(this,f,g,h,fs);};
G__22309.cljs$lang$maxFixedArity = 3;
G__22309.cljs$lang$applyTo = (function (arglist__22317){
var f = cljs.core.first(arglist__22317);
arglist__22317 = cljs.core.next(arglist__22317);
var g = cljs.core.first(arglist__22317);
arglist__22317 = cljs.core.next(arglist__22317);
var h = cljs.core.first(arglist__22317);
var fs = cljs.core.rest(arglist__22317);
return G__22309__delegate(f,g,h,fs);
});
G__22309.cljs$core$IFn$_invoke$arity$variadic = G__22309__delegate;
return G__22309;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__22318 = null;
if (arguments.length > 3) {
var G__22319__i = 0, G__22319__a = new Array(arguments.length -  3);
while (G__22319__i < G__22319__a.length) {G__22319__a[G__22319__i] = arguments[G__22319__i + 3]; ++G__22319__i;}
G__22318 = new cljs.core.IndexedSeq(G__22319__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__22318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__22320 = cljs.core.next(coll);
coll = G__22320;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__22321 = (n - (1));
var G__22322 = cljs.core.next(coll);
n = G__22321;
coll = G__22322;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__22326 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22326,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22326,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22326,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_22334 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__22335_22341 = cljs.core.first(coll);
var G__22336_22342 = writer;
var G__22337_22343 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22335_22341,G__22336_22342,G__22337_22343) : print_one.call(null,G__22335_22341,G__22336_22342,G__22337_22343));
} else {
}

var coll_22344__$1 = cljs.core.next(coll);
var n_22345 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_22344__$1) && (((n_22345 == null)) || (!((n_22345 === (0)))))){
cljs.core._write(writer,sep);

var G__22338_22346 = cljs.core.first(coll_22344__$1);
var G__22339_22347 = writer;
var G__22340_22348 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22338_22346,G__22339_22347,G__22340_22348) : print_one.call(null,G__22338_22346,G__22339_22347,G__22340_22348));

var G__22349 = cljs.core.next(coll_22344__$1);
var G__22350 = (n_22345 - (1));
coll_22344__$1 = G__22349;
n_22345 = G__22350;
continue;
} else {
if((cljs.core.seq(coll_22344__$1)) && ((n_22345 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22334;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__22355 = cljs.core.seq(ss);
var chunk__22356 = null;
var count__22357 = (0);
var i__22358 = (0);
while(true){
if((i__22358 < count__22357)){
var s = chunk__22356.cljs$core$IIndexed$_nth$arity$2(null,i__22358);
cljs.core._write(writer,s);

var G__22359 = seq__22355;
var G__22360 = chunk__22356;
var G__22361 = count__22357;
var G__22362 = (i__22358 + (1));
seq__22355 = G__22359;
chunk__22356 = G__22360;
count__22357 = G__22361;
i__22358 = G__22362;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22355);
if(temp__4126__auto__){
var seq__22355__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22355__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__22355__$1);
var G__22363 = cljs.core.chunk_rest(seq__22355__$1);
var G__22364 = c__4593__auto__;
var G__22365 = cljs.core.count(c__4593__auto__);
var G__22366 = (0);
seq__22355 = G__22363;
chunk__22356 = G__22364;
count__22357 = G__22365;
i__22358 = G__22366;
continue;
} else {
var s = cljs.core.first(seq__22355__$1);
cljs.core._write(writer,s);

var G__22367 = cljs.core.next(seq__22355__$1);
var G__22368 = null;
var G__22369 = (0);
var G__22370 = (0);
seq__22355 = G__22367;
chunk__22356 = G__22368;
count__22357 = G__22369;
i__22358 = G__22370;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__22371__i = 0, G__22371__a = new Array(arguments.length -  1);
while (G__22371__i < G__22371__a.length) {G__22371__a[G__22371__i] = arguments[G__22371__i + 1]; ++G__22371__i;}
  ss = new cljs.core.IndexedSeq(G__22371__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__22372){
var writer = cljs.core.first(arglist__22372);
var ss = cljs.core.rest(arglist__22372);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj22374 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj22374;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__22377 = "[\\\\\"\b\f\n\r\t]";
var G__22378 = "g";
return RegExp(G__22377,G__22378);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3794__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3794__auto__)){
var and__3794__auto____$1 = (function (){var G__22392 = obj;
if(G__22392){
var bit__4487__auto__ = (G__22392.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4487__auto__) || (G__22392.cljs$core$IMeta$)){
return true;
} else {
if((!G__22392.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22392);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22392);
}
})();
if(and__3794__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__22393 = obj;
if(G__22393){
var bit__4480__auto__ = (G__22393.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4480__auto__) || (G__22393.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__22394 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__22395 = pr_writer;
var G__22396 = writer;
var G__22397 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__22394,G__22395,G__22396,G__22397) : cljs.core.print_map.call(null,G__22394,G__22395,G__22396,G__22397));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__22398 = obj;
return goog.isString(G__22398);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__22400 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__22400;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__22399 = obj;
if(G__22399){
var bit__4487__auto__ = (G__22399.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4487__auto__) || (G__22399.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__22399.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22399);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22399);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__22405 = cljs.core.seq(cljs.core.next(objs));
var chunk__22406 = null;
var count__22407 = (0);
var i__22408 = (0);
while(true){
if((i__22408 < count__22407)){
var obj = chunk__22406.cljs$core$IIndexed$_nth$arity$2(null,i__22408);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22409 = seq__22405;
var G__22410 = chunk__22406;
var G__22411 = count__22407;
var G__22412 = (i__22408 + (1));
seq__22405 = G__22409;
chunk__22406 = G__22410;
count__22407 = G__22411;
i__22408 = G__22412;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22405);
if(temp__4126__auto__){
var seq__22405__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22405__$1)){
var c__4593__auto__ = cljs.core.chunk_first(seq__22405__$1);
var G__22413 = cljs.core.chunk_rest(seq__22405__$1);
var G__22414 = c__4593__auto__;
var G__22415 = cljs.core.count(c__4593__auto__);
var G__22416 = (0);
seq__22405 = G__22413;
chunk__22406 = G__22414;
count__22407 = G__22415;
i__22408 = G__22416;
continue;
} else {
var obj = cljs.core.first(seq__22405__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22417 = cljs.core.next(seq__22405__$1);
var G__22418 = null;
var G__22419 = (0);
var G__22420 = (0);
seq__22405 = G__22417;
chunk__22406 = G__22418;
count__22407 = G__22419;
i__22408 = G__22420;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22421__i = 0, G__22421__a = new Array(arguments.length -  0);
while (G__22421__i < G__22421__a.length) {G__22421__a[G__22421__i] = arguments[G__22421__i + 0]; ++G__22421__i;}
  objs = new cljs.core.IndexedSeq(G__22421__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__22422){
var objs = cljs.core.seq(arglist__22422);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22423__i = 0, G__22423__a = new Array(arguments.length -  0);
while (G__22423__i < G__22423__a.length) {G__22423__a[G__22423__i] = arguments[G__22423__i + 0]; ++G__22423__i;}
  objs = new cljs.core.IndexedSeq(G__22423__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__22424){
var objs = cljs.core.seq(arglist__22424);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22425__i = 0, G__22425__a = new Array(arguments.length -  0);
while (G__22425__i < G__22425__a.length) {G__22425__a[G__22425__i] = arguments[G__22425__i + 0]; ++G__22425__i;}
  objs = new cljs.core.IndexedSeq(G__22425__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__22426){
var objs = cljs.core.seq(arglist__22426);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22427__i = 0, G__22427__a = new Array(arguments.length -  0);
while (G__22427__i < G__22427__a.length) {G__22427__a[G__22427__i] = arguments[G__22427__i + 0]; ++G__22427__i;}
  objs = new cljs.core.IndexedSeq(G__22427__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__22428){
var objs = cljs.core.seq(arglist__22428);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22429__i = 0, G__22429__a = new Array(arguments.length -  0);
while (G__22429__i < G__22429__a.length) {G__22429__a[G__22429__i] = arguments[G__22429__i + 0]; ++G__22429__i;}
  objs = new cljs.core.IndexedSeq(G__22429__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__22430){
var objs = cljs.core.seq(arglist__22430);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22431__i = 0, G__22431__a = new Array(arguments.length -  0);
while (G__22431__i < G__22431__a.length) {G__22431__a[G__22431__i] = arguments[G__22431__i + 0]; ++G__22431__i;}
  objs = new cljs.core.IndexedSeq(G__22431__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__22432){
var objs = cljs.core.seq(arglist__22432);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22433__i = 0, G__22433__a = new Array(arguments.length -  0);
while (G__22433__i < G__22433__a.length) {G__22433__a[G__22433__i] = arguments[G__22433__i + 0]; ++G__22433__i;}
  objs = new cljs.core.IndexedSeq(G__22433__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__22434){
var objs = cljs.core.seq(arglist__22434);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22435__i = 0, G__22435__a = new Array(arguments.length -  0);
while (G__22435__i < G__22435__a.length) {G__22435__a[G__22435__i] = arguments[G__22435__i + 0]; ++G__22435__i;}
  objs = new cljs.core.IndexedSeq(G__22435__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__22436){
var objs = cljs.core.seq(arglist__22436);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__22443_22449 = cljs.core.key(e);
var G__22444_22450 = w;
var G__22445_22451 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22443_22449,G__22444_22450,G__22445_22451) : print_one.call(null,G__22443_22449,G__22444_22450,G__22445_22451));

cljs.core._write(w," ");

var G__22446 = cljs.core.val(e);
var G__22447 = w;
var G__22448 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22446,G__22447,G__22448) : print_one.call(null,G__22446,G__22447,G__22448));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__22452__i = 0, G__22452__a = new Array(arguments.length -  2);
while (G__22452__i < G__22452__a.length) {G__22452__a[G__22452__i] = arguments[G__22452__i + 2]; ++G__22452__i;}
  args = new cljs.core.IndexedSeq(G__22452__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__22453){
var iref = cljs.core.first(arglist__22453);
arglist__22453 = cljs.core.next(arglist__22453);
var f = cljs.core.first(arglist__22453);
var args = cljs.core.rest(arglist__22453);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__22456 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22456) : cljs.core.atom.call(null,G__22456));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__22458 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22458) : cljs.core.deref.call(null,G__22458));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__22459_SHARP_,p2__22460_SHARP_){
var ret = (function (){var G__22463 = p1__22459_SHARP_;
var G__22464 = p2__22460_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22463,G__22464) : rf.call(null,G__22463,G__22464));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__22467 = null;
var G__22467__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22467__1 = (function (result){
var G__22466 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22466) : rf.call(null,G__22466));
});
var G__22467__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__22467 = function(result,input){
switch(arguments.length){
case 0:
return G__22467__0.call(this);
case 1:
return G__22467__1.call(this,result);
case 2:
return G__22467__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22467.cljs$core$IFn$_invoke$arity$0 = G__22467__0;
G__22467.cljs$core$IFn$_invoke$arity$1 = G__22467__1;
G__22467.cljs$core$IFn$_invoke$arity$2 = G__22467__2;
return G__22467;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__22476 = null;
var G__22476__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22476__1 = (function (result){
var G__22472 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22472) : rf.call(null,G__22472));
});
var G__22476__2 = (function (result,input){
var prior = (function (){var G__22473 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22473) : cljs.core.deref.call(null,G__22473));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__22474 = result;
var G__22475 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22474,G__22475) : rf.call(null,G__22474,G__22475));
}
});
G__22476 = function(result,input){
switch(arguments.length){
case 0:
return G__22476__0.call(this);
case 1:
return G__22476__1.call(this,result);
case 2:
return G__22476__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22476.cljs$core$IFn$_invoke$arity$0 = G__22476__0;
G__22476.cljs$core$IFn$_invoke$arity$1 = G__22476__1;
G__22476.cljs$core$IFn$_invoke$arity$2 = G__22476__2;
return G__22476;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4784__auto__ = this;
return cljs.core.es6_iterator(this__4784__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22478_SHARP_,p2__22477_SHARP_){
var G__22480 = p2__22477_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__22480) : proc.call(null,G__22480));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj22482 = {};
return obj22482;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3794__auto__ = x;
if(and__3794__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3794__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4450__auto__ = (((x == null))?null:x);
return (function (){var or__3806__auto__ = (cljs.core._clj__GT_js[(function (){var G__22486 = x__4450__auto__;
return goog.typeOf(G__22486);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3794__auto__ = x;
if(and__3794__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3794__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4450__auto__ = (((x == null))?null:x);
return (function (){var or__3806__auto__ = (cljs.core._key__GT_js[(function (){var G__22490 = x__4450__auto__;
return goog.typeOf(G__22490);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__22493 = k;
if(G__22493){
var bit__4487__auto__ = null;
if(cljs.core.truth_((function (){var or__3806__auto__ = bit__4487__auto__;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return G__22493.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22493.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22493);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22493);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__22494 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__22494) : cljs.core.clj__GT_js.call(null,G__22494));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__22510 = x;
if(G__22510){
var bit__4487__auto__ = null;
if(cljs.core.truth_((function (){var or__3806__auto__ = bit__4487__auto__;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return G__22510.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22510.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22510);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22510);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj22512 = {};
return obj22512;
})();
var seq__22513_22523 = cljs.core.seq(x);
var chunk__22514_22524 = null;
var count__22515_22525 = (0);
var i__22516_22526 = (0);
while(true){
if((i__22516_22526 < count__22515_22525)){
var vec__22517_22527 = chunk__22514_22524.cljs$core$IIndexed$_nth$arity$2(null,i__22516_22526);
var k_22528 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22517_22527,(0),null);
var v_22529 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22517_22527,(1),null);
(m[cljs.core.key__GT_js(k_22528)] = clj__GT_js(v_22529));

var G__22530 = seq__22513_22523;
var G__22531 = chunk__22514_22524;
var G__22532 = count__22515_22525;
var G__22533 = (i__22516_22526 + (1));
seq__22513_22523 = G__22530;
chunk__22514_22524 = G__22531;
count__22515_22525 = G__22532;
i__22516_22526 = G__22533;
continue;
} else {
var temp__4126__auto___22534 = cljs.core.seq(seq__22513_22523);
if(temp__4126__auto___22534){
var seq__22513_22535__$1 = temp__4126__auto___22534;
if(cljs.core.chunked_seq_QMARK_(seq__22513_22535__$1)){
var c__4593__auto___22536 = cljs.core.chunk_first(seq__22513_22535__$1);
var G__22537 = cljs.core.chunk_rest(seq__22513_22535__$1);
var G__22538 = c__4593__auto___22536;
var G__22539 = cljs.core.count(c__4593__auto___22536);
var G__22540 = (0);
seq__22513_22523 = G__22537;
chunk__22514_22524 = G__22538;
count__22515_22525 = G__22539;
i__22516_22526 = G__22540;
continue;
} else {
var vec__22518_22541 = cljs.core.first(seq__22513_22535__$1);
var k_22542 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22518_22541,(0),null);
var v_22543 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22518_22541,(1),null);
(m[cljs.core.key__GT_js(k_22542)] = clj__GT_js(v_22543));

var G__22544 = cljs.core.next(seq__22513_22535__$1);
var G__22545 = null;
var G__22546 = (0);
var G__22547 = (0);
seq__22513_22523 = G__22544;
chunk__22514_22524 = G__22545;
count__22515_22525 = G__22546;
i__22516_22526 = G__22547;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__22519_22548 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__22520_22549 = null;
var count__22521_22550 = (0);
var i__22522_22551 = (0);
while(true){
if((i__22522_22551 < count__22521_22550)){
var x_22552__$1 = chunk__22520_22549.cljs$core$IIndexed$_nth$arity$2(null,i__22522_22551);
arr.push(x_22552__$1);

var G__22553 = seq__22519_22548;
var G__22554 = chunk__22520_22549;
var G__22555 = count__22521_22550;
var G__22556 = (i__22522_22551 + (1));
seq__22519_22548 = G__22553;
chunk__22520_22549 = G__22554;
count__22521_22550 = G__22555;
i__22522_22551 = G__22556;
continue;
} else {
var temp__4126__auto___22557 = cljs.core.seq(seq__22519_22548);
if(temp__4126__auto___22557){
var seq__22519_22558__$1 = temp__4126__auto___22557;
if(cljs.core.chunked_seq_QMARK_(seq__22519_22558__$1)){
var c__4593__auto___22559 = cljs.core.chunk_first(seq__22519_22558__$1);
var G__22560 = cljs.core.chunk_rest(seq__22519_22558__$1);
var G__22561 = c__4593__auto___22559;
var G__22562 = cljs.core.count(c__4593__auto___22559);
var G__22563 = (0);
seq__22519_22548 = G__22560;
chunk__22520_22549 = G__22561;
count__22521_22550 = G__22562;
i__22522_22551 = G__22563;
continue;
} else {
var x_22564__$1 = cljs.core.first(seq__22519_22558__$1);
arr.push(x_22564__$1);

var G__22565 = cljs.core.next(seq__22519_22558__$1);
var G__22566 = null;
var G__22567 = (0);
var G__22568 = (0);
seq__22519_22548 = G__22565;
chunk__22520_22549 = G__22566;
count__22521_22550 = G__22567;
i__22522_22551 = G__22568;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj22570 = {};
return obj22570;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3794__auto__ = x;
if(and__3794__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3794__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4450__auto__ = (((x == null))?null:x);
return (function (){var or__3806__auto__ = (cljs.core._js__GT_clj[(function (){var G__22574 = x__4450__auto__;
return goog.typeOf(G__22574);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$11,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__22631__delegate = function (x,opts){
var map__22604 = opts;
var map__22604__$1 = ((cljs.core.seq_QMARK_(map__22604))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22604):map__22604);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22604__$1,cljs.core.constant$keyword$11);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__22604,map__22604__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__22620 = x__$1;
if(G__22620){
var bit__4487__auto__ = null;
if(cljs.core.truth_((function (){var or__3806__auto__ = bit__4487__auto__;
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return G__22620.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__22620.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22620);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22620);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4562__auto__ = ((function (map__22604,map__22604__$1,keywordize_keys,keyfn){
return (function iter__22621(s__22622){
return (new cljs.core.LazySeq(null,((function (map__22604,map__22604__$1,keywordize_keys,keyfn){
return (function (){
var s__22622__$1 = s__22622;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__22622__$1);
if(temp__4126__auto__){
var s__22622__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__22622__$2)){
var c__4560__auto__ = cljs.core.chunk_first(s__22622__$2);
var size__4561__auto__ = cljs.core.count(c__4560__auto__);
var b__22624 = cljs.core.chunk_buffer(size__4561__auto__);
if((function (){var i__22623 = (0);
while(true){
if((i__22623 < size__4561__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4560__auto__,i__22623);
cljs.core.chunk_append(b__22624,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22629 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22629) : keyfn.call(null,G__22629));
})(),thisfn((x__$1[k]))], null));

var G__22632 = (i__22623 + (1));
i__22623 = G__22632;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__22624),iter__22621(cljs.core.chunk_rest(s__22622__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__22624),null);
}
} else {
var k = cljs.core.first(s__22622__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22630 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22630) : keyfn.call(null,G__22630));
})(),thisfn((x__$1[k]))], null),iter__22621(cljs.core.rest(s__22622__$2)));
}
} else {
return null;
}
break;
}
});})(map__22604,map__22604__$1,keywordize_keys,keyfn))
,null,null));
});})(map__22604,map__22604__$1,keywordize_keys,keyfn))
;
return iter__4562__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__22604,map__22604__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__22631 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__22633__i = 0, G__22633__a = new Array(arguments.length -  1);
while (G__22633__i < G__22633__a.length) {G__22633__a[G__22633__i] = arguments[G__22633__i + 1]; ++G__22633__i;}
  opts = new cljs.core.IndexedSeq(G__22633__a,0);
} 
return G__22631__delegate.call(this,x,opts);};
G__22631.cljs$lang$maxFixedArity = 1;
G__22631.cljs$lang$applyTo = (function (arglist__22634){
var x = cljs.core.first(arglist__22634);
var opts = cljs.core.rest(arglist__22634);
return G__22631__delegate(x,opts);
});
G__22631.cljs$core$IFn$_invoke$arity$variadic = G__22631__delegate;
return G__22631;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__22635 = null;
if (arguments.length > 1) {
var G__22636__i = 0, G__22636__a = new Array(arguments.length -  1);
while (G__22636__i < G__22636__a.length) {G__22636__a[G__22636__i] = arguments[G__22636__i + 1]; ++G__22636__i;}
G__22635 = new cljs.core.IndexedSeq(G__22636__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__22639 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22639) : cljs.core.atom.call(null,G__22639));
})();
return ((function (mem){
return (function() { 
var G__22641__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__22640 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22640) : cljs.core.deref.call(null,G__22640));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__22641 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22642__i = 0, G__22642__a = new Array(arguments.length -  0);
while (G__22642__i < G__22642__a.length) {G__22642__a[G__22642__i] = arguments[G__22642__i + 0]; ++G__22642__i;}
  args = new cljs.core.IndexedSeq(G__22642__a,0);
} 
return G__22641__delegate.call(this,args);};
G__22641.cljs$lang$maxFixedArity = 0;
G__22641.cljs$lang$applyTo = (function (arglist__22643){
var args = cljs.core.seq(arglist__22643);
return G__22641__delegate(args);
});
G__22641.cljs$core$IFn$_invoke$arity$variadic = G__22641__delegate;
return G__22641;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__22645 = ret;
f = G__22645;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__22646__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__22646 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22647__i = 0, G__22647__a = new Array(arguments.length -  1);
while (G__22647__i < G__22647__a.length) {G__22647__a[G__22647__i] = arguments[G__22647__i + 1]; ++G__22647__i;}
  args = new cljs.core.IndexedSeq(G__22647__a,0);
} 
return G__22646__delegate.call(this,f,args);};
G__22646.cljs$lang$maxFixedArity = 1;
G__22646.cljs$lang$applyTo = (function (arglist__22648){
var f = cljs.core.first(arglist__22648);
var args = cljs.core.rest(arglist__22648);
return G__22646__delegate(f,args);
});
G__22646.cljs$core$IFn$_invoke$arity$variadic = G__22646__delegate;
return G__22646;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__22649 = null;
if (arguments.length > 1) {
var G__22650__i = 0, G__22650__a = new Array(arguments.length -  1);
while (G__22650__i < G__22650__a.length) {G__22650__a[G__22650__i] = arguments[G__22650__i + 1]; ++G__22650__i;}
G__22649 = new cljs.core.IndexedSeq(G__22650__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__22653 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22653) : Math.floor.call(null,G__22653));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__22655 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22655) : f.call(null,G__22655));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$13,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$14,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__22657 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22657) : cljs.core.atom.call(null,G__22657));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22658__i = 0, G__22658__a = new Array(arguments.length -  1);
while (G__22658__i < G__22658__a.length) {G__22658__a[G__22658__i] = arguments[G__22658__i + 1]; ++G__22658__i;}
  args = new cljs.core.IndexedSeq(G__22658__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__22659){
var f = cljs.core.first(arglist__22659);
var args = cljs.core.rest(arglist__22659);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22724 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22724) : cljs.core.deref.call(null,G__22724));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3806__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
var and__3794__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3794__auto__){
var and__3794__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3794__auto____$1){
var and__3794__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3794__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__22749 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__22747 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__22747) : child.call(null,G__22747));
})(),(function (){var G__22748 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__22748) : parent.call(null,G__22748));
})());
var G__22750 = (i + (1));
ret = G__22749;
i = G__22750;
continue;
}
break;
}
} else {
return and__3794__auto____$2;
}
} else {
return and__3794__auto____$1;
}
} else {
return and__3794__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__22754 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22754) : cljs.core.deref.call(null,G__22754));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__22758 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22758) : cljs.core.deref.call(null,G__22758));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__22762 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22762) : cljs.core.deref.call(null,G__22762));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){

var tp = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__22771 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__22771) : targets.call(null,G__22771));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__22772 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__22772) : sources.call(null,G__22772));
})()));
});})(tp,td,ta))
;
var or__3806__auto__ = ((cljs.core.contains_QMARK_((function (){var G__22776 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__22776) : tp.call(null,G__22776));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__22777 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22777) : ta.call(null,G__22777));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__22778 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22778) : ta.call(null,G__22778));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$14,tf(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$13,tf(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__22785 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22785) : parentMap.call(null,G__22785));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__22786 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22786) : parentMap.call(null,G__22786));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__22779_SHARP_){
return cljs.core.cons(cljs.core.first(p1__22779_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__22779_SHARP_),cljs.core.second(p1__22779_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__22787 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22787) : parentMap.call(null,G__22787));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__22780_SHARP_,p2__22781_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__22780_SHARP_,p2__22781_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__22790 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22790) : cljs.core.deref.call(null,G__22790));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__22791 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22791) : cljs.core.deref.call(null,G__22791));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__22807 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22807) : cljs.core.deref.call(null,G__22807));
})().call(null,x);
var or__3806__auto__ = (cljs.core.truth_((function (){var and__3794__auto__ = xprefs;
if(cljs.core.truth_(and__3794__auto__)){
var G__22809 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__22809) : xprefs.call(null,G__22809));
} else {
return and__3794__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__22810 = cljs.core.rest(ps);
ps = G__22810;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3806__auto____$1)){
return or__3806__auto____$1;
} else {
var or__3806__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__22811 = cljs.core.rest(ps);
ps = G__22811;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3806__auto____$2)){
return or__3806__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3806__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3806__auto__)){
return or__3806__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__22825){
var vec__22826 = p__22825;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22826,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22826,(1),null);
var e = vec__22826;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22827 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22827) : cljs.core.deref.call(null,G__22827));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3806__auto__ = (be == null);
if(or__3806__auto__){
return or__3806__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__22828 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22828) : cljs.core.deref.call(null,G__22828));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22829 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22829) : cljs.core.deref.call(null,G__22829));
})(),(function (){var G__22830 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22830) : cljs.core.deref.call(null,G__22830));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj22832 = {};
return obj22832;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._reset[(function (){var G__22836 = x__4450__auto__;
return goog.typeOf(G__22836);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._reset["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._add_method[(function (){var G__22840 = x__4450__auto__;
return goog.typeOf(G__22840);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._add_method["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._remove_method[(function (){var G__22844 = x__4450__auto__;
return goog.typeOf(G__22844);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._prefer_method[(function (){var G__22848 = x__4450__auto__;
return goog.typeOf(G__22848);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._get_method[(function (){var G__22852 = x__4450__auto__;
return goog.typeOf(G__22852);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._get_method["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._methods[(function (){var G__22856 = x__4450__auto__;
return goog.typeOf(G__22856);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._methods["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3794__auto__ = mf;
if(and__3794__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3794__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4450__auto__ = (((mf == null))?null:mf);
return (function (){var or__3806__auto__ = (cljs.core._prefers[(function (){var G__22860 = x__4450__auto__;
return goog.typeOf(G__22860);
})()]);
if(or__3806__auto__){
return or__3806__auto__;
} else {
var or__3806__auto____$1 = (cljs.core._prefers["_"]);
if(or__3806__auto____$1){
return or__3806__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22862 = this$__$1;
return goog.getUid(G__22862);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22863 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22863) : cljs.core.deref.call(null,G__22863));
})(),(function (){var G__22864 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22864) : cljs.core.deref.call(null,G__22864));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__22865 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22865) : cljs.core.deref.call(null,G__22865));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__22866 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22866) : cljs.core.deref.call(null,G__22866));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22867 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22867) : cljs.core.deref.call(null,G__22867));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22868 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22868) : cljs.core.deref.call(null,G__22868));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__23709 = null;
var G__23709__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__23709__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22869 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__22869) : self__.dispatch_fn.call(null,G__22869));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22870 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__22870) : target_fn.call(null,G__22870));
});
var G__23709__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22871 = a;
var G__22872 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__22871,G__22872) : self__.dispatch_fn.call(null,G__22871,G__22872));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22873 = a;
var G__22874 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__22873,G__22874) : target_fn.call(null,G__22873,G__22874));
});
var G__23709__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22875 = a;
var G__22876 = b;
var G__22877 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__22875,G__22876,G__22877) : self__.dispatch_fn.call(null,G__22875,G__22876,G__22877));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22878 = a;
var G__22879 = b;
var G__22880 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__22878,G__22879,G__22880) : target_fn.call(null,G__22878,G__22879,G__22880));
});
var G__23709__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22881 = a;
var G__22882 = b;
var G__22883 = c;
var G__22884 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__22881,G__22882,G__22883,G__22884) : self__.dispatch_fn.call(null,G__22881,G__22882,G__22883,G__22884));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22885 = a;
var G__22886 = b;
var G__22887 = c;
var G__22888 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__22885,G__22886,G__22887,G__22888) : target_fn.call(null,G__22885,G__22886,G__22887,G__22888));
});
var G__23709__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22889 = a;
var G__22890 = b;
var G__22891 = c;
var G__22892 = d;
var G__22893 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__22889,G__22890,G__22891,G__22892,G__22893) : self__.dispatch_fn.call(null,G__22889,G__22890,G__22891,G__22892,G__22893));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22894 = a;
var G__22895 = b;
var G__22896 = c;
var G__22897 = d;
var G__22898 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__22894,G__22895,G__22896,G__22897,G__22898) : target_fn.call(null,G__22894,G__22895,G__22896,G__22897,G__22898));
});
var G__23709__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22899 = a;
var G__22900 = b;
var G__22901 = c;
var G__22902 = d;
var G__22903 = e;
var G__22904 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__22899,G__22900,G__22901,G__22902,G__22903,G__22904) : self__.dispatch_fn.call(null,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22905 = a;
var G__22906 = b;
var G__22907 = c;
var G__22908 = d;
var G__22909 = e;
var G__22910 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__22905,G__22906,G__22907,G__22908,G__22909,G__22910) : target_fn.call(null,G__22905,G__22906,G__22907,G__22908,G__22909,G__22910));
});
var G__23709__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22911 = a;
var G__22912 = b;
var G__22913 = c;
var G__22914 = d;
var G__22915 = e;
var G__22916 = f;
var G__22917 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__22911,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917) : self__.dispatch_fn.call(null,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22918 = a;
var G__22919 = b;
var G__22920 = c;
var G__22921 = d;
var G__22922 = e;
var G__22923 = f;
var G__22924 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__22918,G__22919,G__22920,G__22921,G__22922,G__22923,G__22924) : target_fn.call(null,G__22918,G__22919,G__22920,G__22921,G__22922,G__22923,G__22924));
});
var G__23709__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22925 = a;
var G__22926 = b;
var G__22927 = c;
var G__22928 = d;
var G__22929 = e;
var G__22930 = f;
var G__22931 = g;
var G__22932 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__22925,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932) : self__.dispatch_fn.call(null,G__22925,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22933 = a;
var G__22934 = b;
var G__22935 = c;
var G__22936 = d;
var G__22937 = e;
var G__22938 = f;
var G__22939 = g;
var G__22940 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__22933,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940) : target_fn.call(null,G__22933,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940));
});
var G__23709__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22941 = a;
var G__22942 = b;
var G__22943 = c;
var G__22944 = d;
var G__22945 = e;
var G__22946 = f;
var G__22947 = g;
var G__22948 = h;
var G__22949 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949) : self__.dispatch_fn.call(null,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22950 = a;
var G__22951 = b;
var G__22952 = c;
var G__22953 = d;
var G__22954 = e;
var G__22955 = f;
var G__22956 = g;
var G__22957 = h;
var G__22958 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958) : target_fn.call(null,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958));
});
var G__23709__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22959 = a;
var G__22960 = b;
var G__22961 = c;
var G__22962 = d;
var G__22963 = e;
var G__22964 = f;
var G__22965 = g;
var G__22966 = h;
var G__22967 = i;
var G__22968 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__22959,G__22960,G__22961,G__22962,G__22963,G__22964,G__22965,G__22966,G__22967,G__22968) : self__.dispatch_fn.call(null,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964,G__22965,G__22966,G__22967,G__22968));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22969 = a;
var G__22970 = b;
var G__22971 = c;
var G__22972 = d;
var G__22973 = e;
var G__22974 = f;
var G__22975 = g;
var G__22976 = h;
var G__22977 = i;
var G__22978 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978) : target_fn.call(null,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978));
});
var G__23709__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22979 = a;
var G__22980 = b;
var G__22981 = c;
var G__22982 = d;
var G__22983 = e;
var G__22984 = f;
var G__22985 = g;
var G__22986 = h;
var G__22987 = i;
var G__22988 = j;
var G__22989 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__22979,G__22980,G__22981,G__22982,G__22983,G__22984,G__22985,G__22986,G__22987,G__22988,G__22989) : self__.dispatch_fn.call(null,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984,G__22985,G__22986,G__22987,G__22988,G__22989));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22990 = a;
var G__22991 = b;
var G__22992 = c;
var G__22993 = d;
var G__22994 = e;
var G__22995 = f;
var G__22996 = g;
var G__22997 = h;
var G__22998 = i;
var G__22999 = j;
var G__23000 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999,G__23000) : target_fn.call(null,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999,G__23000));
});
var G__23709__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23001 = a;
var G__23002 = b;
var G__23003 = c;
var G__23004 = d;
var G__23005 = e;
var G__23006 = f;
var G__23007 = g;
var G__23008 = h;
var G__23009 = i;
var G__23010 = j;
var G__23011 = k;
var G__23012 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23001,G__23002,G__23003,G__23004,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012) : self__.dispatch_fn.call(null,G__23001,G__23002,G__23003,G__23004,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23013 = a;
var G__23014 = b;
var G__23015 = c;
var G__23016 = d;
var G__23017 = e;
var G__23018 = f;
var G__23019 = g;
var G__23020 = h;
var G__23021 = i;
var G__23022 = j;
var G__23023 = k;
var G__23024 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024) : target_fn.call(null,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024));
});
var G__23709__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23025 = a;
var G__23026 = b;
var G__23027 = c;
var G__23028 = d;
var G__23029 = e;
var G__23030 = f;
var G__23031 = g;
var G__23032 = h;
var G__23033 = i;
var G__23034 = j;
var G__23035 = k;
var G__23036 = l;
var G__23037 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23025,G__23026,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037) : self__.dispatch_fn.call(null,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23038 = a;
var G__23039 = b;
var G__23040 = c;
var G__23041 = d;
var G__23042 = e;
var G__23043 = f;
var G__23044 = g;
var G__23045 = h;
var G__23046 = i;
var G__23047 = j;
var G__23048 = k;
var G__23049 = l;
var G__23050 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23038,G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050) : target_fn.call(null,G__23038,G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050));
});
var G__23709__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23051 = a;
var G__23052 = b;
var G__23053 = c;
var G__23054 = d;
var G__23055 = e;
var G__23056 = f;
var G__23057 = g;
var G__23058 = h;
var G__23059 = i;
var G__23060 = j;
var G__23061 = k;
var G__23062 = l;
var G__23063 = m;
var G__23064 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23051,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059,G__23060,G__23061,G__23062,G__23063,G__23064) : self__.dispatch_fn.call(null,G__23051,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059,G__23060,G__23061,G__23062,G__23063,G__23064));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23065 = a;
var G__23066 = b;
var G__23067 = c;
var G__23068 = d;
var G__23069 = e;
var G__23070 = f;
var G__23071 = g;
var G__23072 = h;
var G__23073 = i;
var G__23074 = j;
var G__23075 = k;
var G__23076 = l;
var G__23077 = m;
var G__23078 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23065,G__23066,G__23067,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074,G__23075,G__23076,G__23077,G__23078) : target_fn.call(null,G__23065,G__23066,G__23067,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074,G__23075,G__23076,G__23077,G__23078));
});
var G__23709__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23079 = a;
var G__23080 = b;
var G__23081 = c;
var G__23082 = d;
var G__23083 = e;
var G__23084 = f;
var G__23085 = g;
var G__23086 = h;
var G__23087 = i;
var G__23088 = j;
var G__23089 = k;
var G__23090 = l;
var G__23091 = m;
var G__23092 = n;
var G__23093 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23079,G__23080,G__23081,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093) : self__.dispatch_fn.call(null,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23094 = a;
var G__23095 = b;
var G__23096 = c;
var G__23097 = d;
var G__23098 = e;
var G__23099 = f;
var G__23100 = g;
var G__23101 = h;
var G__23102 = i;
var G__23103 = j;
var G__23104 = k;
var G__23105 = l;
var G__23106 = m;
var G__23107 = n;
var G__23108 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23094,G__23095,G__23096,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108) : target_fn.call(null,G__23094,G__23095,G__23096,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108));
});
var G__23709__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23109 = a;
var G__23110 = b;
var G__23111 = c;
var G__23112 = d;
var G__23113 = e;
var G__23114 = f;
var G__23115 = g;
var G__23116 = h;
var G__23117 = i;
var G__23118 = j;
var G__23119 = k;
var G__23120 = l;
var G__23121 = m;
var G__23122 = n;
var G__23123 = o;
var G__23124 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124) : self__.dispatch_fn.call(null,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23125 = a;
var G__23126 = b;
var G__23127 = c;
var G__23128 = d;
var G__23129 = e;
var G__23130 = f;
var G__23131 = g;
var G__23132 = h;
var G__23133 = i;
var G__23134 = j;
var G__23135 = k;
var G__23136 = l;
var G__23137 = m;
var G__23138 = n;
var G__23139 = o;
var G__23140 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23125,G__23126,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138,G__23139,G__23140) : target_fn.call(null,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138,G__23139,G__23140));
});
var G__23709__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23141 = a;
var G__23142 = b;
var G__23143 = c;
var G__23144 = d;
var G__23145 = e;
var G__23146 = f;
var G__23147 = g;
var G__23148 = h;
var G__23149 = i;
var G__23150 = j;
var G__23151 = k;
var G__23152 = l;
var G__23153 = m;
var G__23154 = n;
var G__23155 = o;
var G__23156 = p;
var G__23157 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157) : self__.dispatch_fn.call(null,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23158 = a;
var G__23159 = b;
var G__23160 = c;
var G__23161 = d;
var G__23162 = e;
var G__23163 = f;
var G__23164 = g;
var G__23165 = h;
var G__23166 = i;
var G__23167 = j;
var G__23168 = k;
var G__23169 = l;
var G__23170 = m;
var G__23171 = n;
var G__23172 = o;
var G__23173 = p;
var G__23174 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174) : target_fn.call(null,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174));
});
var G__23709__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23175 = a;
var G__23176 = b;
var G__23177 = c;
var G__23178 = d;
var G__23179 = e;
var G__23180 = f;
var G__23181 = g;
var G__23182 = h;
var G__23183 = i;
var G__23184 = j;
var G__23185 = k;
var G__23186 = l;
var G__23187 = m;
var G__23188 = n;
var G__23189 = o;
var G__23190 = p;
var G__23191 = q;
var G__23192 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192) : self__.dispatch_fn.call(null,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23193 = a;
var G__23194 = b;
var G__23195 = c;
var G__23196 = d;
var G__23197 = e;
var G__23198 = f;
var G__23199 = g;
var G__23200 = h;
var G__23201 = i;
var G__23202 = j;
var G__23203 = k;
var G__23204 = l;
var G__23205 = m;
var G__23206 = n;
var G__23207 = o;
var G__23208 = p;
var G__23209 = q;
var G__23210 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23193,G__23194,G__23195,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210) : target_fn.call(null,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210));
});
var G__23709__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23211 = a;
var G__23212 = b;
var G__23213 = c;
var G__23214 = d;
var G__23215 = e;
var G__23216 = f;
var G__23217 = g;
var G__23218 = h;
var G__23219 = i;
var G__23220 = j;
var G__23221 = k;
var G__23222 = l;
var G__23223 = m;
var G__23224 = n;
var G__23225 = o;
var G__23226 = p;
var G__23227 = q;
var G__23228 = r;
var G__23229 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229) : self__.dispatch_fn.call(null,G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23230 = a;
var G__23231 = b;
var G__23232 = c;
var G__23233 = d;
var G__23234 = e;
var G__23235 = f;
var G__23236 = g;
var G__23237 = h;
var G__23238 = i;
var G__23239 = j;
var G__23240 = k;
var G__23241 = l;
var G__23242 = m;
var G__23243 = n;
var G__23244 = o;
var G__23245 = p;
var G__23246 = q;
var G__23247 = r;
var G__23248 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23230,G__23231,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248) : target_fn.call(null,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248));
});
var G__23709__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23249 = a;
var G__23250 = b;
var G__23251 = c;
var G__23252 = d;
var G__23253 = e;
var G__23254 = f;
var G__23255 = g;
var G__23256 = h;
var G__23257 = i;
var G__23258 = j;
var G__23259 = k;
var G__23260 = l;
var G__23261 = m;
var G__23262 = n;
var G__23263 = o;
var G__23264 = p;
var G__23265 = q;
var G__23266 = r;
var G__23267 = s;
var G__23268 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268) : self__.dispatch_fn.call(null,G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23269 = a;
var G__23270 = b;
var G__23271 = c;
var G__23272 = d;
var G__23273 = e;
var G__23274 = f;
var G__23275 = g;
var G__23276 = h;
var G__23277 = i;
var G__23278 = j;
var G__23279 = k;
var G__23280 = l;
var G__23281 = m;
var G__23282 = n;
var G__23283 = o;
var G__23284 = p;
var G__23285 = q;
var G__23286 = r;
var G__23287 = s;
var G__23288 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288) : target_fn.call(null,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288));
});
var G__23709__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__23709 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23709__1.call(this,self__);
case 2:
return G__23709__2.call(this,self__,a);
case 3:
return G__23709__3.call(this,self__,a,b);
case 4:
return G__23709__4.call(this,self__,a,b,c);
case 5:
return G__23709__5.call(this,self__,a,b,c,d);
case 6:
return G__23709__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23709__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23709__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23709__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23709__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23709__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23709__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23709__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23709__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23709__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23709__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23709__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23709__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23709__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23709__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23709__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23709__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23709.cljs$core$IFn$_invoke$arity$1 = G__23709__1;
G__23709.cljs$core$IFn$_invoke$arity$2 = G__23709__2;
G__23709.cljs$core$IFn$_invoke$arity$3 = G__23709__3;
G__23709.cljs$core$IFn$_invoke$arity$4 = G__23709__4;
G__23709.cljs$core$IFn$_invoke$arity$5 = G__23709__5;
G__23709.cljs$core$IFn$_invoke$arity$6 = G__23709__6;
G__23709.cljs$core$IFn$_invoke$arity$7 = G__23709__7;
G__23709.cljs$core$IFn$_invoke$arity$8 = G__23709__8;
G__23709.cljs$core$IFn$_invoke$arity$9 = G__23709__9;
G__23709.cljs$core$IFn$_invoke$arity$10 = G__23709__10;
G__23709.cljs$core$IFn$_invoke$arity$11 = G__23709__11;
G__23709.cljs$core$IFn$_invoke$arity$12 = G__23709__12;
G__23709.cljs$core$IFn$_invoke$arity$13 = G__23709__13;
G__23709.cljs$core$IFn$_invoke$arity$14 = G__23709__14;
G__23709.cljs$core$IFn$_invoke$arity$15 = G__23709__15;
G__23709.cljs$core$IFn$_invoke$arity$16 = G__23709__16;
G__23709.cljs$core$IFn$_invoke$arity$17 = G__23709__17;
G__23709.cljs$core$IFn$_invoke$arity$18 = G__23709__18;
G__23709.cljs$core$IFn$_invoke$arity$19 = G__23709__19;
G__23709.cljs$core$IFn$_invoke$arity$20 = G__23709__20;
G__23709.cljs$core$IFn$_invoke$arity$21 = G__23709__21;
G__23709.cljs$core$IFn$_invoke$arity$22 = G__23709__22;
return G__23709;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args22861){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22861)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23289 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23289) : self__.dispatch_fn.call(null,G__23289));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23290 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23290) : target_fn.call(null,G__23290));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23291 = a;
var G__23292 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23291,G__23292) : self__.dispatch_fn.call(null,G__23291,G__23292));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23293 = a;
var G__23294 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23293,G__23294) : target_fn.call(null,G__23293,G__23294));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23295 = a;
var G__23296 = b;
var G__23297 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23295,G__23296,G__23297) : self__.dispatch_fn.call(null,G__23295,G__23296,G__23297));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23298 = a;
var G__23299 = b;
var G__23300 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23298,G__23299,G__23300) : target_fn.call(null,G__23298,G__23299,G__23300));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23301 = a;
var G__23302 = b;
var G__23303 = c;
var G__23304 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23301,G__23302,G__23303,G__23304) : self__.dispatch_fn.call(null,G__23301,G__23302,G__23303,G__23304));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23305 = a;
var G__23306 = b;
var G__23307 = c;
var G__23308 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23305,G__23306,G__23307,G__23308) : target_fn.call(null,G__23305,G__23306,G__23307,G__23308));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23309 = a;
var G__23310 = b;
var G__23311 = c;
var G__23312 = d;
var G__23313 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23309,G__23310,G__23311,G__23312,G__23313) : self__.dispatch_fn.call(null,G__23309,G__23310,G__23311,G__23312,G__23313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23314 = a;
var G__23315 = b;
var G__23316 = c;
var G__23317 = d;
var G__23318 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23314,G__23315,G__23316,G__23317,G__23318) : target_fn.call(null,G__23314,G__23315,G__23316,G__23317,G__23318));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23319 = a;
var G__23320 = b;
var G__23321 = c;
var G__23322 = d;
var G__23323 = e;
var G__23324 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23319,G__23320,G__23321,G__23322,G__23323,G__23324) : self__.dispatch_fn.call(null,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23325 = a;
var G__23326 = b;
var G__23327 = c;
var G__23328 = d;
var G__23329 = e;
var G__23330 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23325,G__23326,G__23327,G__23328,G__23329,G__23330) : target_fn.call(null,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23331 = a;
var G__23332 = b;
var G__23333 = c;
var G__23334 = d;
var G__23335 = e;
var G__23336 = f;
var G__23337 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23331,G__23332,G__23333,G__23334,G__23335,G__23336,G__23337) : self__.dispatch_fn.call(null,G__23331,G__23332,G__23333,G__23334,G__23335,G__23336,G__23337));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23338 = a;
var G__23339 = b;
var G__23340 = c;
var G__23341 = d;
var G__23342 = e;
var G__23343 = f;
var G__23344 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344) : target_fn.call(null,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23345 = a;
var G__23346 = b;
var G__23347 = c;
var G__23348 = d;
var G__23349 = e;
var G__23350 = f;
var G__23351 = g;
var G__23352 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352) : self__.dispatch_fn.call(null,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23353 = a;
var G__23354 = b;
var G__23355 = c;
var G__23356 = d;
var G__23357 = e;
var G__23358 = f;
var G__23359 = g;
var G__23360 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23353,G__23354,G__23355,G__23356,G__23357,G__23358,G__23359,G__23360) : target_fn.call(null,G__23353,G__23354,G__23355,G__23356,G__23357,G__23358,G__23359,G__23360));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23361 = a;
var G__23362 = b;
var G__23363 = c;
var G__23364 = d;
var G__23365 = e;
var G__23366 = f;
var G__23367 = g;
var G__23368 = h;
var G__23369 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369) : self__.dispatch_fn.call(null,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23370 = a;
var G__23371 = b;
var G__23372 = c;
var G__23373 = d;
var G__23374 = e;
var G__23375 = f;
var G__23376 = g;
var G__23377 = h;
var G__23378 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23370,G__23371,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378) : target_fn.call(null,G__23370,G__23371,G__23372,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23379 = a;
var G__23380 = b;
var G__23381 = c;
var G__23382 = d;
var G__23383 = e;
var G__23384 = f;
var G__23385 = g;
var G__23386 = h;
var G__23387 = i;
var G__23388 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386,G__23387,G__23388) : self__.dispatch_fn.call(null,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386,G__23387,G__23388));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23389 = a;
var G__23390 = b;
var G__23391 = c;
var G__23392 = d;
var G__23393 = e;
var G__23394 = f;
var G__23395 = g;
var G__23396 = h;
var G__23397 = i;
var G__23398 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23389,G__23390,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398) : target_fn.call(null,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23399 = a;
var G__23400 = b;
var G__23401 = c;
var G__23402 = d;
var G__23403 = e;
var G__23404 = f;
var G__23405 = g;
var G__23406 = h;
var G__23407 = i;
var G__23408 = j;
var G__23409 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408,G__23409) : self__.dispatch_fn.call(null,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408,G__23409));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23410 = a;
var G__23411 = b;
var G__23412 = c;
var G__23413 = d;
var G__23414 = e;
var G__23415 = f;
var G__23416 = g;
var G__23417 = h;
var G__23418 = i;
var G__23419 = j;
var G__23420 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23410,G__23411,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420) : target_fn.call(null,G__23410,G__23411,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23421 = a;
var G__23422 = b;
var G__23423 = c;
var G__23424 = d;
var G__23425 = e;
var G__23426 = f;
var G__23427 = g;
var G__23428 = h;
var G__23429 = i;
var G__23430 = j;
var G__23431 = k;
var G__23432 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23421,G__23422,G__23423,G__23424,G__23425,G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432) : self__.dispatch_fn.call(null,G__23421,G__23422,G__23423,G__23424,G__23425,G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23433 = a;
var G__23434 = b;
var G__23435 = c;
var G__23436 = d;
var G__23437 = e;
var G__23438 = f;
var G__23439 = g;
var G__23440 = h;
var G__23441 = i;
var G__23442 = j;
var G__23443 = k;
var G__23444 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443,G__23444) : target_fn.call(null,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443,G__23444));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23445 = a;
var G__23446 = b;
var G__23447 = c;
var G__23448 = d;
var G__23449 = e;
var G__23450 = f;
var G__23451 = g;
var G__23452 = h;
var G__23453 = i;
var G__23454 = j;
var G__23455 = k;
var G__23456 = l;
var G__23457 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23445,G__23446,G__23447,G__23448,G__23449,G__23450,G__23451,G__23452,G__23453,G__23454,G__23455,G__23456,G__23457) : self__.dispatch_fn.call(null,G__23445,G__23446,G__23447,G__23448,G__23449,G__23450,G__23451,G__23452,G__23453,G__23454,G__23455,G__23456,G__23457));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23458 = a;
var G__23459 = b;
var G__23460 = c;
var G__23461 = d;
var G__23462 = e;
var G__23463 = f;
var G__23464 = g;
var G__23465 = h;
var G__23466 = i;
var G__23467 = j;
var G__23468 = k;
var G__23469 = l;
var G__23470 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23458,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466,G__23467,G__23468,G__23469,G__23470) : target_fn.call(null,G__23458,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466,G__23467,G__23468,G__23469,G__23470));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23471 = a;
var G__23472 = b;
var G__23473 = c;
var G__23474 = d;
var G__23475 = e;
var G__23476 = f;
var G__23477 = g;
var G__23478 = h;
var G__23479 = i;
var G__23480 = j;
var G__23481 = k;
var G__23482 = l;
var G__23483 = m;
var G__23484 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23471,G__23472,G__23473,G__23474,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484) : self__.dispatch_fn.call(null,G__23471,G__23472,G__23473,G__23474,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23485 = a;
var G__23486 = b;
var G__23487 = c;
var G__23488 = d;
var G__23489 = e;
var G__23490 = f;
var G__23491 = g;
var G__23492 = h;
var G__23493 = i;
var G__23494 = j;
var G__23495 = k;
var G__23496 = l;
var G__23497 = m;
var G__23498 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23485,G__23486,G__23487,G__23488,G__23489,G__23490,G__23491,G__23492,G__23493,G__23494,G__23495,G__23496,G__23497,G__23498) : target_fn.call(null,G__23485,G__23486,G__23487,G__23488,G__23489,G__23490,G__23491,G__23492,G__23493,G__23494,G__23495,G__23496,G__23497,G__23498));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23499 = a;
var G__23500 = b;
var G__23501 = c;
var G__23502 = d;
var G__23503 = e;
var G__23504 = f;
var G__23505 = g;
var G__23506 = h;
var G__23507 = i;
var G__23508 = j;
var G__23509 = k;
var G__23510 = l;
var G__23511 = m;
var G__23512 = n;
var G__23513 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23499,G__23500,G__23501,G__23502,G__23503,G__23504,G__23505,G__23506,G__23507,G__23508,G__23509,G__23510,G__23511,G__23512,G__23513) : self__.dispatch_fn.call(null,G__23499,G__23500,G__23501,G__23502,G__23503,G__23504,G__23505,G__23506,G__23507,G__23508,G__23509,G__23510,G__23511,G__23512,G__23513));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23514 = a;
var G__23515 = b;
var G__23516 = c;
var G__23517 = d;
var G__23518 = e;
var G__23519 = f;
var G__23520 = g;
var G__23521 = h;
var G__23522 = i;
var G__23523 = j;
var G__23524 = k;
var G__23525 = l;
var G__23526 = m;
var G__23527 = n;
var G__23528 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23514,G__23515,G__23516,G__23517,G__23518,G__23519,G__23520,G__23521,G__23522,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528) : target_fn.call(null,G__23514,G__23515,G__23516,G__23517,G__23518,G__23519,G__23520,G__23521,G__23522,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23529 = a;
var G__23530 = b;
var G__23531 = c;
var G__23532 = d;
var G__23533 = e;
var G__23534 = f;
var G__23535 = g;
var G__23536 = h;
var G__23537 = i;
var G__23538 = j;
var G__23539 = k;
var G__23540 = l;
var G__23541 = m;
var G__23542 = n;
var G__23543 = o;
var G__23544 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544) : self__.dispatch_fn.call(null,G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23545 = a;
var G__23546 = b;
var G__23547 = c;
var G__23548 = d;
var G__23549 = e;
var G__23550 = f;
var G__23551 = g;
var G__23552 = h;
var G__23553 = i;
var G__23554 = j;
var G__23555 = k;
var G__23556 = l;
var G__23557 = m;
var G__23558 = n;
var G__23559 = o;
var G__23560 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558,G__23559,G__23560) : target_fn.call(null,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558,G__23559,G__23560));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23561 = a;
var G__23562 = b;
var G__23563 = c;
var G__23564 = d;
var G__23565 = e;
var G__23566 = f;
var G__23567 = g;
var G__23568 = h;
var G__23569 = i;
var G__23570 = j;
var G__23571 = k;
var G__23572 = l;
var G__23573 = m;
var G__23574 = n;
var G__23575 = o;
var G__23576 = p;
var G__23577 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577) : self__.dispatch_fn.call(null,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23578 = a;
var G__23579 = b;
var G__23580 = c;
var G__23581 = d;
var G__23582 = e;
var G__23583 = f;
var G__23584 = g;
var G__23585 = h;
var G__23586 = i;
var G__23587 = j;
var G__23588 = k;
var G__23589 = l;
var G__23590 = m;
var G__23591 = n;
var G__23592 = o;
var G__23593 = p;
var G__23594 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594) : target_fn.call(null,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23595 = a;
var G__23596 = b;
var G__23597 = c;
var G__23598 = d;
var G__23599 = e;
var G__23600 = f;
var G__23601 = g;
var G__23602 = h;
var G__23603 = i;
var G__23604 = j;
var G__23605 = k;
var G__23606 = l;
var G__23607 = m;
var G__23608 = n;
var G__23609 = o;
var G__23610 = p;
var G__23611 = q;
var G__23612 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23595,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612) : self__.dispatch_fn.call(null,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23613 = a;
var G__23614 = b;
var G__23615 = c;
var G__23616 = d;
var G__23617 = e;
var G__23618 = f;
var G__23619 = g;
var G__23620 = h;
var G__23621 = i;
var G__23622 = j;
var G__23623 = k;
var G__23624 = l;
var G__23625 = m;
var G__23626 = n;
var G__23627 = o;
var G__23628 = p;
var G__23629 = q;
var G__23630 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630) : target_fn.call(null,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23631 = a;
var G__23632 = b;
var G__23633 = c;
var G__23634 = d;
var G__23635 = e;
var G__23636 = f;
var G__23637 = g;
var G__23638 = h;
var G__23639 = i;
var G__23640 = j;
var G__23641 = k;
var G__23642 = l;
var G__23643 = m;
var G__23644 = n;
var G__23645 = o;
var G__23646 = p;
var G__23647 = q;
var G__23648 = r;
var G__23649 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649) : self__.dispatch_fn.call(null,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23650 = a;
var G__23651 = b;
var G__23652 = c;
var G__23653 = d;
var G__23654 = e;
var G__23655 = f;
var G__23656 = g;
var G__23657 = h;
var G__23658 = i;
var G__23659 = j;
var G__23660 = k;
var G__23661 = l;
var G__23662 = m;
var G__23663 = n;
var G__23664 = o;
var G__23665 = p;
var G__23666 = q;
var G__23667 = r;
var G__23668 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668) : target_fn.call(null,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23669 = a;
var G__23670 = b;
var G__23671 = c;
var G__23672 = d;
var G__23673 = e;
var G__23674 = f;
var G__23675 = g;
var G__23676 = h;
var G__23677 = i;
var G__23678 = j;
var G__23679 = k;
var G__23680 = l;
var G__23681 = m;
var G__23682 = n;
var G__23683 = o;
var G__23684 = p;
var G__23685 = q;
var G__23686 = r;
var G__23687 = s;
var G__23688 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683,G__23684,G__23685,G__23686,G__23687,G__23688) : self__.dispatch_fn.call(null,G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683,G__23684,G__23685,G__23686,G__23687,G__23688));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23689 = a;
var G__23690 = b;
var G__23691 = c;
var G__23692 = d;
var G__23693 = e;
var G__23694 = f;
var G__23695 = g;
var G__23696 = h;
var G__23697 = i;
var G__23698 = j;
var G__23699 = k;
var G__23700 = l;
var G__23701 = m;
var G__23702 = n;
var G__23703 = o;
var G__23704 = p;
var G__23705 = q;
var G__23706 = r;
var G__23707 = s;
var G__23708 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708) : target_fn.call(null,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23710 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__23710);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4393__auto__,writer__4394__auto__,opt__4395__auto__){
return cljs.core._write(writer__4394__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__23715 = msg;
return Error(G__23715);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__23720 = x;
var G__23721 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23720,G__23721) : pred.call(null,G__23720,G__23721));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__23722 = y;
var G__23723 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23722,G__23723) : pred.call(null,G__23722,G__23723));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$15;
} else {
return cljs.core.constant$keyword$16;
}
});

// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__21118__delegate = function (args){
return console.log.apply(console,(function (){var G__21117 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__21117) : cljs.core.into_array.call(null,G__21117));
})());
};
var G__21118 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21119__i = 0, G__21119__a = new Array(arguments.length -  0);
while (G__21119__i < G__21119__a.length) {G__21119__a[G__21119__i] = arguments[G__21119__i + 0]; ++G__21119__i;}
  args = new cljs.core.IndexedSeq(G__21119__a,0);
} 
return G__21118__delegate.call(this,args);};
G__21118.cljs$lang$maxFixedArity = 0;
G__21118.cljs$lang$applyTo = (function (arglist__21120){
var args = cljs.core.seq(arglist__21120);
return G__21118__delegate(args);
});
G__21118.cljs$core$IFn$_invoke$arity$variadic = G__21118__delegate;
return G__21118;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__21122 = x;
return goog.isString(G__21122);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__21124 = x__$1;
return goog.typeOf(G__21124);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12761__auto__ = ty;
if(cljs.core.truth_(and__12761__auto__)){
return ty.cljs$lang$type;
} else {
return and__12761__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__21126 = obj;
return goog.typeOf(G__21126);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__21128 = Symbol;
return goog.typeOf(G__21128);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13660__auto___21130 = len;
var i_21131 = (0);
while(true){
if((i_21131 < n__13660__auto___21130)){
(new_arr[i_21131] = (arr[i_21131]));

var G__21132 = (i_21131 + (1));
i_21131 = G__21132;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__21133 = (i + (1));
i = G__21133;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__21142__delegate = function (array,i,idxs){
var G__21139 = aget;
var G__21140 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__21141 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__21139,G__21140,G__21141) : cljs.core.apply.call(null,G__21139,G__21140,G__21141));
};
var G__21142 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__21143__i = 0, G__21143__a = new Array(arguments.length -  2);
while (G__21143__i < G__21143__a.length) {G__21143__a[G__21143__i] = arguments[G__21143__i + 2]; ++G__21143__i;}
  idxs = new cljs.core.IndexedSeq(G__21143__a,0);
} 
return G__21142__delegate.call(this,array,i,idxs);};
G__21142.cljs$lang$maxFixedArity = 2;
G__21142.cljs$lang$applyTo = (function (arglist__21144){
var array = cljs.core.first(arglist__21144);
arglist__21144 = cljs.core.next(arglist__21144);
var i = cljs.core.first(arglist__21144);
var idxs = cljs.core.rest(arglist__21144);
return G__21142__delegate(array,i,idxs);
});
G__21142.cljs$core$IFn$_invoke$arity$variadic = G__21142__delegate;
return G__21142;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__21145 = null;
if (arguments.length > 2) {
var G__21146__i = 0, G__21146__a = new Array(arguments.length -  2);
while (G__21146__i < G__21146__a.length) {G__21146__a[G__21146__i] = arguments[G__21146__i + 2]; ++G__21146__i;}
G__21145 = new cljs.core.IndexedSeq(G__21146__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__21145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__21155__delegate = function (array,idx,idx2,idxv){
var G__21151 = aset;
var G__21152 = (array[idx]);
var G__21153 = idx2;
var G__21154 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__21151,G__21152,G__21153,G__21154) : cljs.core.apply.call(null,G__21151,G__21152,G__21153,G__21154));
};
var G__21155 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__21156__i = 0, G__21156__a = new Array(arguments.length -  3);
while (G__21156__i < G__21156__a.length) {G__21156__a[G__21156__i] = arguments[G__21156__i + 3]; ++G__21156__i;}
  idxv = new cljs.core.IndexedSeq(G__21156__a,0);
} 
return G__21155__delegate.call(this,array,idx,idx2,idxv);};
G__21155.cljs$lang$maxFixedArity = 3;
G__21155.cljs$lang$applyTo = (function (arglist__21157){
var array = cljs.core.first(arglist__21157);
arglist__21157 = cljs.core.next(arglist__21157);
var idx = cljs.core.first(arglist__21157);
arglist__21157 = cljs.core.next(arglist__21157);
var idx2 = cljs.core.first(arglist__21157);
var idxv = cljs.core.rest(arglist__21157);
return G__21155__delegate(array,idx,idx2,idxv);
});
G__21155.cljs$core$IFn$_invoke$arity$variadic = G__21155__delegate;
return G__21155;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__21158 = null;
if (arguments.length > 3) {
var G__21159__i = 0, G__21159__a = new Array(arguments.length -  3);
while (G__21159__i < G__21159__a.length) {G__21159__a[G__21159__i] = arguments[G__21159__i + 3]; ++G__21159__i;}
G__21158 = new cljs.core.IndexedSeq(G__21159__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__21158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__21165 = (function (a,x){
a.push(x);

return a;
});
var G__21166 = [];
var G__21167 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21165,G__21166,G__21167) : cljs.core.reduce.call(null,G__21165,G__21166,G__21167));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__21168__i = 0, G__21168__a = new Array(arguments.length -  2);
while (G__21168__i < G__21168__a.length) {G__21168__a[G__21168__i] = arguments[G__21168__i + 2]; ++G__21168__i;}
  args = new cljs.core.IndexedSeq(G__21168__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__21169){
var obj = cljs.core.first(arglist__21169);
arglist__21169 = cljs.core.next(arglist__21169);
var s = cljs.core.first(arglist__21169);
var args = cljs.core.rest(arglist__21169);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj21171 = {};
return obj21171;
})();


cljs.core.IFn = (function (){var obj21173 = {};
return obj21173;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21219 = x__13417__auto__;
return goog.typeOf(G__21219);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21221 = x__13417__auto__;
return goog.typeOf(G__21221);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21223 = x__13417__auto__;
return goog.typeOf(G__21223);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21225 = x__13417__auto__;
return goog.typeOf(G__21225);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21227 = x__13417__auto__;
return goog.typeOf(G__21227);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21229 = x__13417__auto__;
return goog.typeOf(G__21229);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21231 = x__13417__auto__;
return goog.typeOf(G__21231);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21233 = x__13417__auto__;
return goog.typeOf(G__21233);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21235 = x__13417__auto__;
return goog.typeOf(G__21235);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21237 = x__13417__auto__;
return goog.typeOf(G__21237);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21239 = x__13417__auto__;
return goog.typeOf(G__21239);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21241 = x__13417__auto__;
return goog.typeOf(G__21241);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21243 = x__13417__auto__;
return goog.typeOf(G__21243);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21245 = x__13417__auto__;
return goog.typeOf(G__21245);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21247 = x__13417__auto__;
return goog.typeOf(G__21247);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21249 = x__13417__auto__;
return goog.typeOf(G__21249);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21251 = x__13417__auto__;
return goog.typeOf(G__21251);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21253 = x__13417__auto__;
return goog.typeOf(G__21253);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21255 = x__13417__auto__;
return goog.typeOf(G__21255);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21257 = x__13417__auto__;
return goog.typeOf(G__21257);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21259 = x__13417__auto__;
return goog.typeOf(G__21259);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._invoke[(function (){var G__21261 = x__13417__auto__;
return goog.typeOf(G__21261);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._invoke["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj21263 = {};
return obj21263;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12761__auto__ = value;
if(and__12761__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12761__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13417__auto__ = (((value == null))?null:value);
return (function (){var or__12773__auto__ = (cljs.core._clone[(function (){var G__21267 = x__13417__auto__;
return goog.typeOf(G__21267);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._clone["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj21269 = {};
return obj21269;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._count[(function (){var G__21273 = x__13417__auto__;
return goog.typeOf(G__21273);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._count["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj21275 = {};
return obj21275;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._empty[(function (){var G__21279 = x__13417__auto__;
return goog.typeOf(G__21279);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._empty["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj21281 = {};
return obj21281;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._conj[(function (){var G__21285 = x__13417__auto__;
return goog.typeOf(G__21285);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._conj["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj21287 = {};
return obj21287;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._nth[(function (){var G__21293 = x__13417__auto__;
return goog.typeOf(G__21293);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._nth["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._nth[(function (){var G__21295 = x__13417__auto__;
return goog.typeOf(G__21295);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._nth["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj21297 = {};
return obj21297;
})();


cljs.core.ISeq = (function (){var obj21299 = {};
return obj21299;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._first[(function (){var G__21303 = x__13417__auto__;
return goog.typeOf(G__21303);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._first["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._rest[(function (){var G__21307 = x__13417__auto__;
return goog.typeOf(G__21307);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._rest["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj21309 = {};
return obj21309;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._next[(function (){var G__21313 = x__13417__auto__;
return goog.typeOf(G__21313);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._next["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj21315 = {};
return obj21315;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._lookup[(function (){var G__21321 = x__13417__auto__;
return goog.typeOf(G__21321);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._lookup["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._lookup[(function (){var G__21323 = x__13417__auto__;
return goog.typeOf(G__21323);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._lookup["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj21325 = {};
return obj21325;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__21329 = x__13417__auto__;
return goog.typeOf(G__21329);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._assoc[(function (){var G__21333 = x__13417__auto__;
return goog.typeOf(G__21333);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._assoc["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj21335 = {};
return obj21335;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._dissoc[(function (){var G__21339 = x__13417__auto__;
return goog.typeOf(G__21339);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj21341 = {};
return obj21341;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._key[(function (){var G__21345 = x__13417__auto__;
return goog.typeOf(G__21345);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._key["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._val[(function (){var G__21349 = x__13417__auto__;
return goog.typeOf(G__21349);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._val["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj21351 = {};
return obj21351;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._disjoin[(function (){var G__21355 = x__13417__auto__;
return goog.typeOf(G__21355);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj21357 = {};
return obj21357;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._peek[(function (){var G__21361 = x__13417__auto__;
return goog.typeOf(G__21361);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._peek["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._pop[(function (){var G__21365 = x__13417__auto__;
return goog.typeOf(G__21365);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._pop["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj21367 = {};
return obj21367;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._assoc_n[(function (){var G__21371 = x__13417__auto__;
return goog.typeOf(G__21371);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj21373 = {};
return obj21373;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._deref[(function (){var G__21377 = x__13417__auto__;
return goog.typeOf(G__21377);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._deref["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj21379 = {};
return obj21379;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._deref_with_timeout[(function (){var G__21383 = x__13417__auto__;
return goog.typeOf(G__21383);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj21385 = {};
return obj21385;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._meta[(function (){var G__21389 = x__13417__auto__;
return goog.typeOf(G__21389);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._meta["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj21391 = {};
return obj21391;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._with_meta[(function (){var G__21395 = x__13417__auto__;
return goog.typeOf(G__21395);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj21397 = {};
return obj21397;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._reduce[(function (){var G__21403 = x__13417__auto__;
return goog.typeOf(G__21403);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._reduce["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._reduce[(function (){var G__21405 = x__13417__auto__;
return goog.typeOf(G__21405);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._reduce["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj21407 = {};
return obj21407;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._kv_reduce[(function (){var G__21411 = x__13417__auto__;
return goog.typeOf(G__21411);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj21413 = {};
return obj21413;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._equiv[(function (){var G__21417 = x__13417__auto__;
return goog.typeOf(G__21417);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._equiv["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj21419 = {};
return obj21419;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._hash[(function (){var G__21423 = x__13417__auto__;
return goog.typeOf(G__21423);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._hash["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj21425 = {};
return obj21425;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._seq[(function (){var G__21429 = x__13417__auto__;
return goog.typeOf(G__21429);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._seq["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj21431 = {};
return obj21431;
})();


cljs.core.IList = (function (){var obj21433 = {};
return obj21433;
})();


cljs.core.IRecord = (function (){var obj21435 = {};
return obj21435;
})();


cljs.core.IReversible = (function (){var obj21437 = {};
return obj21437;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._rseq[(function (){var G__21441 = x__13417__auto__;
return goog.typeOf(G__21441);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._rseq["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj21443 = {};
return obj21443;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._sorted_seq[(function (){var G__21447 = x__13417__auto__;
return goog.typeOf(G__21447);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._sorted_seq_from[(function (){var G__21451 = x__13417__auto__;
return goog.typeOf(G__21451);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._entry_key[(function (){var G__21455 = x__13417__auto__;
return goog.typeOf(G__21455);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._comparator[(function (){var G__21459 = x__13417__auto__;
return goog.typeOf(G__21459);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._comparator["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj21461 = {};
return obj21461;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12761__auto__ = writer;
if(and__12761__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12761__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13417__auto__ = (((writer == null))?null:writer);
return (function (){var or__12773__auto__ = (cljs.core._write[(function (){var G__21465 = x__13417__auto__;
return goog.typeOf(G__21465);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._write["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12761__auto__ = writer;
if(and__12761__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12761__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13417__auto__ = (((writer == null))?null:writer);
return (function (){var or__12773__auto__ = (cljs.core._flush[(function (){var G__21469 = x__13417__auto__;
return goog.typeOf(G__21469);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._flush["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj21471 = {};
return obj21471;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._pr_writer[(function (){var G__21475 = x__13417__auto__;
return goog.typeOf(G__21475);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj21477 = {};
return obj21477;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12761__auto__ = d;
if(and__12761__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12761__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13417__auto__ = (((d == null))?null:d);
return (function (){var or__12773__auto__ = (cljs.core._realized_QMARK_[(function (){var G__21481 = x__13417__auto__;
return goog.typeOf(G__21481);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj21483 = {};
return obj21483;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._notify_watches[(function (){var G__21487 = x__13417__auto__;
return goog.typeOf(G__21487);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._add_watch[(function (){var G__21491 = x__13417__auto__;
return goog.typeOf(G__21491);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12761__auto__ = this$;
if(and__12761__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12761__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13417__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12773__auto__ = (cljs.core._remove_watch[(function (){var G__21495 = x__13417__auto__;
return goog.typeOf(G__21495);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj21497 = {};
return obj21497;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._as_transient[(function (){var G__21501 = x__13417__auto__;
return goog.typeOf(G__21501);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj21503 = {};
return obj21503;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._conj_BANG_[(function (){var G__21507 = x__13417__auto__;
return goog.typeOf(G__21507);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._persistent_BANG_[(function (){var G__21511 = x__13417__auto__;
return goog.typeOf(G__21511);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj21513 = {};
return obj21513;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._assoc_BANG_[(function (){var G__21517 = x__13417__auto__;
return goog.typeOf(G__21517);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj21519 = {};
return obj21519;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__21523 = x__13417__auto__;
return goog.typeOf(G__21523);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj21525 = {};
return obj21525;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__21529 = x__13417__auto__;
return goog.typeOf(G__21529);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._pop_BANG_[(function (){var G__21533 = x__13417__auto__;
return goog.typeOf(G__21533);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj21535 = {};
return obj21535;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12761__auto__ = tcoll;
if(and__12761__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13417__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12773__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__21539 = x__13417__auto__;
return goog.typeOf(G__21539);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj21541 = {};
return obj21541;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12761__auto__ = x;
if(and__12761__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12761__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13417__auto__ = (((x == null))?null:x);
return (function (){var or__12773__auto__ = (cljs.core._compare[(function (){var G__21545 = x__13417__auto__;
return goog.typeOf(G__21545);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._compare["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj21547 = {};
return obj21547;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._drop_first[(function (){var G__21551 = x__13417__auto__;
return goog.typeOf(G__21551);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj21553 = {};
return obj21553;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._chunked_first[(function (){var G__21557 = x__13417__auto__;
return goog.typeOf(G__21557);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._chunked_rest[(function (){var G__21561 = x__13417__auto__;
return goog.typeOf(G__21561);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj21563 = {};
return obj21563;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._chunked_next[(function (){var G__21567 = x__13417__auto__;
return goog.typeOf(G__21567);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj21569 = {};
return obj21569;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12761__auto__ = x;
if(and__12761__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12761__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13417__auto__ = (((x == null))?null:x);
return (function (){var or__12773__auto__ = (cljs.core._name[(function (){var G__21573 = x__13417__auto__;
return goog.typeOf(G__21573);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._name["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12761__auto__ = x;
if(and__12761__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12761__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13417__auto__ = (((x == null))?null:x);
return (function (){var or__12773__auto__ = (cljs.core._namespace[(function (){var G__21577 = x__13417__auto__;
return goog.typeOf(G__21577);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._namespace["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj21579 = {};
return obj21579;
})();


cljs.core.IReset = (function (){var obj21581 = {};
return obj21581;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._reset_BANG_[(function (){var G__21585 = x__13417__auto__;
return goog.typeOf(G__21585);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj21587 = {};
return obj21587;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._swap_BANG_[(function (){var G__21597 = x__13417__auto__;
return goog.typeOf(G__21597);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._swap_BANG_[(function (){var G__21599 = x__13417__auto__;
return goog.typeOf(G__21599);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._swap_BANG_[(function (){var G__21601 = x__13417__auto__;
return goog.typeOf(G__21601);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._swap_BANG_[(function (){var G__21603 = x__13417__auto__;
return goog.typeOf(G__21603);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj21605 = {};
return obj21605;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12761__auto__ = o;
if(and__12761__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12761__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13417__auto__ = (((o == null))?null:o);
return (function (){var or__12773__auto__ = (cljs.core._vreset_BANG_[(function (){var G__21609 = x__13417__auto__;
return goog.typeOf(G__21609);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj21611 = {};
return obj21611;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12761__auto__ = coll;
if(and__12761__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12761__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13417__auto__ = (((coll == null))?null:coll);
return (function (){var or__12773__auto__ = (cljs.core._iterator[(function (){var G__21615 = x__13417__auto__;
return goog.typeOf(G__21615);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._iterator["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__21618 = (4294967295);
var G__21619 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21618,G__21619) : Math.imul.call(null,G__21618,G__21619));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__21622 = a;
var G__21623 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21622,G__21623) : Math.imul.call(null,G__21622,G__21623));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__21624 = (i + (2));
var G__21625 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__21624;
h1 = G__21625;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj21627 = {};
return obj21627;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__21628 = (i + (1));
var G__21629 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__21628;
hash = G__21629;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj21633 = {};
return obj21633;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__21636 = o;
if(G__21636){
var bit__13447__auto__ = (G__21636.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13447__auto__) || (G__21636.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__21637 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21637) : Math.floor.call(null,G__21637));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12761__auto__ = cljs.core.not(a.ns);
if(and__12761__auto__){
return b.ns;
} else {
return and__12761__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21644 = a.ns;
var G__21645 = b.ns;
return goog.array.defaultCompare(G__21644,G__21645);
})();
if(((0) === nsc)){
var G__21646 = a.name;
var G__21647 = b.name;
return goog.array.defaultCompare(G__21646,G__21647);
} else {
return nsc;
}
}
} else {
var G__21648 = a.name;
var G__21649 = b.name;
return goog.array.defaultCompare(G__21648,G__21649);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13194__auto__ = self__._hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__21651 = null;
var G__21651__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__21651__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__21651 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21651__2.call(this,self__,coll);
case 3:
return G__21651__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21651.cljs$core$IFn$_invoke$arity$2 = G__21651__2;
G__21651.cljs$core$IFn$_invoke$arity$3 = G__21651__3;
return G__21651;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args21650){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21650)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__21699 = null;
var G__21699__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__21699__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__21699__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__21699__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__21699__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__21699__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__21699__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__21699__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__21699__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__21699__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__21699__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__21699__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__21699__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__21699__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__21699__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__21699__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__21699__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__21699__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__21699__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__21699__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__21699__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__21699__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21655 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21656 = a;
var G__21657 = b;
var G__21658 = c;
var G__21659 = d;
var G__21660 = e;
var G__21661 = f;
var G__21662 = g;
var G__21663 = h;
var G__21664 = i;
var G__21665 = j;
var G__21666 = k;
var G__21667 = l;
var G__21668 = m;
var G__21669 = n;
var G__21670 = o;
var G__21671 = p;
var G__21672 = q;
var G__21673 = r;
var G__21674 = s;
var G__21675 = t;
var G__21676 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21655,G__21656,G__21657,G__21658,G__21659,G__21660,G__21661,G__21662,G__21663,G__21664,G__21665,G__21666,G__21667,G__21668,G__21669,G__21670,G__21671,G__21672,G__21673,G__21674,G__21675,G__21676) : cljs.core.apply.call(null,G__21655,G__21656,G__21657,G__21658,G__21659,G__21660,G__21661,G__21662,G__21663,G__21664,G__21665,G__21666,G__21667,G__21668,G__21669,G__21670,G__21671,G__21672,G__21673,G__21674,G__21675,G__21676));
});
G__21699 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21699__1.call(this,self__);
case 2:
return G__21699__2.call(this,self__,a);
case 3:
return G__21699__3.call(this,self__,a,b);
case 4:
return G__21699__4.call(this,self__,a,b,c);
case 5:
return G__21699__5.call(this,self__,a,b,c,d);
case 6:
return G__21699__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21699__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21699__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21699__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21699__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21699__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21699__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21699__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21699__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21699__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21699__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21699__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21699__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21699__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21699__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21699__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21699__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21699.cljs$core$IFn$_invoke$arity$1 = G__21699__1;
G__21699.cljs$core$IFn$_invoke$arity$2 = G__21699__2;
G__21699.cljs$core$IFn$_invoke$arity$3 = G__21699__3;
G__21699.cljs$core$IFn$_invoke$arity$4 = G__21699__4;
G__21699.cljs$core$IFn$_invoke$arity$5 = G__21699__5;
G__21699.cljs$core$IFn$_invoke$arity$6 = G__21699__6;
G__21699.cljs$core$IFn$_invoke$arity$7 = G__21699__7;
G__21699.cljs$core$IFn$_invoke$arity$8 = G__21699__8;
G__21699.cljs$core$IFn$_invoke$arity$9 = G__21699__9;
G__21699.cljs$core$IFn$_invoke$arity$10 = G__21699__10;
G__21699.cljs$core$IFn$_invoke$arity$11 = G__21699__11;
G__21699.cljs$core$IFn$_invoke$arity$12 = G__21699__12;
G__21699.cljs$core$IFn$_invoke$arity$13 = G__21699__13;
G__21699.cljs$core$IFn$_invoke$arity$14 = G__21699__14;
G__21699.cljs$core$IFn$_invoke$arity$15 = G__21699__15;
G__21699.cljs$core$IFn$_invoke$arity$16 = G__21699__16;
G__21699.cljs$core$IFn$_invoke$arity$17 = G__21699__17;
G__21699.cljs$core$IFn$_invoke$arity$18 = G__21699__18;
G__21699.cljs$core$IFn$_invoke$arity$19 = G__21699__19;
G__21699.cljs$core$IFn$_invoke$arity$20 = G__21699__20;
G__21699.cljs$core$IFn$_invoke$arity$21 = G__21699__21;
G__21699.cljs$core$IFn$_invoke$arity$22 = G__21699__22;
return G__21699;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args21654){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21654)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21677 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21678 = a;
var G__21679 = b;
var G__21680 = c;
var G__21681 = d;
var G__21682 = e;
var G__21683 = f;
var G__21684 = g;
var G__21685 = h;
var G__21686 = i;
var G__21687 = j;
var G__21688 = k;
var G__21689 = l;
var G__21690 = m;
var G__21691 = n;
var G__21692 = o;
var G__21693 = p;
var G__21694 = q;
var G__21695 = r;
var G__21696 = s;
var G__21697 = t;
var G__21698 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21677,G__21678,G__21679,G__21680,G__21681,G__21682,G__21683,G__21684,G__21685,G__21686,G__21687,G__21688,G__21689,G__21690,G__21691,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697,G__21698) : cljs.core.apply.call(null,G__21677,G__21678,G__21679,G__21680,G__21681,G__21682,G__21683,G__21684,G__21685,G__21686,G__21687,G__21688,G__21689,G__21690,G__21691,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697,G__21698));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__21701 = x;
if(G__21701){
var bit__13454__auto__ = null;
if(cljs.core.truth_((function (){var or__12773__auto__ = bit__13454__auto__;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return G__21701.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__21701.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21701);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21701);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__21703 = value;
if(G__21703){
var bit__13454__auto__ = (G__21703.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__13454__auto__) || (G__21703.cljs$core$ICloneable$)){
return true;
} else {
if((!G__21703.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21703);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21703);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21705 = coll;
if(G__21705){
var bit__13447__auto__ = (G__21705.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13447__auto__) || (G__21705.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21707 = coll;
if(G__21707){
var bit__13447__auto__ = (G__21707.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13447__auto__) || (G__21707.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__21709 = coll;
if(G__21709){
var bit__13447__auto__ = (G__21709.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13447__auto__) || (G__21709.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21711 = coll;
if(G__21711){
var bit__13447__auto__ = (G__21711.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13447__auto__) || (G__21711.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__21716__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21717 = y;
var G__21718 = cljs.core.first(more);
var G__21719 = cljs.core.next(more);
x = G__21717;
y = G__21718;
more = G__21719;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21716 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21720__i = 0, G__21720__a = new Array(arguments.length -  2);
while (G__21720__i < G__21720__a.length) {G__21720__a[G__21720__i] = arguments[G__21720__i + 2]; ++G__21720__i;}
  more = new cljs.core.IndexedSeq(G__21720__a,0);
} 
return G__21716__delegate.call(this,x,y,more);};
G__21716.cljs$lang$maxFixedArity = 2;
G__21716.cljs$lang$applyTo = (function (arglist__21721){
var x = cljs.core.first(arglist__21721);
arglist__21721 = cljs.core.next(arglist__21721);
var y = cljs.core.first(arglist__21721);
var more = cljs.core.rest(arglist__21721);
return G__21716__delegate(x,y,more);
});
G__21716.cljs$core$IFn$_invoke$arity$variadic = G__21716__delegate;
return G__21716;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__21722 = null;
if (arguments.length > 2) {
var G__21723__i = 0, G__21723__a = new Array(arguments.length -  2);
while (G__21723__i < G__21723__a.length) {G__21723__a[G__21723__i] = arguments[G__21723__i + 2]; ++G__21723__i;}
G__21722 = new cljs.core.IndexedSeq(G__21723__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__21724 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__21724) : cljs.core.es6_iterator_seq.call(null,G__21724));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21725 = (n + (1));
var G__21726 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21727 = cljs.core.next(coll__$1);
n = G__21725;
hash_code = G__21726;
coll__$1 = G__21727;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21728 = (n + (1));
var G__21729 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21730 = cljs.core.next(coll__$1);
n = G__21728;
hash_code = G__21729;
coll__$1 = G__21730;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__21731 = o;
return goog.getUid(G__21731);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__21733 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21733) : cljs.core.deref.call(null,G__21733));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21740 = val;
var G__21741 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21740,G__21741) : f.call(null,G__21740,G__21741));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21746 = nval;
var G__21747 = (n + (1));
val = G__21746;
n = G__21747;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21742 = val__$1;
var G__21743 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21742,G__21743) : f.call(null,G__21742,G__21743));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21748 = nval;
var G__21749 = (n + (1));
val__$1 = G__21748;
n = G__21749;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21744 = val__$1;
var G__21745 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21744,G__21745) : f.call(null,G__21744,G__21745));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21750 = nval;
var G__21751 = (n + (1));
val__$1 = G__21750;
n = G__21751;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21758 = val;
var G__21759 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21758,G__21759) : f.call(null,G__21758,G__21759));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21764 = nval;
var G__21765 = (n + (1));
val = G__21764;
n = G__21765;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21760 = val__$1;
var G__21761 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21760,G__21761) : f.call(null,G__21760,G__21761));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21766 = nval;
var G__21767 = (n + (1));
val__$1 = G__21766;
n = G__21767;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21762 = val__$1;
var G__21763 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21762,G__21763) : f.call(null,G__21762,G__21763));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21768 = nval;
var G__21769 = (n + (1));
val__$1 = G__21768;
n = G__21769;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__21771 = x;
if(G__21771){
var bit__13454__auto__ = (G__21771.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13454__auto__) || (G__21771.cljs$core$ICounted$)){
return true;
} else {
if((!G__21771.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21771);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21771);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__21773 = x;
if(G__21773){
var bit__13454__auto__ = (G__21773.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13454__auto__) || (G__21773.cljs$core$IIndexed$)){
return true;
} else {
if((!G__21773.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21773);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21773);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21774 = coll__$1;
var G__21775 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21774,G__21775) : cljs.core.equiv_sequential.call(null,G__21774,G__21775));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21776 = o;
var G__21777 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21776,G__21777) : cljs.core.cons.call(null,G__21776,G__21777));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21780 = coll__$1;
var G__21781 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21780,G__21781) : cljs.core.equiv_sequential.call(null,G__21780,G__21781));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21782 = cljs.core.List.EMPTY;
var G__21783 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__21782,G__21783) : cljs.core.with_meta.call(null,G__21782,G__21783));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__21784 = f;
var G__21785 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__21784,G__21785) : cljs.core.seq_reduce.call(null,G__21784,G__21785));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__21786 = f;
var G__21787 = start;
var G__21788 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__21786,G__21787,G__21788) : cljs.core.seq_reduce.call(null,G__21786,G__21787,G__21788));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21789 = o;
var G__21790 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21789,G__21790) : cljs.core.cons.call(null,G__21789,G__21790));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__21791 = sn;
s = G__21791;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__21796__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__21797 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__21798 = cljs.core.first(xs);
var G__21799 = cljs.core.next(xs);
coll = G__21797;
x = G__21798;
xs = G__21799;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__21796 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__21800__i = 0, G__21800__a = new Array(arguments.length -  2);
while (G__21800__i < G__21800__a.length) {G__21800__a[G__21800__i] = arguments[G__21800__i + 2]; ++G__21800__i;}
  xs = new cljs.core.IndexedSeq(G__21800__a,0);
} 
return G__21796__delegate.call(this,coll,x,xs);};
G__21796.cljs$lang$maxFixedArity = 2;
G__21796.cljs$lang$applyTo = (function (arglist__21801){
var coll = cljs.core.first(arglist__21801);
arglist__21801 = cljs.core.next(arglist__21801);
var x = cljs.core.first(arglist__21801);
var xs = cljs.core.rest(arglist__21801);
return G__21796__delegate(coll,x,xs);
});
G__21796.cljs$core$IFn$_invoke$arity$variadic = G__21796__delegate;
return G__21796;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__21802 = null;
if (arguments.length > 2) {
var G__21803__i = 0, G__21803__a = new Array(arguments.length -  2);
while (G__21803__i < G__21803__a.length) {G__21803__a[G__21803__i] = arguments[G__21803__i + 2]; ++G__21803__i;}
G__21802 = new cljs.core.IndexedSeq(G__21803__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__21802);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__21804 = cljs.core.next(s);
var G__21805 = (acc + (1));
s = G__21804;
acc = G__21805;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__21807 = coll;
if(G__21807){
var bit__13447__auto__ = (G__21807.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13447__auto__) || (G__21807.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__21808 = cljs.core.next(coll);
var G__21809 = (n - (1));
coll = G__21808;
n = G__21809;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__21810 = cljs.core.next(coll);
var G__21811 = (n - (1));
var G__21812 = not_found;
coll = G__21810;
n = G__21811;
not_found = G__21812;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__21817 = coll;
if(G__21817){
var bit__13447__auto__ = (G__21817.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13447__auto__) || (G__21817.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21818 = coll;
if(G__21818){
var bit__13454__auto__ = (G__21818.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13454__auto__) || (G__21818.cljs$core$ISeq$)){
return true;
} else {
if((!G__21818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21818);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__21819 = coll;
if(G__21819){
var bit__13447__auto__ = (G__21819.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13447__auto__) || (G__21819.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21820 = coll;
if(G__21820){
var bit__13454__auto__ = (G__21820.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13454__auto__) || (G__21820.cljs$core$ISeq$)){
return true;
} else {
if((!G__21820.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21820);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21820);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__21821 = (n__$1 - (1));
var G__21822 = cljs.core.rest(xs);
n__$1 = G__21821;
xs = G__21822;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__21825 = o;
if(G__21825){
var bit__13447__auto__ = (G__21825.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13447__auto__) || (G__21825.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__21826 = o;
if(G__21826){
var bit__13447__auto__ = (G__21826.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13447__auto__) || (G__21826.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__21830__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__21831 = ret;
var G__21832 = cljs.core.first(kvs);
var G__21833 = cljs.core.second(kvs);
var G__21834 = cljs.core.nnext(kvs);
coll = G__21831;
k = G__21832;
v = G__21833;
kvs = G__21834;
continue;
} else {
return ret;
}
break;
}
};
var G__21830 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21835__i = 0, G__21835__a = new Array(arguments.length -  3);
while (G__21835__i < G__21835__a.length) {G__21835__a[G__21835__i] = arguments[G__21835__i + 3]; ++G__21835__i;}
  kvs = new cljs.core.IndexedSeq(G__21835__a,0);
} 
return G__21830__delegate.call(this,coll,k,v,kvs);};
G__21830.cljs$lang$maxFixedArity = 3;
G__21830.cljs$lang$applyTo = (function (arglist__21836){
var coll = cljs.core.first(arglist__21836);
arglist__21836 = cljs.core.next(arglist__21836);
var k = cljs.core.first(arglist__21836);
arglist__21836 = cljs.core.next(arglist__21836);
var v = cljs.core.first(arglist__21836);
var kvs = cljs.core.rest(arglist__21836);
return G__21830__delegate(coll,k,v,kvs);
});
G__21830.cljs$core$IFn$_invoke$arity$variadic = G__21830__delegate;
return G__21830;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__21837 = null;
if (arguments.length > 3) {
var G__21838__i = 0, G__21838__a = new Array(arguments.length -  3);
while (G__21838__i < G__21838__a.length) {G__21838__a[G__21838__i] = arguments[G__21838__i + 3]; ++G__21838__i;}
G__21837 = new cljs.core.IndexedSeq(G__21838__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__21837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__21841__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21842 = ret;
var G__21843 = cljs.core.first(ks);
var G__21844 = cljs.core.next(ks);
coll = G__21842;
k = G__21843;
ks = G__21844;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21841 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21845__i = 0, G__21845__a = new Array(arguments.length -  2);
while (G__21845__i < G__21845__a.length) {G__21845__a[G__21845__i] = arguments[G__21845__i + 2]; ++G__21845__i;}
  ks = new cljs.core.IndexedSeq(G__21845__a,0);
} 
return G__21841__delegate.call(this,coll,k,ks);};
G__21841.cljs$lang$maxFixedArity = 2;
G__21841.cljs$lang$applyTo = (function (arglist__21846){
var coll = cljs.core.first(arglist__21846);
arglist__21846 = cljs.core.next(arglist__21846);
var k = cljs.core.first(arglist__21846);
var ks = cljs.core.rest(arglist__21846);
return G__21841__delegate(coll,k,ks);
});
G__21841.cljs$core$IFn$_invoke$arity$variadic = G__21841__delegate;
return G__21841;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__21847 = null;
if (arguments.length > 2) {
var G__21848__i = 0, G__21848__a = new Array(arguments.length -  2);
while (G__21848__i < G__21848__a.length) {G__21848__a[G__21848__i] = arguments[G__21848__i + 2]; ++G__21848__i;}
G__21847 = new cljs.core.IndexedSeq(G__21848__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21847);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12773__auto__ = (function (){var G__21853 = f;
return goog.isFunction(G__21853);
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var G__21854 = f;
if(G__21854){
var bit__13454__auto__ = null;
if(cljs.core.truth_((function (){var or__12773__auto____$1 = bit__13454__auto__;
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
return G__21854.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__21854.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21854);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21854);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__22320 = null;
var G__22320__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__22320__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21856 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21856) : self__.afn.call(null,G__21856));
});
var G__22320__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21857 = a;
var G__21858 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21857,G__21858) : self__.afn.call(null,G__21857,G__21858));
});
var G__22320__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21859 = a;
var G__21860 = b;
var G__21861 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21859,G__21860,G__21861) : self__.afn.call(null,G__21859,G__21860,G__21861));
});
var G__22320__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21862 = a;
var G__21863 = b;
var G__21864 = c;
var G__21865 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21862,G__21863,G__21864,G__21865) : self__.afn.call(null,G__21862,G__21863,G__21864,G__21865));
});
var G__22320__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21866 = a;
var G__21867 = b;
var G__21868 = c;
var G__21869 = d;
var G__21870 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21866,G__21867,G__21868,G__21869,G__21870) : self__.afn.call(null,G__21866,G__21867,G__21868,G__21869,G__21870));
});
var G__22320__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21871 = a;
var G__21872 = b;
var G__21873 = c;
var G__21874 = d;
var G__21875 = e;
var G__21876 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21871,G__21872,G__21873,G__21874,G__21875,G__21876) : self__.afn.call(null,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876));
});
var G__22320__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21877 = a;
var G__21878 = b;
var G__21879 = c;
var G__21880 = d;
var G__21881 = e;
var G__21882 = f;
var G__21883 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21877,G__21878,G__21879,G__21880,G__21881,G__21882,G__21883) : self__.afn.call(null,G__21877,G__21878,G__21879,G__21880,G__21881,G__21882,G__21883));
});
var G__22320__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21884 = a;
var G__21885 = b;
var G__21886 = c;
var G__21887 = d;
var G__21888 = e;
var G__21889 = f;
var G__21890 = g;
var G__21891 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891) : self__.afn.call(null,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891));
});
var G__22320__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21892 = a;
var G__21893 = b;
var G__21894 = c;
var G__21895 = d;
var G__21896 = e;
var G__21897 = f;
var G__21898 = g;
var G__21899 = h;
var G__21900 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899,G__21900) : self__.afn.call(null,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899,G__21900));
});
var G__22320__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21901 = a;
var G__21902 = b;
var G__21903 = c;
var G__21904 = d;
var G__21905 = e;
var G__21906 = f;
var G__21907 = g;
var G__21908 = h;
var G__21909 = i;
var G__21910 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907,G__21908,G__21909,G__21910) : self__.afn.call(null,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907,G__21908,G__21909,G__21910));
});
var G__22320__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21911 = a;
var G__21912 = b;
var G__21913 = c;
var G__21914 = d;
var G__21915 = e;
var G__21916 = f;
var G__21917 = g;
var G__21918 = h;
var G__21919 = i;
var G__21920 = j;
var G__21921 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917,G__21918,G__21919,G__21920,G__21921) : self__.afn.call(null,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917,G__21918,G__21919,G__21920,G__21921));
});
var G__22320__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21922 = a;
var G__21923 = b;
var G__21924 = c;
var G__21925 = d;
var G__21926 = e;
var G__21927 = f;
var G__21928 = g;
var G__21929 = h;
var G__21930 = i;
var G__21931 = j;
var G__21932 = k;
var G__21933 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933) : self__.afn.call(null,G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933));
});
var G__22320__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21934 = a;
var G__21935 = b;
var G__21936 = c;
var G__21937 = d;
var G__21938 = e;
var G__21939 = f;
var G__21940 = g;
var G__21941 = h;
var G__21942 = i;
var G__21943 = j;
var G__21944 = k;
var G__21945 = l;
var G__21946 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21934,G__21935,G__21936,G__21937,G__21938,G__21939,G__21940,G__21941,G__21942,G__21943,G__21944,G__21945,G__21946) : self__.afn.call(null,G__21934,G__21935,G__21936,G__21937,G__21938,G__21939,G__21940,G__21941,G__21942,G__21943,G__21944,G__21945,G__21946));
});
var G__22320__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21947 = a;
var G__21948 = b;
var G__21949 = c;
var G__21950 = d;
var G__21951 = e;
var G__21952 = f;
var G__21953 = g;
var G__21954 = h;
var G__21955 = i;
var G__21956 = j;
var G__21957 = k;
var G__21958 = l;
var G__21959 = m;
var G__21960 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21947,G__21948,G__21949,G__21950,G__21951,G__21952,G__21953,G__21954,G__21955,G__21956,G__21957,G__21958,G__21959,G__21960) : self__.afn.call(null,G__21947,G__21948,G__21949,G__21950,G__21951,G__21952,G__21953,G__21954,G__21955,G__21956,G__21957,G__21958,G__21959,G__21960));
});
var G__22320__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21961 = a;
var G__21962 = b;
var G__21963 = c;
var G__21964 = d;
var G__21965 = e;
var G__21966 = f;
var G__21967 = g;
var G__21968 = h;
var G__21969 = i;
var G__21970 = j;
var G__21971 = k;
var G__21972 = l;
var G__21973 = m;
var G__21974 = n;
var G__21975 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21961,G__21962,G__21963,G__21964,G__21965,G__21966,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972,G__21973,G__21974,G__21975) : self__.afn.call(null,G__21961,G__21962,G__21963,G__21964,G__21965,G__21966,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972,G__21973,G__21974,G__21975));
});
var G__22320__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21976 = a;
var G__21977 = b;
var G__21978 = c;
var G__21979 = d;
var G__21980 = e;
var G__21981 = f;
var G__21982 = g;
var G__21983 = h;
var G__21984 = i;
var G__21985 = j;
var G__21986 = k;
var G__21987 = l;
var G__21988 = m;
var G__21989 = n;
var G__21990 = o;
var G__21991 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21976,G__21977,G__21978,G__21979,G__21980,G__21981,G__21982,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990,G__21991) : self__.afn.call(null,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981,G__21982,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990,G__21991));
});
var G__22320__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21992 = a;
var G__21993 = b;
var G__21994 = c;
var G__21995 = d;
var G__21996 = e;
var G__21997 = f;
var G__21998 = g;
var G__21999 = h;
var G__22000 = i;
var G__22001 = j;
var G__22002 = k;
var G__22003 = l;
var G__22004 = m;
var G__22005 = n;
var G__22006 = o;
var G__22007 = p;
var G__22008 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21992,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007,G__22008) : self__.afn.call(null,G__21992,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007,G__22008));
});
var G__22320__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22009 = a;
var G__22010 = b;
var G__22011 = c;
var G__22012 = d;
var G__22013 = e;
var G__22014 = f;
var G__22015 = g;
var G__22016 = h;
var G__22017 = i;
var G__22018 = j;
var G__22019 = k;
var G__22020 = l;
var G__22021 = m;
var G__22022 = n;
var G__22023 = o;
var G__22024 = p;
var G__22025 = q;
var G__22026 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__22009,G__22010,G__22011,G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026) : self__.afn.call(null,G__22009,G__22010,G__22011,G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026));
});
var G__22320__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22027 = a;
var G__22028 = b;
var G__22029 = c;
var G__22030 = d;
var G__22031 = e;
var G__22032 = f;
var G__22033 = g;
var G__22034 = h;
var G__22035 = i;
var G__22036 = j;
var G__22037 = k;
var G__22038 = l;
var G__22039 = m;
var G__22040 = n;
var G__22041 = o;
var G__22042 = p;
var G__22043 = q;
var G__22044 = r;
var G__22045 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__22027,G__22028,G__22029,G__22030,G__22031,G__22032,G__22033,G__22034,G__22035,G__22036,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042,G__22043,G__22044,G__22045) : self__.afn.call(null,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032,G__22033,G__22034,G__22035,G__22036,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042,G__22043,G__22044,G__22045));
});
var G__22320__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22046 = a;
var G__22047 = b;
var G__22048 = c;
var G__22049 = d;
var G__22050 = e;
var G__22051 = f;
var G__22052 = g;
var G__22053 = h;
var G__22054 = i;
var G__22055 = j;
var G__22056 = k;
var G__22057 = l;
var G__22058 = m;
var G__22059 = n;
var G__22060 = o;
var G__22061 = p;
var G__22062 = q;
var G__22063 = r;
var G__22064 = s;
var G__22065 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__22046,G__22047,G__22048,G__22049,G__22050,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057,G__22058,G__22059,G__22060,G__22061,G__22062,G__22063,G__22064,G__22065) : self__.afn.call(null,G__22046,G__22047,G__22048,G__22049,G__22050,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057,G__22058,G__22059,G__22060,G__22061,G__22062,G__22063,G__22064,G__22065));
});
var G__22320__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22066 = self__.afn;
var G__22067 = a;
var G__22068 = b;
var G__22069 = c;
var G__22070 = d;
var G__22071 = e;
var G__22072 = f;
var G__22073 = g;
var G__22074 = h;
var G__22075 = i;
var G__22076 = j;
var G__22077 = k;
var G__22078 = l;
var G__22079 = m;
var G__22080 = n;
var G__22081 = o;
var G__22082 = p;
var G__22083 = q;
var G__22084 = r;
var G__22085 = s;
var G__22086 = t;
var G__22087 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073,G__22074,G__22075,G__22076,G__22077,G__22078,G__22079,G__22080,G__22081,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087) : cljs.core.apply.call(null,G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073,G__22074,G__22075,G__22076,G__22077,G__22078,G__22079,G__22080,G__22081,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087));
});
G__22320 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__22320__1.call(this,self__);
case 2:
return G__22320__2.call(this,self__,a);
case 3:
return G__22320__3.call(this,self__,a,b);
case 4:
return G__22320__4.call(this,self__,a,b,c);
case 5:
return G__22320__5.call(this,self__,a,b,c,d);
case 6:
return G__22320__6.call(this,self__,a,b,c,d,e);
case 7:
return G__22320__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__22320__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__22320__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__22320__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__22320__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__22320__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__22320__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__22320__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__22320__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__22320__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__22320__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__22320__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__22320__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__22320__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__22320__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__22320__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22320.cljs$core$IFn$_invoke$arity$1 = G__22320__1;
G__22320.cljs$core$IFn$_invoke$arity$2 = G__22320__2;
G__22320.cljs$core$IFn$_invoke$arity$3 = G__22320__3;
G__22320.cljs$core$IFn$_invoke$arity$4 = G__22320__4;
G__22320.cljs$core$IFn$_invoke$arity$5 = G__22320__5;
G__22320.cljs$core$IFn$_invoke$arity$6 = G__22320__6;
G__22320.cljs$core$IFn$_invoke$arity$7 = G__22320__7;
G__22320.cljs$core$IFn$_invoke$arity$8 = G__22320__8;
G__22320.cljs$core$IFn$_invoke$arity$9 = G__22320__9;
G__22320.cljs$core$IFn$_invoke$arity$10 = G__22320__10;
G__22320.cljs$core$IFn$_invoke$arity$11 = G__22320__11;
G__22320.cljs$core$IFn$_invoke$arity$12 = G__22320__12;
G__22320.cljs$core$IFn$_invoke$arity$13 = G__22320__13;
G__22320.cljs$core$IFn$_invoke$arity$14 = G__22320__14;
G__22320.cljs$core$IFn$_invoke$arity$15 = G__22320__15;
G__22320.cljs$core$IFn$_invoke$arity$16 = G__22320__16;
G__22320.cljs$core$IFn$_invoke$arity$17 = G__22320__17;
G__22320.cljs$core$IFn$_invoke$arity$18 = G__22320__18;
G__22320.cljs$core$IFn$_invoke$arity$19 = G__22320__19;
G__22320.cljs$core$IFn$_invoke$arity$20 = G__22320__20;
G__22320.cljs$core$IFn$_invoke$arity$21 = G__22320__21;
G__22320.cljs$core$IFn$_invoke$arity$22 = G__22320__22;
return G__22320;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args21855){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21855)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__22088 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__22088) : self__.afn.call(null,G__22088));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__22089 = a;
var G__22090 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__22089,G__22090) : self__.afn.call(null,G__22089,G__22090));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__22091 = a;
var G__22092 = b;
var G__22093 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__22091,G__22092,G__22093) : self__.afn.call(null,G__22091,G__22092,G__22093));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__22094 = a;
var G__22095 = b;
var G__22096 = c;
var G__22097 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__22094,G__22095,G__22096,G__22097) : self__.afn.call(null,G__22094,G__22095,G__22096,G__22097));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__22098 = a;
var G__22099 = b;
var G__22100 = c;
var G__22101 = d;
var G__22102 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__22098,G__22099,G__22100,G__22101,G__22102) : self__.afn.call(null,G__22098,G__22099,G__22100,G__22101,G__22102));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__22103 = a;
var G__22104 = b;
var G__22105 = c;
var G__22106 = d;
var G__22107 = e;
var G__22108 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__22103,G__22104,G__22105,G__22106,G__22107,G__22108) : self__.afn.call(null,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__22109 = a;
var G__22110 = b;
var G__22111 = c;
var G__22112 = d;
var G__22113 = e;
var G__22114 = f;
var G__22115 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__22109,G__22110,G__22111,G__22112,G__22113,G__22114,G__22115) : self__.afn.call(null,G__22109,G__22110,G__22111,G__22112,G__22113,G__22114,G__22115));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__22116 = a;
var G__22117 = b;
var G__22118 = c;
var G__22119 = d;
var G__22120 = e;
var G__22121 = f;
var G__22122 = g;
var G__22123 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__22116,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123) : self__.afn.call(null,G__22116,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__22124 = a;
var G__22125 = b;
var G__22126 = c;
var G__22127 = d;
var G__22128 = e;
var G__22129 = f;
var G__22130 = g;
var G__22131 = h;
var G__22132 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__22124,G__22125,G__22126,G__22127,G__22128,G__22129,G__22130,G__22131,G__22132) : self__.afn.call(null,G__22124,G__22125,G__22126,G__22127,G__22128,G__22129,G__22130,G__22131,G__22132));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__22133 = a;
var G__22134 = b;
var G__22135 = c;
var G__22136 = d;
var G__22137 = e;
var G__22138 = f;
var G__22139 = g;
var G__22140 = h;
var G__22141 = i;
var G__22142 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__22133,G__22134,G__22135,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142) : self__.afn.call(null,G__22133,G__22134,G__22135,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__22143 = a;
var G__22144 = b;
var G__22145 = c;
var G__22146 = d;
var G__22147 = e;
var G__22148 = f;
var G__22149 = g;
var G__22150 = h;
var G__22151 = i;
var G__22152 = j;
var G__22153 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__22143,G__22144,G__22145,G__22146,G__22147,G__22148,G__22149,G__22150,G__22151,G__22152,G__22153) : self__.afn.call(null,G__22143,G__22144,G__22145,G__22146,G__22147,G__22148,G__22149,G__22150,G__22151,G__22152,G__22153));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__22154 = a;
var G__22155 = b;
var G__22156 = c;
var G__22157 = d;
var G__22158 = e;
var G__22159 = f;
var G__22160 = g;
var G__22161 = h;
var G__22162 = i;
var G__22163 = j;
var G__22164 = k;
var G__22165 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__22154,G__22155,G__22156,G__22157,G__22158,G__22159,G__22160,G__22161,G__22162,G__22163,G__22164,G__22165) : self__.afn.call(null,G__22154,G__22155,G__22156,G__22157,G__22158,G__22159,G__22160,G__22161,G__22162,G__22163,G__22164,G__22165));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__22166 = a;
var G__22167 = b;
var G__22168 = c;
var G__22169 = d;
var G__22170 = e;
var G__22171 = f;
var G__22172 = g;
var G__22173 = h;
var G__22174 = i;
var G__22175 = j;
var G__22176 = k;
var G__22177 = l;
var G__22178 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__22166,G__22167,G__22168,G__22169,G__22170,G__22171,G__22172,G__22173,G__22174,G__22175,G__22176,G__22177,G__22178) : self__.afn.call(null,G__22166,G__22167,G__22168,G__22169,G__22170,G__22171,G__22172,G__22173,G__22174,G__22175,G__22176,G__22177,G__22178));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__22179 = a;
var G__22180 = b;
var G__22181 = c;
var G__22182 = d;
var G__22183 = e;
var G__22184 = f;
var G__22185 = g;
var G__22186 = h;
var G__22187 = i;
var G__22188 = j;
var G__22189 = k;
var G__22190 = l;
var G__22191 = m;
var G__22192 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__22179,G__22180,G__22181,G__22182,G__22183,G__22184,G__22185,G__22186,G__22187,G__22188,G__22189,G__22190,G__22191,G__22192) : self__.afn.call(null,G__22179,G__22180,G__22181,G__22182,G__22183,G__22184,G__22185,G__22186,G__22187,G__22188,G__22189,G__22190,G__22191,G__22192));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__22193 = a;
var G__22194 = b;
var G__22195 = c;
var G__22196 = d;
var G__22197 = e;
var G__22198 = f;
var G__22199 = g;
var G__22200 = h;
var G__22201 = i;
var G__22202 = j;
var G__22203 = k;
var G__22204 = l;
var G__22205 = m;
var G__22206 = n;
var G__22207 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__22193,G__22194,G__22195,G__22196,G__22197,G__22198,G__22199,G__22200,G__22201,G__22202,G__22203,G__22204,G__22205,G__22206,G__22207) : self__.afn.call(null,G__22193,G__22194,G__22195,G__22196,G__22197,G__22198,G__22199,G__22200,G__22201,G__22202,G__22203,G__22204,G__22205,G__22206,G__22207));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__22208 = a;
var G__22209 = b;
var G__22210 = c;
var G__22211 = d;
var G__22212 = e;
var G__22213 = f;
var G__22214 = g;
var G__22215 = h;
var G__22216 = i;
var G__22217 = j;
var G__22218 = k;
var G__22219 = l;
var G__22220 = m;
var G__22221 = n;
var G__22222 = o;
var G__22223 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__22208,G__22209,G__22210,G__22211,G__22212,G__22213,G__22214,G__22215,G__22216,G__22217,G__22218,G__22219,G__22220,G__22221,G__22222,G__22223) : self__.afn.call(null,G__22208,G__22209,G__22210,G__22211,G__22212,G__22213,G__22214,G__22215,G__22216,G__22217,G__22218,G__22219,G__22220,G__22221,G__22222,G__22223));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__22224 = a;
var G__22225 = b;
var G__22226 = c;
var G__22227 = d;
var G__22228 = e;
var G__22229 = f;
var G__22230 = g;
var G__22231 = h;
var G__22232 = i;
var G__22233 = j;
var G__22234 = k;
var G__22235 = l;
var G__22236 = m;
var G__22237 = n;
var G__22238 = o;
var G__22239 = p;
var G__22240 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__22224,G__22225,G__22226,G__22227,G__22228,G__22229,G__22230,G__22231,G__22232,G__22233,G__22234,G__22235,G__22236,G__22237,G__22238,G__22239,G__22240) : self__.afn.call(null,G__22224,G__22225,G__22226,G__22227,G__22228,G__22229,G__22230,G__22231,G__22232,G__22233,G__22234,G__22235,G__22236,G__22237,G__22238,G__22239,G__22240));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__22241 = a;
var G__22242 = b;
var G__22243 = c;
var G__22244 = d;
var G__22245 = e;
var G__22246 = f;
var G__22247 = g;
var G__22248 = h;
var G__22249 = i;
var G__22250 = j;
var G__22251 = k;
var G__22252 = l;
var G__22253 = m;
var G__22254 = n;
var G__22255 = o;
var G__22256 = p;
var G__22257 = q;
var G__22258 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__22241,G__22242,G__22243,G__22244,G__22245,G__22246,G__22247,G__22248,G__22249,G__22250,G__22251,G__22252,G__22253,G__22254,G__22255,G__22256,G__22257,G__22258) : self__.afn.call(null,G__22241,G__22242,G__22243,G__22244,G__22245,G__22246,G__22247,G__22248,G__22249,G__22250,G__22251,G__22252,G__22253,G__22254,G__22255,G__22256,G__22257,G__22258));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__22259 = a;
var G__22260 = b;
var G__22261 = c;
var G__22262 = d;
var G__22263 = e;
var G__22264 = f;
var G__22265 = g;
var G__22266 = h;
var G__22267 = i;
var G__22268 = j;
var G__22269 = k;
var G__22270 = l;
var G__22271 = m;
var G__22272 = n;
var G__22273 = o;
var G__22274 = p;
var G__22275 = q;
var G__22276 = r;
var G__22277 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__22259,G__22260,G__22261,G__22262,G__22263,G__22264,G__22265,G__22266,G__22267,G__22268,G__22269,G__22270,G__22271,G__22272,G__22273,G__22274,G__22275,G__22276,G__22277) : self__.afn.call(null,G__22259,G__22260,G__22261,G__22262,G__22263,G__22264,G__22265,G__22266,G__22267,G__22268,G__22269,G__22270,G__22271,G__22272,G__22273,G__22274,G__22275,G__22276,G__22277));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__22278 = a;
var G__22279 = b;
var G__22280 = c;
var G__22281 = d;
var G__22282 = e;
var G__22283 = f;
var G__22284 = g;
var G__22285 = h;
var G__22286 = i;
var G__22287 = j;
var G__22288 = k;
var G__22289 = l;
var G__22290 = m;
var G__22291 = n;
var G__22292 = o;
var G__22293 = p;
var G__22294 = q;
var G__22295 = r;
var G__22296 = s;
var G__22297 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__22278,G__22279,G__22280,G__22281,G__22282,G__22283,G__22284,G__22285,G__22286,G__22287,G__22288,G__22289,G__22290,G__22291,G__22292,G__22293,G__22294,G__22295,G__22296,G__22297) : self__.afn.call(null,G__22278,G__22279,G__22280,G__22281,G__22282,G__22283,G__22284,G__22285,G__22286,G__22287,G__22288,G__22289,G__22290,G__22291,G__22292,G__22293,G__22294,G__22295,G__22296,G__22297));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__22298 = self__.afn;
var G__22299 = a;
var G__22300 = b;
var G__22301 = c;
var G__22302 = d;
var G__22303 = e;
var G__22304 = f;
var G__22305 = g;
var G__22306 = h;
var G__22307 = i;
var G__22308 = j;
var G__22309 = k;
var G__22310 = l;
var G__22311 = m;
var G__22312 = n;
var G__22313 = o;
var G__22314 = p;
var G__22315 = q;
var G__22316 = r;
var G__22317 = s;
var G__22318 = t;
var G__22319 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22298,G__22299,G__22300,G__22301,G__22302,G__22303,G__22304,G__22305,G__22306,G__22307,G__22308,G__22309,G__22310,G__22311,G__22312,G__22313,G__22314,G__22315,G__22316,G__22317,G__22318,G__22319) : cljs.core.apply.call(null,G__22298,G__22299,G__22300,G__22301,G__22302,G__22303,G__22304,G__22305,G__22306,G__22307,G__22308,G__22309,G__22310,G__22311,G__22312,G__22313,G__22314,G__22315,G__22316,G__22317,G__22318,G__22319));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__22324 = o;
if(G__22324){
var bit__13454__auto__ = (G__22324.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__13454__auto__) || (G__22324.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__22324.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__22324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__22324);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12761__auto__ = !((o == null));
if(and__12761__auto__){
var G__22328 = o;
if(G__22328){
var bit__13454__auto__ = (G__22328.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13454__auto__) || (G__22328.cljs$core$IMeta$)){
return true;
} else {
if((!G__22328.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22328);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22328);
}
} else {
return and__12761__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__22331__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__22332 = ret;
var G__22333 = cljs.core.first(ks);
var G__22334 = cljs.core.next(ks);
coll = G__22332;
k = G__22333;
ks = G__22334;
continue;
} else {
return ret;
}
}
break;
}
};
var G__22331 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22335__i = 0, G__22335__a = new Array(arguments.length -  2);
while (G__22335__i < G__22335__a.length) {G__22335__a[G__22335__i] = arguments[G__22335__i + 2]; ++G__22335__i;}
  ks = new cljs.core.IndexedSeq(G__22335__a,0);
} 
return G__22331__delegate.call(this,coll,k,ks);};
G__22331.cljs$lang$maxFixedArity = 2;
G__22331.cljs$lang$applyTo = (function (arglist__22336){
var coll = cljs.core.first(arglist__22336);
arglist__22336 = cljs.core.next(arglist__22336);
var k = cljs.core.first(arglist__22336);
var ks = cljs.core.rest(arglist__22336);
return G__22331__delegate(coll,k,ks);
});
G__22331.cljs$core$IFn$_invoke$arity$variadic = G__22331__delegate;
return G__22331;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__22337 = null;
if (arguments.length > 2) {
var G__22338__i = 0, G__22338__a = new Array(arguments.length -  2);
while (G__22338__i < G__22338__a.length) {G__22338__a[G__22338__i] = arguments[G__22338__i + 2]; ++G__22338__i;}
G__22337 = new cljs.core.IndexedSeq(G__22338__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__22337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22340 = x;
if(G__22340){
var bit__13454__auto__ = (G__22340.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__13454__auto__) || (G__22340.cljs$core$ICollection$)){
return true;
} else {
if((!G__22340.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__22340);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__22340);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22342 = x;
if(G__22342){
var bit__13454__auto__ = (G__22342.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__13454__auto__) || (G__22342.cljs$core$ISet$)){
return true;
} else {
if((!G__22342.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__22342);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__22342);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__22344 = x;
if(G__22344){
var bit__13454__auto__ = (G__22344.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__13454__auto__) || (G__22344.cljs$core$IAssociative$)){
return true;
} else {
if((!G__22344.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__22344);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__22344);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__22346 = x;
if(G__22346){
var bit__13454__auto__ = (G__22346.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__13454__auto__) || (G__22346.cljs$core$ISequential$)){
return true;
} else {
if((!G__22346.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__22346);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__22346);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__22348 = x;
if(G__22348){
var bit__13454__auto__ = (G__22348.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__13454__auto__) || (G__22348.cljs$core$ISorted$)){
return true;
} else {
if((!G__22348.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__22348);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__22348);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__22350 = x;
if(G__22350){
var bit__13454__auto__ = (G__22350.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13454__auto__) || (G__22350.cljs$core$IReduce$)){
return true;
} else {
if((!G__22350.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__22350);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__22350);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22352 = x;
if(G__22352){
var bit__13454__auto__ = (G__22352.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13454__auto__) || (G__22352.cljs$core$IMap$)){
return true;
} else {
if((!G__22352.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__22352);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__22352);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__22354 = x;
if(G__22354){
var bit__13454__auto__ = (G__22354.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__13454__auto__) || (G__22354.cljs$core$IVector$)){
return true;
} else {
if((!G__22354.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__22354);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__22354);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__22356 = x;
if(G__22356){
var bit__13447__auto__ = (G__22356.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13447__auto__) || (G__22356.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj22362 = {};
return obj22362;
});
var js_obj__1 = (function() { 
var G__22365__delegate = function (keyvals){
var G__22363 = goog.object.create;
var G__22364 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__22363,G__22364) : cljs.core.apply.call(null,G__22363,G__22364));
};
var G__22365 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22366__i = 0, G__22366__a = new Array(arguments.length -  0);
while (G__22366__i < G__22366__a.length) {G__22366__a[G__22366__i] = arguments[G__22366__i + 0]; ++G__22366__i;}
  keyvals = new cljs.core.IndexedSeq(G__22366__a,0);
} 
return G__22365__delegate.call(this,keyvals);};
G__22365.cljs$lang$maxFixedArity = 0;
G__22365.cljs$lang$applyTo = (function (arglist__22367){
var keyvals = cljs.core.seq(arglist__22367);
return G__22365__delegate(keyvals);
});
G__22365.cljs$core$IFn$_invoke$arity$variadic = G__22365__delegate;
return G__22365;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__22368 = null;
if (arguments.length > 0) {
var G__22369__i = 0, G__22369__a = new Array(arguments.length -  0);
while (G__22369__i < G__22369__a.length) {G__22369__a[G__22369__i] = arguments[G__22369__i + 0]; ++G__22369__i;}
G__22368 = new cljs.core.IndexedSeq(G__22369__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__22368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__22372_22374 = obj;
var G__22373_22375 = ((function (G__22372_22374,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__22372_22374,keys))
;
goog.object.forEach(G__22372_22374,G__22373_22375);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22376 = (i__$1 + (1));
var G__22377 = (j__$1 + (1));
var G__22378 = (len__$1 - (1));
i__$1 = G__22376;
j__$1 = G__22377;
len__$1 = G__22378;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22379 = (i__$1 - (1));
var G__22380 = (j__$1 - (1));
var G__22381 = (len__$1 - (1));
i__$1 = G__22379;
j__$1 = G__22380;
len__$1 = G__22381;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj22383 = {};
return obj22383;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__22385 = s;
if(G__22385){
var bit__13454__auto__ = (G__22385.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13454__auto__) || (G__22385.cljs$core$ISeq$)){
return true;
} else {
if((!G__22385.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22385);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22385);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__22387 = s;
if(G__22387){
var bit__13454__auto__ = (G__22387.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13454__auto__) || (G__22387.cljs$core$ISeqable$)){
return true;
} else {
if((!G__22387.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22387);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22387);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12773__auto__ = cljs.core.fn_QMARK_(f);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var G__22391 = f;
if(G__22391){
var bit__13454__auto__ = (G__22391.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__13454__auto__) || (G__22391.cljs$core$IFn$)){
return true;
} else {
if((!G__22391.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22391);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22391);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__22404 = n;
return isNaN(G__22404);
})())) && (!((n === Infinity))) && (((function (){var G__22405 = n;
return parseFloat(G__22405);
})() === (function (){var G__22406 = n;
var G__22407 = (10);
return parseInt(G__22406,G__22407);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__22408__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__22409 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__22410 = etc;
s = G__22409;
xs = G__22410;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__22408 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22411__i = 0, G__22411__a = new Array(arguments.length -  2);
while (G__22411__i < G__22411__a.length) {G__22411__a[G__22411__i] = arguments[G__22411__i + 2]; ++G__22411__i;}
  more = new cljs.core.IndexedSeq(G__22411__a,0);
} 
return G__22408__delegate.call(this,x,y,more);};
G__22408.cljs$lang$maxFixedArity = 2;
G__22408.cljs$lang$applyTo = (function (arglist__22412){
var x = cljs.core.first(arglist__22412);
arglist__22412 = cljs.core.next(arglist__22412);
var y = cljs.core.first(arglist__22412);
var more = cljs.core.rest(arglist__22412);
return G__22408__delegate(x,y,more);
});
G__22408.cljs$core$IFn$_invoke$arity$variadic = G__22408__delegate;
return G__22408;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__22413 = null;
if (arguments.length > 2) {
var G__22414__i = 0, G__22414__a = new Array(arguments.length -  2);
while (G__22414__i < G__22414__a.length) {G__22414__a[G__22414__i] = arguments[G__22414__i + 2]; ++G__22414__i;}
G__22413 = new cljs.core.IndexedSeq(G__22414__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__22418 = x;
if(G__22418){
var bit__13447__auto__ = (G__22418.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13447__auto__) || (G__22418.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__22419 = x;
var G__22420 = y;
return goog.array.defaultCompare(G__22419,G__22420);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__22425 = xs;
var G__22426 = ys;
var G__22427 = len;
var G__22428 = (n + (1));
xs = G__22425;
ys = G__22426;
len = G__22427;
n = G__22428;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__22433 = x;
var G__22434 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22433,G__22434) : f.call(null,G__22433,G__22434));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__22435 = y;
var G__22436 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22435,G__22436) : f.call(null,G__22435,G__22436));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__22442 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22442) : cljs.core.to_array.call(null,G__22442));
})();
var G__22443_22445 = a;
var G__22444_22446 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__22443_22445,G__22444_22446);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__22452 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22452) : keyfn.call(null,G__22452));
})(),(function (){var G__22453 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22453) : keyfn.call(null,G__22453));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__22459 = f;
var G__22460 = cljs.core.first(s);
var G__22461 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22459,G__22460,G__22461) : cljs.core.reduce.call(null,G__22459,G__22460,G__22461));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__22462 = val__$1;
var G__22463 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22462,G__22463) : f.call(null,G__22462,G__22463));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22464 = nval;
var G__22465 = cljs.core.next(coll__$1);
val__$1 = G__22464;
coll__$1 = G__22465;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__22469 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22469) : cljs.core.to_array.call(null,G__22469));
})();
var G__22470_22472 = a;
goog.array.shuffle(G__22470_22472);

var G__22471 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__22471) : cljs.core.vec.call(null,G__22471));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__22475 = coll;
if(G__22475){
var bit__13447__auto__ = (G__22475.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13447__auto__) || (G__22475.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__22476 = coll;
if(G__22476){
var bit__13447__auto__ = (G__22476.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13447__auto__) || (G__22476.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__22485 = null;
var G__22485__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__22485__1 = (function (x){
var G__22482 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__22482) : cf.call(null,G__22482));
});
var G__22485__2 = (function (x,y){
var G__22483 = x;
var G__22484 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22483,G__22484) : f.call(null,G__22483,G__22484));
});
G__22485 = function(x,y){
switch(arguments.length){
case 0:
return G__22485__0.call(this);
case 1:
return G__22485__1.call(this,x);
case 2:
return G__22485__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22485.cljs$core$IFn$_invoke$arity$0 = G__22485__0;
G__22485.cljs$core$IFn$_invoke$arity$1 = G__22485__1;
G__22485.cljs$core$IFn$_invoke$arity$2 = G__22485__2;
return G__22485;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__22492 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22492) : xform.call(null,G__22492));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__22493 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__22493) : f__$1.call(null,G__22493));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__22494__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__22494 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22495__i = 0, G__22495__a = new Array(arguments.length -  2);
while (G__22495__i < G__22495__a.length) {G__22495__a[G__22495__i] = arguments[G__22495__i + 2]; ++G__22495__i;}
  more = new cljs.core.IndexedSeq(G__22495__a,0);
} 
return G__22494__delegate.call(this,x,y,more);};
G__22494.cljs$lang$maxFixedArity = 2;
G__22494.cljs$lang$applyTo = (function (arglist__22496){
var x = cljs.core.first(arglist__22496);
arglist__22496 = cljs.core.next(arglist__22496);
var y = cljs.core.first(arglist__22496);
var more = cljs.core.rest(arglist__22496);
return G__22494__delegate(x,y,more);
});
G__22494.cljs$core$IFn$_invoke$arity$variadic = G__22494__delegate;
return G__22494;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__22497 = null;
if (arguments.length > 2) {
var G__22498__i = 0, G__22498__a = new Array(arguments.length -  2);
while (G__22498__i < G__22498__a.length) {G__22498__a[G__22498__i] = arguments[G__22498__i + 2]; ++G__22498__i;}
G__22497 = new cljs.core.IndexedSeq(G__22498__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__22499__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__22499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22500__i = 0, G__22500__a = new Array(arguments.length -  2);
while (G__22500__i < G__22500__a.length) {G__22500__a[G__22500__i] = arguments[G__22500__i + 2]; ++G__22500__i;}
  more = new cljs.core.IndexedSeq(G__22500__a,0);
} 
return G__22499__delegate.call(this,x,y,more);};
G__22499.cljs$lang$maxFixedArity = 2;
G__22499.cljs$lang$applyTo = (function (arglist__22501){
var x = cljs.core.first(arglist__22501);
arglist__22501 = cljs.core.next(arglist__22501);
var y = cljs.core.first(arglist__22501);
var more = cljs.core.rest(arglist__22501);
return G__22499__delegate(x,y,more);
});
G__22499.cljs$core$IFn$_invoke$arity$variadic = G__22499__delegate;
return G__22499;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__22502 = null;
if (arguments.length > 2) {
var G__22503__i = 0, G__22503__a = new Array(arguments.length -  2);
while (G__22503__i < G__22503__a.length) {G__22503__a[G__22503__i] = arguments[G__22503__i + 2]; ++G__22503__i;}
G__22502 = new cljs.core.IndexedSeq(G__22503__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__22504__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__22504 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22505__i = 0, G__22505__a = new Array(arguments.length -  2);
while (G__22505__i < G__22505__a.length) {G__22505__a[G__22505__i] = arguments[G__22505__i + 2]; ++G__22505__i;}
  more = new cljs.core.IndexedSeq(G__22505__a,0);
} 
return G__22504__delegate.call(this,x,y,more);};
G__22504.cljs$lang$maxFixedArity = 2;
G__22504.cljs$lang$applyTo = (function (arglist__22506){
var x = cljs.core.first(arglist__22506);
arglist__22506 = cljs.core.next(arglist__22506);
var y = cljs.core.first(arglist__22506);
var more = cljs.core.rest(arglist__22506);
return G__22504__delegate(x,y,more);
});
G__22504.cljs$core$IFn$_invoke$arity$variadic = G__22504__delegate;
return G__22504;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__22507 = null;
if (arguments.length > 2) {
var G__22508__i = 0, G__22508__a = new Array(arguments.length -  2);
while (G__22508__i < G__22508__a.length) {G__22508__a[G__22508__i] = arguments[G__22508__i + 2]; ++G__22508__i;}
G__22507 = new cljs.core.IndexedSeq(G__22508__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__22513__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22513 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22514__i = 0, G__22514__a = new Array(arguments.length -  2);
while (G__22514__i < G__22514__a.length) {G__22514__a[G__22514__i] = arguments[G__22514__i + 2]; ++G__22514__i;}
  more = new cljs.core.IndexedSeq(G__22514__a,0);
} 
return G__22513__delegate.call(this,x,y,more);};
G__22513.cljs$lang$maxFixedArity = 2;
G__22513.cljs$lang$applyTo = (function (arglist__22515){
var x = cljs.core.first(arglist__22515);
arglist__22515 = cljs.core.next(arglist__22515);
var y = cljs.core.first(arglist__22515);
var more = cljs.core.rest(arglist__22515);
return G__22513__delegate(x,y,more);
});
G__22513.cljs$core$IFn$_invoke$arity$variadic = G__22513__delegate;
return G__22513;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__22516 = null;
if (arguments.length > 2) {
var G__22517__i = 0, G__22517__a = new Array(arguments.length -  2);
while (G__22517__i < G__22517__a.length) {G__22517__a[G__22517__i] = arguments[G__22517__i + 2]; ++G__22517__i;}
G__22516 = new cljs.core.IndexedSeq(G__22517__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__22518__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__22519 = y;
var G__22520 = cljs.core.first(more);
var G__22521 = cljs.core.next(more);
x = G__22519;
y = G__22520;
more = G__22521;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22518 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22522__i = 0, G__22522__a = new Array(arguments.length -  2);
while (G__22522__i < G__22522__a.length) {G__22522__a[G__22522__i] = arguments[G__22522__i + 2]; ++G__22522__i;}
  more = new cljs.core.IndexedSeq(G__22522__a,0);
} 
return G__22518__delegate.call(this,x,y,more);};
G__22518.cljs$lang$maxFixedArity = 2;
G__22518.cljs$lang$applyTo = (function (arglist__22523){
var x = cljs.core.first(arglist__22523);
arglist__22523 = cljs.core.next(arglist__22523);
var y = cljs.core.first(arglist__22523);
var more = cljs.core.rest(arglist__22523);
return G__22518__delegate(x,y,more);
});
G__22518.cljs$core$IFn$_invoke$arity$variadic = G__22518__delegate;
return G__22518;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__22524 = null;
if (arguments.length > 2) {
var G__22525__i = 0, G__22525__a = new Array(arguments.length -  2);
while (G__22525__i < G__22525__a.length) {G__22525__a[G__22525__i] = arguments[G__22525__i + 2]; ++G__22525__i;}
G__22524 = new cljs.core.IndexedSeq(G__22525__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__22526__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__22527 = y;
var G__22528 = cljs.core.first(more);
var G__22529 = cljs.core.next(more);
x = G__22527;
y = G__22528;
more = G__22529;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22526 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22530__i = 0, G__22530__a = new Array(arguments.length -  2);
while (G__22530__i < G__22530__a.length) {G__22530__a[G__22530__i] = arguments[G__22530__i + 2]; ++G__22530__i;}
  more = new cljs.core.IndexedSeq(G__22530__a,0);
} 
return G__22526__delegate.call(this,x,y,more);};
G__22526.cljs$lang$maxFixedArity = 2;
G__22526.cljs$lang$applyTo = (function (arglist__22531){
var x = cljs.core.first(arglist__22531);
arglist__22531 = cljs.core.next(arglist__22531);
var y = cljs.core.first(arglist__22531);
var more = cljs.core.rest(arglist__22531);
return G__22526__delegate(x,y,more);
});
G__22526.cljs$core$IFn$_invoke$arity$variadic = G__22526__delegate;
return G__22526;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__22532 = null;
if (arguments.length > 2) {
var G__22533__i = 0, G__22533__a = new Array(arguments.length -  2);
while (G__22533__i < G__22533__a.length) {G__22533__a[G__22533__i] = arguments[G__22533__i + 2]; ++G__22533__i;}
G__22532 = new cljs.core.IndexedSeq(G__22533__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__22534__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__22535 = y;
var G__22536 = cljs.core.first(more);
var G__22537 = cljs.core.next(more);
x = G__22535;
y = G__22536;
more = G__22537;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22534 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22538__i = 0, G__22538__a = new Array(arguments.length -  2);
while (G__22538__i < G__22538__a.length) {G__22538__a[G__22538__i] = arguments[G__22538__i + 2]; ++G__22538__i;}
  more = new cljs.core.IndexedSeq(G__22538__a,0);
} 
return G__22534__delegate.call(this,x,y,more);};
G__22534.cljs$lang$maxFixedArity = 2;
G__22534.cljs$lang$applyTo = (function (arglist__22539){
var x = cljs.core.first(arglist__22539);
arglist__22539 = cljs.core.next(arglist__22539);
var y = cljs.core.first(arglist__22539);
var more = cljs.core.rest(arglist__22539);
return G__22534__delegate(x,y,more);
});
G__22534.cljs$core$IFn$_invoke$arity$variadic = G__22534__delegate;
return G__22534;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__22540 = null;
if (arguments.length > 2) {
var G__22541__i = 0, G__22541__a = new Array(arguments.length -  2);
while (G__22541__i < G__22541__a.length) {G__22541__a[G__22541__i] = arguments[G__22541__i + 2]; ++G__22541__i;}
G__22540 = new cljs.core.IndexedSeq(G__22541__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__22542__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__22543 = y;
var G__22544 = cljs.core.first(more);
var G__22545 = cljs.core.next(more);
x = G__22543;
y = G__22544;
more = G__22545;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22542 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22546__i = 0, G__22546__a = new Array(arguments.length -  2);
while (G__22546__i < G__22546__a.length) {G__22546__a[G__22546__i] = arguments[G__22546__i + 2]; ++G__22546__i;}
  more = new cljs.core.IndexedSeq(G__22546__a,0);
} 
return G__22542__delegate.call(this,x,y,more);};
G__22542.cljs$lang$maxFixedArity = 2;
G__22542.cljs$lang$applyTo = (function (arglist__22547){
var x = cljs.core.first(arglist__22547);
arglist__22547 = cljs.core.next(arglist__22547);
var y = cljs.core.first(arglist__22547);
var more = cljs.core.rest(arglist__22547);
return G__22542__delegate(x,y,more);
});
G__22542.cljs$core$IFn$_invoke$arity$variadic = G__22542__delegate;
return G__22542;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__22548 = null;
if (arguments.length > 2) {
var G__22549__i = 0, G__22549__a = new Array(arguments.length -  2);
while (G__22549__i < G__22549__a.length) {G__22549__a[G__22549__i] = arguments[G__22549__i + 2]; ++G__22549__i;}
G__22548 = new cljs.core.IndexedSeq(G__22549__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__13090__auto__ = x;
var y__13091__auto__ = y;
return ((x__13090__auto__ > y__13091__auto__) ? x__13090__auto__ : y__13091__auto__);
});
var max__3 = (function() { 
var G__22550__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__13090__auto__ = x;
var y__13091__auto__ = y;
return ((x__13090__auto__ > y__13091__auto__) ? x__13090__auto__ : y__13091__auto__);
})(),more);
};
var G__22550 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22551__i = 0, G__22551__a = new Array(arguments.length -  2);
while (G__22551__i < G__22551__a.length) {G__22551__a[G__22551__i] = arguments[G__22551__i + 2]; ++G__22551__i;}
  more = new cljs.core.IndexedSeq(G__22551__a,0);
} 
return G__22550__delegate.call(this,x,y,more);};
G__22550.cljs$lang$maxFixedArity = 2;
G__22550.cljs$lang$applyTo = (function (arglist__22552){
var x = cljs.core.first(arglist__22552);
arglist__22552 = cljs.core.next(arglist__22552);
var y = cljs.core.first(arglist__22552);
var more = cljs.core.rest(arglist__22552);
return G__22550__delegate(x,y,more);
});
G__22550.cljs$core$IFn$_invoke$arity$variadic = G__22550__delegate;
return G__22550;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__22553 = null;
if (arguments.length > 2) {
var G__22554__i = 0, G__22554__a = new Array(arguments.length -  2);
while (G__22554__i < G__22554__a.length) {G__22554__a[G__22554__i] = arguments[G__22554__i + 2]; ++G__22554__i;}
G__22553 = new cljs.core.IndexedSeq(G__22554__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__13097__auto__ = x;
var y__13098__auto__ = y;
return ((x__13097__auto__ < y__13098__auto__) ? x__13097__auto__ : y__13098__auto__);
});
var min__3 = (function() { 
var G__22555__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__13097__auto__ = x;
var y__13098__auto__ = y;
return ((x__13097__auto__ < y__13098__auto__) ? x__13097__auto__ : y__13098__auto__);
})(),more);
};
var G__22555 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22556__i = 0, G__22556__a = new Array(arguments.length -  2);
while (G__22556__i < G__22556__a.length) {G__22556__a[G__22556__i] = arguments[G__22556__i + 2]; ++G__22556__i;}
  more = new cljs.core.IndexedSeq(G__22556__a,0);
} 
return G__22555__delegate.call(this,x,y,more);};
G__22555.cljs$lang$maxFixedArity = 2;
G__22555.cljs$lang$applyTo = (function (arglist__22557){
var x = cljs.core.first(arglist__22557);
arglist__22557 = cljs.core.next(arglist__22557);
var y = cljs.core.first(arglist__22557);
var more = cljs.core.rest(arglist__22557);
return G__22555__delegate(x,y,more);
});
G__22555.cljs$core$IFn$_invoke$arity$variadic = G__22555__delegate;
return G__22555;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__22558 = null;
if (arguments.length > 2) {
var G__22559__i = 0, G__22559__a = new Array(arguments.length -  2);
while (G__22559__i < G__22559__a.length) {G__22559__a[G__22559__i] = arguments[G__22559__i + 2]; ++G__22559__i;}
G__22558 = new cljs.core.IndexedSeq(G__22559__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__22560__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__22560 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22561__i = 0, G__22561__a = new Array(arguments.length -  2);
while (G__22561__i < G__22561__a.length) {G__22561__a[G__22561__i] = arguments[G__22561__i + 2]; ++G__22561__i;}
  more = new cljs.core.IndexedSeq(G__22561__a,0);
} 
return G__22560__delegate.call(this,x,y,more);};
G__22560.cljs$lang$maxFixedArity = 2;
G__22560.cljs$lang$applyTo = (function (arglist__22562){
var x = cljs.core.first(arglist__22562);
arglist__22562 = cljs.core.next(arglist__22562);
var y = cljs.core.first(arglist__22562);
var more = cljs.core.rest(arglist__22562);
return G__22560__delegate(x,y,more);
});
G__22560.cljs$core$IFn$_invoke$arity$variadic = G__22560__delegate;
return G__22560;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__22563 = null;
if (arguments.length > 2) {
var G__22564__i = 0, G__22564__a = new Array(arguments.length -  2);
while (G__22564__i < G__22564__a.length) {G__22564__a[G__22564__i] = arguments[G__22564__i + 2]; ++G__22564__i;}
G__22563 = new cljs.core.IndexedSeq(G__22564__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__22565__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__22565 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22566__i = 0, G__22566__a = new Array(arguments.length -  2);
while (G__22566__i < G__22566__a.length) {G__22566__a[G__22566__i] = arguments[G__22566__i + 2]; ++G__22566__i;}
  more = new cljs.core.IndexedSeq(G__22566__a,0);
} 
return G__22565__delegate.call(this,x,y,more);};
G__22565.cljs$lang$maxFixedArity = 2;
G__22565.cljs$lang$applyTo = (function (arglist__22567){
var x = cljs.core.first(arglist__22567);
arglist__22567 = cljs.core.next(arglist__22567);
var y = cljs.core.first(arglist__22567);
var more = cljs.core.rest(arglist__22567);
return G__22565__delegate(x,y,more);
});
G__22565.cljs$core$IFn$_invoke$arity$variadic = G__22565__delegate;
return G__22565;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__22568 = null;
if (arguments.length > 2) {
var G__22569__i = 0, G__22569__a = new Array(arguments.length -  2);
while (G__22569__i < G__22569__a.length) {G__22569__a[G__22569__i] = arguments[G__22569__i + 2]; ++G__22569__i;}
G__22568 = new cljs.core.IndexedSeq(G__22569__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__22574__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22574 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22575__i = 0, G__22575__a = new Array(arguments.length -  2);
while (G__22575__i < G__22575__a.length) {G__22575__a[G__22575__i] = arguments[G__22575__i + 2]; ++G__22575__i;}
  more = new cljs.core.IndexedSeq(G__22575__a,0);
} 
return G__22574__delegate.call(this,x,y,more);};
G__22574.cljs$lang$maxFixedArity = 2;
G__22574.cljs$lang$applyTo = (function (arglist__22576){
var x = cljs.core.first(arglist__22576);
arglist__22576 = cljs.core.next(arglist__22576);
var y = cljs.core.first(arglist__22576);
var more = cljs.core.rest(arglist__22576);
return G__22574__delegate(x,y,more);
});
G__22574.cljs$core$IFn$_invoke$arity$variadic = G__22574__delegate;
return G__22574;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__22577 = null;
if (arguments.length > 2) {
var G__22578__i = 0, G__22578__a = new Array(arguments.length -  2);
while (G__22578__i < G__22578__a.length) {G__22578__a[G__22578__i] = arguments[G__22578__i + 2]; ++G__22578__i;}
G__22577 = new cljs.core.IndexedSeq(G__22578__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__22579__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__22579 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22580__i = 0, G__22580__a = new Array(arguments.length -  2);
while (G__22580__i < G__22580__a.length) {G__22580__a[G__22580__i] = arguments[G__22580__i + 2]; ++G__22580__i;}
  more = new cljs.core.IndexedSeq(G__22580__a,0);
} 
return G__22579__delegate.call(this,x,y,more);};
G__22579.cljs$lang$maxFixedArity = 2;
G__22579.cljs$lang$applyTo = (function (arglist__22581){
var x = cljs.core.first(arglist__22581);
arglist__22581 = cljs.core.next(arglist__22581);
var y = cljs.core.first(arglist__22581);
var more = cljs.core.rest(arglist__22581);
return G__22579__delegate(x,y,more);
});
G__22579.cljs$core$IFn$_invoke$arity$variadic = G__22579__delegate;
return G__22579;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__22582 = null;
if (arguments.length > 2) {
var G__22583__i = 0, G__22583__a = new Array(arguments.length -  2);
while (G__22583__i < G__22583__a.length) {G__22583__a[G__22583__i] = arguments[G__22583__i + 2]; ++G__22583__i;}
G__22582 = new cljs.core.IndexedSeq(G__22583__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__22584__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__22584 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22585__i = 0, G__22585__a = new Array(arguments.length -  2);
while (G__22585__i < G__22585__a.length) {G__22585__a[G__22585__i] = arguments[G__22585__i + 2]; ++G__22585__i;}
  more = new cljs.core.IndexedSeq(G__22585__a,0);
} 
return G__22584__delegate.call(this,x,y,more);};
G__22584.cljs$lang$maxFixedArity = 2;
G__22584.cljs$lang$applyTo = (function (arglist__22586){
var x = cljs.core.first(arglist__22586);
arglist__22586 = cljs.core.next(arglist__22586);
var y = cljs.core.first(arglist__22586);
var more = cljs.core.rest(arglist__22586);
return G__22584__delegate(x,y,more);
});
G__22584.cljs$core$IFn$_invoke$arity$variadic = G__22584__delegate;
return G__22584;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__22587 = null;
if (arguments.length > 2) {
var G__22588__i = 0, G__22588__a = new Array(arguments.length -  2);
while (G__22588__i < G__22588__a.length) {G__22588__a[G__22588__i] = arguments[G__22588__i + 2]; ++G__22588__i;}
G__22587 = new cljs.core.IndexedSeq(G__22588__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__22591 = x;
var G__22592 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__22591,G__22592) : cljs.core.mod.call(null,G__22591,G__22592));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__22593__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__22593 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22594__i = 0, G__22594__a = new Array(arguments.length -  2);
while (G__22594__i < G__22594__a.length) {G__22594__a[G__22594__i] = arguments[G__22594__i + 2]; ++G__22594__i;}
  more = new cljs.core.IndexedSeq(G__22594__a,0);
} 
return G__22593__delegate.call(this,x,y,more);};
G__22593.cljs$lang$maxFixedArity = 2;
G__22593.cljs$lang$applyTo = (function (arglist__22595){
var x = cljs.core.first(arglist__22595);
arglist__22595 = cljs.core.next(arglist__22595);
var y = cljs.core.first(arglist__22595);
var more = cljs.core.rest(arglist__22595);
return G__22593__delegate(x,y,more);
});
G__22593.cljs$core$IFn$_invoke$arity$variadic = G__22593__delegate;
return G__22593;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__22596 = null;
if (arguments.length > 2) {
var G__22597__i = 0, G__22597__a = new Array(arguments.length -  2);
while (G__22597__i < G__22597__a.length) {G__22597__a[G__22597__i] = arguments[G__22597__i + 2]; ++G__22597__i;}
G__22596 = new cljs.core.IndexedSeq(G__22597__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__22598__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__22598 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22599__i = 0, G__22599__a = new Array(arguments.length -  2);
while (G__22599__i < G__22599__a.length) {G__22599__a[G__22599__i] = arguments[G__22599__i + 2]; ++G__22599__i;}
  more = new cljs.core.IndexedSeq(G__22599__a,0);
} 
return G__22598__delegate.call(this,x,y,more);};
G__22598.cljs$lang$maxFixedArity = 2;
G__22598.cljs$lang$applyTo = (function (arglist__22600){
var x = cljs.core.first(arglist__22600);
arglist__22600 = cljs.core.next(arglist__22600);
var y = cljs.core.first(arglist__22600);
var more = cljs.core.rest(arglist__22600);
return G__22598__delegate(x,y,more);
});
G__22598.cljs$core$IFn$_invoke$arity$variadic = G__22598__delegate;
return G__22598;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__22601 = null;
if (arguments.length > 2) {
var G__22602__i = 0, G__22602__a = new Array(arguments.length -  2);
while (G__22602__i < G__22602__a.length) {G__22602__a[G__22602__i] = arguments[G__22602__i + 2]; ++G__22602__i;}
G__22601 = new cljs.core.IndexedSeq(G__22602__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__22605 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22605) : Math.floor.call(null,G__22605));
} else {
var G__22606 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22606) : Math.ceil.call(null,G__22606));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__22607__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__22607 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22608__i = 0, G__22608__a = new Array(arguments.length -  2);
while (G__22608__i < G__22608__a.length) {G__22608__a[G__22608__i] = arguments[G__22608__i + 2]; ++G__22608__i;}
  more = new cljs.core.IndexedSeq(G__22608__a,0);
} 
return G__22607__delegate.call(this,x,y,more);};
G__22607.cljs$lang$maxFixedArity = 2;
G__22607.cljs$lang$applyTo = (function (arglist__22609){
var x = cljs.core.first(arglist__22609);
arglist__22609 = cljs.core.next(arglist__22609);
var y = cljs.core.first(arglist__22609);
var more = cljs.core.rest(arglist__22609);
return G__22607__delegate(x,y,more);
});
G__22607.cljs$core$IFn$_invoke$arity$variadic = G__22607__delegate;
return G__22607;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__22610 = null;
if (arguments.length > 2) {
var G__22611__i = 0, G__22611__a = new Array(arguments.length -  2);
while (G__22611__i < G__22611__a.length) {G__22611__a[G__22611__i] = arguments[G__22611__i + 2]; ++G__22611__i;}
G__22610 = new cljs.core.IndexedSeq(G__22611__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__22612__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__22612 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22613__i = 0, G__22613__a = new Array(arguments.length -  2);
while (G__22613__i < G__22613__a.length) {G__22613__a[G__22613__i] = arguments[G__22613__i + 2]; ++G__22613__i;}
  more = new cljs.core.IndexedSeq(G__22613__a,0);
} 
return G__22612__delegate.call(this,x,y,more);};
G__22612.cljs$lang$maxFixedArity = 2;
G__22612.cljs$lang$applyTo = (function (arglist__22614){
var x = cljs.core.first(arglist__22614);
arglist__22614 = cljs.core.next(arglist__22614);
var y = cljs.core.first(arglist__22614);
var more = cljs.core.rest(arglist__22614);
return G__22612__delegate(x,y,more);
});
G__22612.cljs$core$IFn$_invoke$arity$variadic = G__22612__delegate;
return G__22612;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__22615 = null;
if (arguments.length > 2) {
var G__22616__i = 0, G__22616__a = new Array(arguments.length -  2);
while (G__22616__i < G__22616__a.length) {G__22616__a[G__22616__i] = arguments[G__22616__i + 2]; ++G__22616__i;}
G__22615 = new cljs.core.IndexedSeq(G__22616__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__22617__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__22617 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22618__i = 0, G__22618__a = new Array(arguments.length -  2);
while (G__22618__i < G__22618__a.length) {G__22618__a[G__22618__i] = arguments[G__22618__i + 2]; ++G__22618__i;}
  more = new cljs.core.IndexedSeq(G__22618__a,0);
} 
return G__22617__delegate.call(this,x,y,more);};
G__22617.cljs$lang$maxFixedArity = 2;
G__22617.cljs$lang$applyTo = (function (arglist__22619){
var x = cljs.core.first(arglist__22619);
arglist__22619 = cljs.core.next(arglist__22619);
var y = cljs.core.first(arglist__22619);
var more = cljs.core.rest(arglist__22619);
return G__22617__delegate(x,y,more);
});
G__22617.cljs$core$IFn$_invoke$arity$variadic = G__22617__delegate;
return G__22617;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__22620 = null;
if (arguments.length > 2) {
var G__22621__i = 0, G__22621__a = new Array(arguments.length -  2);
while (G__22621__i < G__22621__a.length) {G__22621__a[G__22621__i] = arguments[G__22621__i + 2]; ++G__22621__i;}
G__22620 = new cljs.core.IndexedSeq(G__22621__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__22622__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__22622 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22623__i = 0, G__22623__a = new Array(arguments.length -  2);
while (G__22623__i < G__22623__a.length) {G__22623__a[G__22623__i] = arguments[G__22623__i + 2]; ++G__22623__i;}
  more = new cljs.core.IndexedSeq(G__22623__a,0);
} 
return G__22622__delegate.call(this,x,y,more);};
G__22622.cljs$lang$maxFixedArity = 2;
G__22622.cljs$lang$applyTo = (function (arglist__22624){
var x = cljs.core.first(arglist__22624);
arglist__22624 = cljs.core.next(arglist__22624);
var y = cljs.core.first(arglist__22624);
var more = cljs.core.rest(arglist__22624);
return G__22622__delegate(x,y,more);
});
G__22622.cljs$core$IFn$_invoke$arity$variadic = G__22622__delegate;
return G__22622;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__22625 = null;
if (arguments.length > 2) {
var G__22626__i = 0, G__22626__a = new Array(arguments.length -  2);
while (G__22626__i < G__22626__a.length) {G__22626__a[G__22626__i] = arguments[G__22626__i + 2]; ++G__22626__i;}
G__22625 = new cljs.core.IndexedSeq(G__22626__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__22631__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__22632 = y;
var G__22633 = cljs.core.first(more);
var G__22634 = cljs.core.next(more);
x = G__22632;
y = G__22633;
more = G__22634;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22631 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22635__i = 0, G__22635__a = new Array(arguments.length -  2);
while (G__22635__i < G__22635__a.length) {G__22635__a[G__22635__i] = arguments[G__22635__i + 2]; ++G__22635__i;}
  more = new cljs.core.IndexedSeq(G__22635__a,0);
} 
return G__22631__delegate.call(this,x,y,more);};
G__22631.cljs$lang$maxFixedArity = 2;
G__22631.cljs$lang$applyTo = (function (arglist__22636){
var x = cljs.core.first(arglist__22636);
arglist__22636 = cljs.core.next(arglist__22636);
var y = cljs.core.first(arglist__22636);
var more = cljs.core.rest(arglist__22636);
return G__22631__delegate(x,y,more);
});
G__22631.cljs$core$IFn$_invoke$arity$variadic = G__22631__delegate;
return G__22631;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__22637 = null;
if (arguments.length > 2) {
var G__22638__i = 0, G__22638__a = new Array(arguments.length -  2);
while (G__22638__i < G__22638__a.length) {G__22638__a[G__22638__i] = arguments[G__22638__i + 2]; ++G__22638__i;}
G__22637 = new cljs.core.IndexedSeq(G__22638__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22637);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__22639 = (n__$1 - (1));
var G__22640 = cljs.core.next(xs);
n__$1 = G__22639;
xs = G__22640;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__22644 = x;
return goog.string.buildString(G__22644);
}
});
var str__2 = (function() { 
var G__22645__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__22646 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__22647 = cljs.core.next(more);
sb = G__22646;
more = G__22647;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__22645 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__22648__i = 0, G__22648__a = new Array(arguments.length -  1);
while (G__22648__i < G__22648__a.length) {G__22648__a[G__22648__i] = arguments[G__22648__i + 1]; ++G__22648__i;}
  ys = new cljs.core.IndexedSeq(G__22648__a,0);
} 
return G__22645__delegate.call(this,x,ys);};
G__22645.cljs$lang$maxFixedArity = 1;
G__22645.cljs$lang$applyTo = (function (arglist__22649){
var x = cljs.core.first(arglist__22649);
var ys = cljs.core.rest(arglist__22649);
return G__22645__delegate(x,ys);
});
G__22645.cljs$core$IFn$_invoke$arity$variadic = G__22645__delegate;
return G__22645;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__22650 = null;
if (arguments.length > 1) {
var G__22651__i = 0, G__22651__a = new Array(arguments.length -  1);
while (G__22651__i < G__22651__a.length) {G__22651__a[G__22651__i] = arguments[G__22651__i + 1]; ++G__22651__i;}
G__22650 = new cljs.core.IndexedSeq(G__22651__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__22652 = cljs.core.next(xs);
var G__22653 = cljs.core.next(ys);
xs = G__22652;
ys = G__22653;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__22654 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__22655 = cljs.core.next(s);
res = G__22654;
s = G__22655;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__22660 = ((h + (cljs.core.hash((function (){var G__22658 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22658) : cljs.core.key.call(null,G__22658));
})()) ^ cljs.core.hash((function (){var G__22659 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22659) : cljs.core.val.call(null,G__22659));
})()))) % (4503599627370496));
var G__22661 = cljs.core.next(s);
h = G__22660;
s = G__22661;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__22662 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__22663 = cljs.core.next(s__$1);
h = G__22662;
s__$1 = G__22663;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__22674_22684 = cljs.core.seq(fn_map);
var chunk__22675_22685 = null;
var count__22676_22686 = (0);
var i__22677_22687 = (0);
while(true){
if((i__22677_22687 < count__22676_22686)){
var vec__22678_22688 = chunk__22675_22685.cljs$core$IIndexed$_nth$arity$2(null,i__22677_22687);
var key_name_22689 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22678_22688,(0),null);
var f_22690 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22678_22688,(1),null);
var str_name_22691 = (function (){var G__22679 = key_name_22689;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22679) : cljs.core.name.call(null,G__22679));
})();
(obj[str_name_22691] = f_22690);

var G__22692 = seq__22674_22684;
var G__22693 = chunk__22675_22685;
var G__22694 = count__22676_22686;
var G__22695 = (i__22677_22687 + (1));
seq__22674_22684 = G__22692;
chunk__22675_22685 = G__22693;
count__22676_22686 = G__22694;
i__22677_22687 = G__22695;
continue;
} else {
var temp__4126__auto___22696 = cljs.core.seq(seq__22674_22684);
if(temp__4126__auto___22696){
var seq__22674_22697__$1 = temp__4126__auto___22696;
if(cljs.core.chunked_seq_QMARK_(seq__22674_22697__$1)){
var c__13560__auto___22698 = (function (){var G__22680 = seq__22674_22697__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__22680) : cljs.core.chunk_first.call(null,G__22680));
})();
var G__22699 = (function (){var G__22681 = seq__22674_22697__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__22681) : cljs.core.chunk_rest.call(null,G__22681));
})();
var G__22700 = c__13560__auto___22698;
var G__22701 = cljs.core.count(c__13560__auto___22698);
var G__22702 = (0);
seq__22674_22684 = G__22699;
chunk__22675_22685 = G__22700;
count__22676_22686 = G__22701;
i__22677_22687 = G__22702;
continue;
} else {
var vec__22682_22703 = cljs.core.first(seq__22674_22697__$1);
var key_name_22704 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22682_22703,(0),null);
var f_22705 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22682_22703,(1),null);
var str_name_22706 = (function (){var G__22683 = key_name_22704;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22683) : cljs.core.name.call(null,G__22683));
})();
(obj[str_name_22706] = f_22705);

var G__22707 = cljs.core.next(seq__22674_22697__$1);
var G__22708 = null;
var G__22709 = (0);
var G__22710 = (0);
seq__22674_22684 = G__22707;
chunk__22675_22685 = G__22708;
count__22676_22686 = G__22709;
i__22677_22687 = G__22710;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__22712 = coll;
if(G__22712){
var bit__13454__auto__ = (G__22712.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__13454__auto__) || (G__22712.cljs$core$IReversible$)){
return true;
} else {
if((!G__22712.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22712);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__22713 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__22713;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__22714 = (i - (1));
var G__22715 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__22714;
r = G__22715;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__22716__i = 0, G__22716__a = new Array(arguments.length -  0);
while (G__22716__i < G__22716__a.length) {G__22716__a[G__22716__i] = arguments[G__22716__i + 0]; ++G__22716__i;}
  xs = new cljs.core.IndexedSeq(G__22716__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__22717){
var xs = cljs.core.seq(arglist__22717);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12773__auto__ = (coll == null);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var G__22721 = coll;
if(G__22721){
var bit__13447__auto__ = (G__22721.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13447__auto__) || (G__22721.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__22723 = x;
if(G__22723){
var bit__13454__auto__ = (G__22723.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__13454__auto__) || (G__22723.cljs$core$IList$)){
return true;
} else {
if((!G__22723.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22723);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22723);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12761__auto__ = cljs.core.not(a.ns);
if(and__12761__auto__){
return b.ns;
} else {
return and__12761__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__22730 = a.ns;
var G__22731 = b.ns;
return goog.array.defaultCompare(G__22730,G__22731);
})();
if(((0) === nsc)){
var G__22732 = a.name;
var G__22733 = b.name;
return goog.array.defaultCompare(G__22732,G__22733);
} else {
return nsc;
}
}
} else {
var G__22734 = a.name;
var G__22735 = b.name;
return goog.array.defaultCompare(G__22734,G__22735);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13194__auto__ = self__._hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__22737 = null;
var G__22737__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__22737__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__22737 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__22737__2.call(this,self__,coll);
case 3:
return G__22737__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22737.cljs$core$IFn$_invoke$arity$2 = G__22737__2;
G__22737.cljs$core$IFn$_invoke$arity$3 = G__22737__3;
return G__22737;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args22736){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22736)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__22739 = x;
if(G__22739){
var bit__13447__auto__ = (G__22739.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13447__auto__) || (G__22739.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__22741 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22741) : cljs.core.name.call(null,G__22741));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__22742 = ls.sval();
ls = G__22742;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__22744 = s;
if(G__22744){
var bit__13447__auto__ = (G__22744.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13447__auto__) || (G__22744.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__22745 = cljs.core.next(s__$1);
s__$1 = G__22745;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_22746 = (0);
var xs_22747 = cljs.core.seq(coll);
while(true){
if(xs_22747){
(ret[i_22746] = cljs.core.to_array(cljs.core.first(xs_22747)));

var G__22748 = (i_22746 + (1));
var G__22749 = cljs.core.next(xs_22747);
i_22746 = G__22748;
xs_22747 = G__22749;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22752 = (i + (1));
var G__22753 = cljs.core.next(s__$1);
i = G__22752;
s__$1 = G__22753;
continue;
} else {
return a;
}
break;
}
} else {
var n__13660__auto___22754 = size;
var i_22755 = (0);
while(true){
if((i_22755 < n__13660__auto___22754)){
(a[i_22755] = init_val_or_seq);

var G__22756 = (i_22755 + (1));
i_22755 = G__22756;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22759 = (i + (1));
var G__22760 = cljs.core.next(s__$1);
i = G__22759;
s__$1 = G__22760;
continue;
} else {
return a;
}
break;
}
} else {
var n__13660__auto___22761 = size;
var i_22762 = (0);
while(true){
if((i_22762 < n__13660__auto___22761)){
(a[i_22762] = init_val_or_seq);

var G__22763 = (i_22762 + (1));
i_22762 = G__22763;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22766 = (i + (1));
var G__22767 = cljs.core.next(s__$1);
i = G__22766;
s__$1 = G__22767;
continue;
} else {
return a;
}
break;
}
} else {
var n__13660__auto___22768 = size;
var i_22769 = (0);
while(true){
if((i_22769 < n__13660__auto___22768)){
(a[i_22769] = init_val_or_seq);

var G__22770 = (i_22769 + (1));
i_22769 = G__22770;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22773 = (i + (1));
var G__22774 = cljs.core.next(s__$1);
i = G__22773;
s__$1 = G__22774;
continue;
} else {
return a;
}
break;
}
} else {
var n__13660__auto___22775 = size;
var i_22776 = (0);
while(true){
if((i_22776 < n__13660__auto___22775)){
(a[i_22776] = init_val_or_seq);

var G__22777 = (i_22776 + (1));
i_22776 = G__22777;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__22778 = cljs.core.next(s__$1);
var G__22779 = (i - (1));
var G__22780 = (sum + (1));
s__$1 = G__22778;
i = G__22779;
sum = G__22780;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__22800__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__22800 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22801__i = 0, G__22801__a = new Array(arguments.length -  2);
while (G__22801__i < G__22801__a.length) {G__22801__a[G__22801__i] = arguments[G__22801__i + 2]; ++G__22801__i;}
  zs = new cljs.core.IndexedSeq(G__22801__a,0);
} 
return G__22800__delegate.call(this,x,y,zs);};
G__22800.cljs$lang$maxFixedArity = 2;
G__22800.cljs$lang$applyTo = (function (arglist__22802){
var x = cljs.core.first(arglist__22802);
arglist__22802 = cljs.core.next(arglist__22802);
var y = cljs.core.first(arglist__22802);
var zs = cljs.core.rest(arglist__22802);
return G__22800__delegate(x,y,zs);
});
G__22800.cljs$core$IFn$_invoke$arity$variadic = G__22800__delegate;
return G__22800;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__22803 = null;
if (arguments.length > 2) {
var G__22804__i = 0, G__22804__a = new Array(arguments.length -  2);
while (G__22804__i < G__22804__a.length) {G__22804__a[G__22804__i] = arguments[G__22804__i + 2]; ++G__22804__i;}
G__22803 = new cljs.core.IndexedSeq(G__22804__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__22805__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__22805 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__22806__i = 0, G__22806__a = new Array(arguments.length -  4);
while (G__22806__i < G__22806__a.length) {G__22806__a[G__22806__i] = arguments[G__22806__i + 4]; ++G__22806__i;}
  more = new cljs.core.IndexedSeq(G__22806__a,0);
} 
return G__22805__delegate.call(this,a,b,c,d,more);};
G__22805.cljs$lang$maxFixedArity = 4;
G__22805.cljs$lang$applyTo = (function (arglist__22807){
var a = cljs.core.first(arglist__22807);
arglist__22807 = cljs.core.next(arglist__22807);
var b = cljs.core.first(arglist__22807);
arglist__22807 = cljs.core.next(arglist__22807);
var c = cljs.core.first(arglist__22807);
arglist__22807 = cljs.core.next(arglist__22807);
var d = cljs.core.first(arglist__22807);
var more = cljs.core.rest(arglist__22807);
return G__22805__delegate(a,b,c,d,more);
});
G__22805.cljs$core$IFn$_invoke$arity$variadic = G__22805__delegate;
return G__22805;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__22808 = null;
if (arguments.length > 4) {
var G__22809__i = 0, G__22809__a = new Array(arguments.length -  4);
while (G__22809__i < G__22809__a.length) {G__22809__a[G__22809__i] = arguments[G__22809__i + 4]; ++G__22809__i;}
G__22808 = new cljs.core.IndexedSeq(G__22809__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__22808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__22810__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22811 = ntcoll;
var G__22812 = cljs.core.first(vals);
var G__22813 = cljs.core.next(vals);
tcoll = G__22811;
val = G__22812;
vals = G__22813;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22810 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22814__i = 0, G__22814__a = new Array(arguments.length -  2);
while (G__22814__i < G__22814__a.length) {G__22814__a[G__22814__i] = arguments[G__22814__i + 2]; ++G__22814__i;}
  vals = new cljs.core.IndexedSeq(G__22814__a,0);
} 
return G__22810__delegate.call(this,tcoll,val,vals);};
G__22810.cljs$lang$maxFixedArity = 2;
G__22810.cljs$lang$applyTo = (function (arglist__22815){
var tcoll = cljs.core.first(arglist__22815);
arglist__22815 = cljs.core.next(arglist__22815);
var val = cljs.core.first(arglist__22815);
var vals = cljs.core.rest(arglist__22815);
return G__22810__delegate(tcoll,val,vals);
});
G__22810.cljs$core$IFn$_invoke$arity$variadic = G__22810__delegate;
return G__22810;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__22816 = null;
if (arguments.length > 2) {
var G__22817__i = 0, G__22817__a = new Array(arguments.length -  2);
while (G__22817__i < G__22817__a.length) {G__22817__a[G__22817__i] = arguments[G__22817__i + 2]; ++G__22817__i;}
G__22816 = new cljs.core.IndexedSeq(G__22817__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22816);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__22818__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__22819 = ntcoll;
var G__22820 = cljs.core.first(kvs);
var G__22821 = cljs.core.second(kvs);
var G__22822 = cljs.core.nnext(kvs);
tcoll = G__22819;
key = G__22820;
val = G__22821;
kvs = G__22822;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22818 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__22823__i = 0, G__22823__a = new Array(arguments.length -  3);
while (G__22823__i < G__22823__a.length) {G__22823__a[G__22823__i] = arguments[G__22823__i + 3]; ++G__22823__i;}
  kvs = new cljs.core.IndexedSeq(G__22823__a,0);
} 
return G__22818__delegate.call(this,tcoll,key,val,kvs);};
G__22818.cljs$lang$maxFixedArity = 3;
G__22818.cljs$lang$applyTo = (function (arglist__22824){
var tcoll = cljs.core.first(arglist__22824);
arglist__22824 = cljs.core.next(arglist__22824);
var key = cljs.core.first(arglist__22824);
arglist__22824 = cljs.core.next(arglist__22824);
var val = cljs.core.first(arglist__22824);
var kvs = cljs.core.rest(arglist__22824);
return G__22818__delegate(tcoll,key,val,kvs);
});
G__22818.cljs$core$IFn$_invoke$arity$variadic = G__22818__delegate;
return G__22818;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__22825 = null;
if (arguments.length > 3) {
var G__22826__i = 0, G__22826__a = new Array(arguments.length -  3);
while (G__22826__i < G__22826__a.length) {G__22826__a[G__22826__i] = arguments[G__22826__i + 3]; ++G__22826__i;}
G__22825 = new cljs.core.IndexedSeq(G__22826__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__22825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__22827__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__22828 = ntcoll;
var G__22829 = cljs.core.first(ks);
var G__22830 = cljs.core.next(ks);
tcoll = G__22828;
key = G__22829;
ks = G__22830;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22827 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22831__i = 0, G__22831__a = new Array(arguments.length -  2);
while (G__22831__i < G__22831__a.length) {G__22831__a[G__22831__i] = arguments[G__22831__i + 2]; ++G__22831__i;}
  ks = new cljs.core.IndexedSeq(G__22831__a,0);
} 
return G__22827__delegate.call(this,tcoll,key,ks);};
G__22827.cljs$lang$maxFixedArity = 2;
G__22827.cljs$lang$applyTo = (function (arglist__22832){
var tcoll = cljs.core.first(arglist__22832);
arglist__22832 = cljs.core.next(arglist__22832);
var key = cljs.core.first(arglist__22832);
var ks = cljs.core.rest(arglist__22832);
return G__22827__delegate(tcoll,key,ks);
});
G__22827.cljs$core$IFn$_invoke$arity$variadic = G__22827__delegate;
return G__22827;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__22833 = null;
if (arguments.length > 2) {
var G__22834__i = 0, G__22834__a = new Array(arguments.length -  2);
while (G__22834__i < G__22834__a.length) {G__22834__a[G__22834__i] = arguments[G__22834__i + 2]; ++G__22834__i;}
G__22833 = new cljs.core.IndexedSeq(G__22834__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__22833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__22835__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22836 = ntcoll;
var G__22837 = cljs.core.first(vals);
var G__22838 = cljs.core.next(vals);
tcoll = G__22836;
val = G__22837;
vals = G__22838;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22835 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22839__i = 0, G__22839__a = new Array(arguments.length -  2);
while (G__22839__i < G__22839__a.length) {G__22839__a[G__22839__i] = arguments[G__22839__i + 2]; ++G__22839__i;}
  vals = new cljs.core.IndexedSeq(G__22839__a,0);
} 
return G__22835__delegate.call(this,tcoll,val,vals);};
G__22835.cljs$lang$maxFixedArity = 2;
G__22835.cljs$lang$applyTo = (function (arglist__22840){
var tcoll = cljs.core.first(arglist__22840);
arglist__22840 = cljs.core.next(arglist__22840);
var val = cljs.core.first(arglist__22840);
var vals = cljs.core.rest(arglist__22840);
return G__22835__delegate(tcoll,val,vals);
});
G__22835.cljs$core$IFn$_invoke$arity$variadic = G__22835__delegate;
return G__22835;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__22841 = null;
if (arguments.length > 2) {
var G__22842__i = 0, G__22842__a = new Array(arguments.length -  2);
while (G__22842__i < G__22842__a.length) {G__22842__a[G__22842__i] = arguments[G__22842__i + 2]; ++G__22842__i;}
G__22841 = new cljs.core.IndexedSeq(G__22842__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13704 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13704);
} else {
var G__23053 = a13704;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23053) : f.call(null,G__23053));
}
} else {
var b13705 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13704,b13705);
} else {
var G__23054 = a13704;
var G__23055 = b13705;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23054,G__23055) : f.call(null,G__23054,G__23055));
}
} else {
var c13706 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13704,b13705,c13706);
} else {
var G__23056 = a13704;
var G__23057 = b13705;
var G__23058 = c13706;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23056,G__23057,G__23058) : f.call(null,G__23056,G__23057,G__23058));
}
} else {
var d13707 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13704,b13705,c13706,d13707);
} else {
var G__23059 = a13704;
var G__23060 = b13705;
var G__23061 = c13706;
var G__23062 = d13707;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23059,G__23060,G__23061,G__23062) : f.call(null,G__23059,G__23060,G__23061,G__23062));
}
} else {
var e13708 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13704,b13705,c13706,d13707,e13708);
} else {
var G__23063 = a13704;
var G__23064 = b13705;
var G__23065 = c13706;
var G__23066 = d13707;
var G__23067 = e13708;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23063,G__23064,G__23065,G__23066,G__23067) : f.call(null,G__23063,G__23064,G__23065,G__23066,G__23067));
}
} else {
var f13709 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13704,b13705,c13706,d13707,e13708,f13709);
} else {
var G__23068 = a13704;
var G__23069 = b13705;
var G__23070 = c13706;
var G__23071 = d13707;
var G__23072 = e13708;
var G__23073 = f13709;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__23068,G__23069,G__23070,G__23071,G__23072,G__23073) : f.call(null,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073));
}
} else {
var g13710 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13704,b13705,c13706,d13707,e13708,f13709,g13710);
} else {
var G__23074 = a13704;
var G__23075 = b13705;
var G__23076 = c13706;
var G__23077 = d13707;
var G__23078 = e13708;
var G__23079 = f13709;
var G__23080 = g13710;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__23074,G__23075,G__23076,G__23077,G__23078,G__23079,G__23080) : f.call(null,G__23074,G__23075,G__23076,G__23077,G__23078,G__23079,G__23080));
}
} else {
var h13711 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711);
} else {
var G__23081 = a13704;
var G__23082 = b13705;
var G__23083 = c13706;
var G__23084 = d13707;
var G__23085 = e13708;
var G__23086 = f13709;
var G__23087 = g13710;
var G__23088 = h13711;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__23081,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088) : f.call(null,G__23081,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088));
}
} else {
var i13712 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712);
} else {
var G__23089 = a13704;
var G__23090 = b13705;
var G__23091 = c13706;
var G__23092 = d13707;
var G__23093 = e13708;
var G__23094 = f13709;
var G__23095 = g13710;
var G__23096 = h13711;
var G__23097 = i13712;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096,G__23097) : f.call(null,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096,G__23097));
}
} else {
var j13713 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713);
} else {
var G__23098 = a13704;
var G__23099 = b13705;
var G__23100 = c13706;
var G__23101 = d13707;
var G__23102 = e13708;
var G__23103 = f13709;
var G__23104 = g13710;
var G__23105 = h13711;
var G__23106 = i13712;
var G__23107 = j13713;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107) : f.call(null,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107));
}
} else {
var k13714 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714);
} else {
var G__23108 = a13704;
var G__23109 = b13705;
var G__23110 = c13706;
var G__23111 = d13707;
var G__23112 = e13708;
var G__23113 = f13709;
var G__23114 = g13710;
var G__23115 = h13711;
var G__23116 = i13712;
var G__23117 = j13713;
var G__23118 = k13714;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118) : f.call(null,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118));
}
} else {
var l13715 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715);
} else {
var G__23119 = a13704;
var G__23120 = b13705;
var G__23121 = c13706;
var G__23122 = d13707;
var G__23123 = e13708;
var G__23124 = f13709;
var G__23125 = g13710;
var G__23126 = h13711;
var G__23127 = i13712;
var G__23128 = j13713;
var G__23129 = k13714;
var G__23130 = l13715;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130) : f.call(null,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130));
}
} else {
var m13716 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716);
} else {
var G__23131 = a13704;
var G__23132 = b13705;
var G__23133 = c13706;
var G__23134 = d13707;
var G__23135 = e13708;
var G__23136 = f13709;
var G__23137 = g13710;
var G__23138 = h13711;
var G__23139 = i13712;
var G__23140 = j13713;
var G__23141 = k13714;
var G__23142 = l13715;
var G__23143 = m13716;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143) : f.call(null,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143));
}
} else {
var n13717 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717);
} else {
var G__23144 = a13704;
var G__23145 = b13705;
var G__23146 = c13706;
var G__23147 = d13707;
var G__23148 = e13708;
var G__23149 = f13709;
var G__23150 = g13710;
var G__23151 = h13711;
var G__23152 = i13712;
var G__23153 = j13713;
var G__23154 = k13714;
var G__23155 = l13715;
var G__23156 = m13716;
var G__23157 = n13717;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157) : f.call(null,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157));
}
} else {
var o13718 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717,o13718);
} else {
var G__23158 = a13704;
var G__23159 = b13705;
var G__23160 = c13706;
var G__23161 = d13707;
var G__23162 = e13708;
var G__23163 = f13709;
var G__23164 = g13710;
var G__23165 = h13711;
var G__23166 = i13712;
var G__23167 = j13713;
var G__23168 = k13714;
var G__23169 = l13715;
var G__23170 = m13716;
var G__23171 = n13717;
var G__23172 = o13718;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172) : f.call(null,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172));
}
} else {
var p13719 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717,o13718,p13719);
} else {
var G__23173 = a13704;
var G__23174 = b13705;
var G__23175 = c13706;
var G__23176 = d13707;
var G__23177 = e13708;
var G__23178 = f13709;
var G__23179 = g13710;
var G__23180 = h13711;
var G__23181 = i13712;
var G__23182 = j13713;
var G__23183 = k13714;
var G__23184 = l13715;
var G__23185 = m13716;
var G__23186 = n13717;
var G__23187 = o13718;
var G__23188 = p13719;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188) : f.call(null,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188));
}
} else {
var q13720 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717,o13718,p13719,q13720);
} else {
var G__23189 = a13704;
var G__23190 = b13705;
var G__23191 = c13706;
var G__23192 = d13707;
var G__23193 = e13708;
var G__23194 = f13709;
var G__23195 = g13710;
var G__23196 = h13711;
var G__23197 = i13712;
var G__23198 = j13713;
var G__23199 = k13714;
var G__23200 = l13715;
var G__23201 = m13716;
var G__23202 = n13717;
var G__23203 = o13718;
var G__23204 = p13719;
var G__23205 = q13720;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205) : f.call(null,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205));
}
} else {
var r13721 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717,o13718,p13719,q13720,r13721);
} else {
var G__23206 = a13704;
var G__23207 = b13705;
var G__23208 = c13706;
var G__23209 = d13707;
var G__23210 = e13708;
var G__23211 = f13709;
var G__23212 = g13710;
var G__23213 = h13711;
var G__23214 = i13712;
var G__23215 = j13713;
var G__23216 = k13714;
var G__23217 = l13715;
var G__23218 = m13716;
var G__23219 = n13717;
var G__23220 = o13718;
var G__23221 = p13719;
var G__23222 = q13720;
var G__23223 = r13721;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223) : f.call(null,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223));
}
} else {
var s13722 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717,o13718,p13719,q13720,r13721,s13722);
} else {
var G__23224 = a13704;
var G__23225 = b13705;
var G__23226 = c13706;
var G__23227 = d13707;
var G__23228 = e13708;
var G__23229 = f13709;
var G__23230 = g13710;
var G__23231 = h13711;
var G__23232 = i13712;
var G__23233 = j13713;
var G__23234 = k13714;
var G__23235 = l13715;
var G__23236 = m13716;
var G__23237 = n13717;
var G__23238 = o13718;
var G__23239 = p13719;
var G__23240 = q13720;
var G__23241 = r13721;
var G__23242 = s13722;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242) : f.call(null,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242));
}
} else {
var t13723 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13704,b13705,c13706,d13707,e13708,f13709,g13710,h13711,i13712,j13713,k13714,l13715,m13716,n13717,o13718,p13719,q13720,r13721,s13722,t13723);
} else {
var G__23243 = a13704;
var G__23244 = b13705;
var G__23245 = c13706;
var G__23246 = d13707;
var G__23247 = e13708;
var G__23248 = f13709;
var G__23249 = g13710;
var G__23250 = h13711;
var G__23251 = i13712;
var G__23252 = j13713;
var G__23253 = k13714;
var G__23254 = l13715;
var G__23255 = m13716;
var G__23256 = n13717;
var G__23257 = o13718;
var G__23258 = p13719;
var G__23259 = q13720;
var G__23260 = r13721;
var G__23261 = s13722;
var G__23262 = t13723;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__23243,G__23244,G__23245,G__23246,G__23247,G__23248,G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262) : f.call(null,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248,G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__23263__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__23263 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__23264__i = 0, G__23264__a = new Array(arguments.length -  5);
while (G__23264__i < G__23264__a.length) {G__23264__a[G__23264__i] = arguments[G__23264__i + 5]; ++G__23264__i;}
  args = new cljs.core.IndexedSeq(G__23264__a,0);
} 
return G__23263__delegate.call(this,f,a,b,c,d,args);};
G__23263.cljs$lang$maxFixedArity = 5;
G__23263.cljs$lang$applyTo = (function (arglist__23265){
var f = cljs.core.first(arglist__23265);
arglist__23265 = cljs.core.next(arglist__23265);
var a = cljs.core.first(arglist__23265);
arglist__23265 = cljs.core.next(arglist__23265);
var b = cljs.core.first(arglist__23265);
arglist__23265 = cljs.core.next(arglist__23265);
var c = cljs.core.first(arglist__23265);
arglist__23265 = cljs.core.next(arglist__23265);
var d = cljs.core.first(arglist__23265);
var args = cljs.core.rest(arglist__23265);
return G__23263__delegate(f,a,b,c,d,args);
});
G__23263.cljs$core$IFn$_invoke$arity$variadic = G__23263__delegate;
return G__23263;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__23266 = null;
if (arguments.length > 5) {
var G__23267__i = 0, G__23267__a = new Array(arguments.length -  5);
while (G__23267__i < G__23267__a.length) {G__23267__a[G__23267__i] = arguments[G__23267__i + 5]; ++G__23267__i;}
G__23266 = new cljs.core.IndexedSeq(G__23267__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__23266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__23283 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23283) : f.call(null,G__23283));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__23284 = cljs.core.meta(obj);
var G__23285 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23284,G__23285) : f.call(null,G__23284,G__23285));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__23286 = cljs.core.meta(obj);
var G__23287 = a;
var G__23288 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23286,G__23287,G__23288) : f.call(null,G__23286,G__23287,G__23288));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__23289 = cljs.core.meta(obj);
var G__23290 = a;
var G__23291 = b;
var G__23292 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23289,G__23290,G__23291,G__23292) : f.call(null,G__23289,G__23290,G__23291,G__23292));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__23293 = cljs.core.meta(obj);
var G__23294 = a;
var G__23295 = b;
var G__23296 = c;
var G__23297 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23293,G__23294,G__23295,G__23296,G__23297) : f.call(null,G__23293,G__23294,G__23295,G__23296,G__23297));
})());
});
var vary_meta__7 = (function() { 
var G__23298__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__23298 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__23299__i = 0, G__23299__a = new Array(arguments.length -  6);
while (G__23299__i < G__23299__a.length) {G__23299__a[G__23299__i] = arguments[G__23299__i + 6]; ++G__23299__i;}
  args = new cljs.core.IndexedSeq(G__23299__a,0);
} 
return G__23298__delegate.call(this,obj,f,a,b,c,d,args);};
G__23298.cljs$lang$maxFixedArity = 6;
G__23298.cljs$lang$applyTo = (function (arglist__23300){
var obj = cljs.core.first(arglist__23300);
arglist__23300 = cljs.core.next(arglist__23300);
var f = cljs.core.first(arglist__23300);
arglist__23300 = cljs.core.next(arglist__23300);
var a = cljs.core.first(arglist__23300);
arglist__23300 = cljs.core.next(arglist__23300);
var b = cljs.core.first(arglist__23300);
arglist__23300 = cljs.core.next(arglist__23300);
var c = cljs.core.first(arglist__23300);
arglist__23300 = cljs.core.next(arglist__23300);
var d = cljs.core.first(arglist__23300);
var args = cljs.core.rest(arglist__23300);
return G__23298__delegate(obj,f,a,b,c,d,args);
});
G__23298.cljs$core$IFn$_invoke$arity$variadic = G__23298__delegate;
return G__23298;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__23301 = null;
if (arguments.length > 6) {
var G__23302__i = 0, G__23302__a = new Array(arguments.length -  6);
while (G__23302__i < G__23302__a.length) {G__23302__a[G__23302__i] = arguments[G__23302__i + 6]; ++G__23302__i;}
G__23301 = new cljs.core.IndexedSeq(G__23302__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__23301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__23303__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__23303 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23304__i = 0, G__23304__a = new Array(arguments.length -  2);
while (G__23304__i < G__23304__a.length) {G__23304__a[G__23304__i] = arguments[G__23304__i + 2]; ++G__23304__i;}
  more = new cljs.core.IndexedSeq(G__23304__a,0);
} 
return G__23303__delegate.call(this,x,y,more);};
G__23303.cljs$lang$maxFixedArity = 2;
G__23303.cljs$lang$applyTo = (function (arglist__23305){
var x = cljs.core.first(arglist__23305);
arglist__23305 = cljs.core.next(arglist__23305);
var y = cljs.core.first(arglist__23305);
var more = cljs.core.rest(arglist__23305);
return G__23303__delegate(x,y,more);
});
G__23303.cljs$core$IFn$_invoke$arity$variadic = G__23303__delegate;
return G__23303;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__23306 = null;
if (arguments.length > 2) {
var G__23307__i = 0, G__23307__a = new Array(arguments.length -  2);
while (G__23307__i < G__23307__a.length) {G__23307__a[G__23307__i] = arguments[G__23307__i + 2]; ++G__23307__i;}
G__23306 = new cljs.core.IndexedSeq(G__23307__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23306);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t23311 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t23311 = (function (nil_iter,meta23312){
this.nil_iter = nil_iter;
this.meta23312 = meta23312;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t23311.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t23311.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t23311.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t23311.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_23313){
var self__ = this;
var _23313__$1 = this;
return self__.meta23312;
});

cljs.core.t23311.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_23313,meta23312__$1){
var self__ = this;
var _23313__$1 = this;
return (new cljs.core.t23311(self__.nil_iter,meta23312__$1));
});

cljs.core.t23311.cljs$lang$type = true;

cljs.core.t23311.cljs$lang$ctorStr = "cljs.core/t23311";

cljs.core.t23311.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/t23311");
});

cljs.core.__GT_t23311 = (function __GT_t23311(nil_iter__$1,meta23312){
return (new cljs.core.t23311(nil_iter__$1,meta23312));
});

}

return (new cljs.core.t23311(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12761__auto__ = !((lt.stepper == null));
if(and__12761__auto__){
return self__.iter.hasNext();
} else {
return and__12761__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__23314 = lt;
var G__23315 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__23314,G__23315) : self__.xform.call(null,G__23314,G__23315));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__23316 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__23316) : self__.xform.call(null,G__23316));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__23318 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23318) : xform.call(null,G__23318));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__23320 = cljs.core.next(iters__$1);
iters__$1 = G__23320;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13660__auto___23321 = self__.iters.length;
var i_23322 = (0);
while(true){
if((i_23322 < n__13660__auto___23321)){
(self__.nexts[i_23322] = (self__.iters[i_23322]).next());

var G__23323 = (i_23322 + (1));
i_23322 = G__23323;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12761__auto__ = !((lt.stepper == null));
if(and__12761__auto__){
return this$.hasNext();
} else {
return and__12761__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__23319 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__23319) : self__.xform.call(null,G__23319));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__23328 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23328) : xform.call(null,G__23328));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__23329_23333 = cljs.core.seq(colls);
var chunk__23330_23334 = null;
var count__23331_23335 = (0);
var i__23332_23336 = (0);
while(true){
if((i__23332_23336 < count__23331_23335)){
var coll_23337 = chunk__23330_23334.cljs$core$IIndexed$_nth$arity$2(null,i__23332_23336);
iters.push(cljs.core.iter(coll_23337));

var G__23338 = seq__23329_23333;
var G__23339 = chunk__23330_23334;
var G__23340 = count__23331_23335;
var G__23341 = (i__23332_23336 + (1));
seq__23329_23333 = G__23338;
chunk__23330_23334 = G__23339;
count__23331_23335 = G__23340;
i__23332_23336 = G__23341;
continue;
} else {
var temp__4126__auto___23342 = cljs.core.seq(seq__23329_23333);
if(temp__4126__auto___23342){
var seq__23329_23343__$1 = temp__4126__auto___23342;
if(cljs.core.chunked_seq_QMARK_(seq__23329_23343__$1)){
var c__13560__auto___23344 = cljs.core.chunk_first(seq__23329_23343__$1);
var G__23345 = cljs.core.chunk_rest(seq__23329_23343__$1);
var G__23346 = c__13560__auto___23344;
var G__23347 = cljs.core.count(c__13560__auto___23344);
var G__23348 = (0);
seq__23329_23333 = G__23345;
chunk__23330_23334 = G__23346;
count__23331_23335 = G__23347;
i__23332_23336 = G__23348;
continue;
} else {
var coll_23349 = cljs.core.first(seq__23329_23343__$1);
iters.push(cljs.core.iter(coll_23349));

var G__23350 = cljs.core.next(seq__23329_23343__$1);
var G__23351 = null;
var G__23352 = (0);
var G__23353 = (0);
seq__23329_23333 = G__23350;
chunk__23330_23334 = G__23351;
count__23331_23335 = G__23352;
i__23332_23336 = G__23353;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12773__auto__ = cljs.core.seq(coll);
if(or__12773__auto__){
return or__12773__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__23354__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__23354 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23355__i = 0, G__23355__a = new Array(arguments.length -  2);
while (G__23355__i < G__23355__a.length) {G__23355__a[G__23355__i] = arguments[G__23355__i + 2]; ++G__23355__i;}
  colls = new cljs.core.IndexedSeq(G__23355__a,0);
} 
return G__23354__delegate.call(this,xform,coll,colls);};
G__23354.cljs$lang$maxFixedArity = 2;
G__23354.cljs$lang$applyTo = (function (arglist__23356){
var xform = cljs.core.first(arglist__23356);
arglist__23356 = cljs.core.next(arglist__23356);
var coll = cljs.core.first(arglist__23356);
var colls = cljs.core.rest(arglist__23356);
return G__23354__delegate(xform,coll,colls);
});
G__23354.cljs$core$IFn$_invoke$arity$variadic = G__23354__delegate;
return G__23354;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__23357 = null;
if (arguments.length > 2) {
var G__23358__i = 0, G__23358__a = new Array(arguments.length -  2);
while (G__23358__i < G__23358__a.length) {G__23358__a[G__23358__i] = arguments[G__23358__i + 2]; ++G__23358__i;}
G__23357 = new cljs.core.IndexedSeq(G__23358__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__23357);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__23360 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23360) : pred.call(null,G__23360));
})())){
var G__23361 = pred;
var G__23362 = cljs.core.next(coll);
pred = G__23361;
coll = G__23362;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12773__auto__ = (function (){var G__23366 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23366) : pred.call(null,G__23366));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var G__23367 = pred;
var G__23368 = cljs.core.next(coll);
pred = G__23367;
coll = G__23368;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__23375 = null;
var G__23375__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__23375__1 = (function (x){
return cljs.core.not((function (){var G__23372 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23372) : f.call(null,G__23372));
})());
});
var G__23375__2 = (function (x,y){
return cljs.core.not((function (){var G__23373 = x;
var G__23374 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23373,G__23374) : f.call(null,G__23373,G__23374));
})());
});
var G__23375__3 = (function() { 
var G__23376__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__23376 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__23377__i = 0, G__23377__a = new Array(arguments.length -  2);
while (G__23377__i < G__23377__a.length) {G__23377__a[G__23377__i] = arguments[G__23377__i + 2]; ++G__23377__i;}
  zs = new cljs.core.IndexedSeq(G__23377__a,0);
} 
return G__23376__delegate.call(this,x,y,zs);};
G__23376.cljs$lang$maxFixedArity = 2;
G__23376.cljs$lang$applyTo = (function (arglist__23378){
var x = cljs.core.first(arglist__23378);
arglist__23378 = cljs.core.next(arglist__23378);
var y = cljs.core.first(arglist__23378);
var zs = cljs.core.rest(arglist__23378);
return G__23376__delegate(x,y,zs);
});
G__23376.cljs$core$IFn$_invoke$arity$variadic = G__23376__delegate;
return G__23376;
})()
;
G__23375 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__23375__0.call(this);
case 1:
return G__23375__1.call(this,x);
case 2:
return G__23375__2.call(this,x,y);
default:
var G__23379 = null;
if (arguments.length > 2) {
var G__23380__i = 0, G__23380__a = new Array(arguments.length -  2);
while (G__23380__i < G__23380__a.length) {G__23380__a[G__23380__i] = arguments[G__23380__i + 2]; ++G__23380__i;}
G__23379 = new cljs.core.IndexedSeq(G__23380__a,0);
}
return G__23375__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23375.cljs$lang$maxFixedArity = 2;
G__23375.cljs$lang$applyTo = G__23375__3.cljs$lang$applyTo;
G__23375.cljs$core$IFn$_invoke$arity$0 = G__23375__0;
G__23375.cljs$core$IFn$_invoke$arity$1 = G__23375__1;
G__23375.cljs$core$IFn$_invoke$arity$2 = G__23375__2;
G__23375.cljs$core$IFn$_invoke$arity$variadic = G__23375__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23375;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__23381__delegate = function (args){
return x;
};
var G__23381 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23382__i = 0, G__23382__a = new Array(arguments.length -  0);
while (G__23382__i < G__23382__a.length) {G__23382__a[G__23382__i] = arguments[G__23382__i + 0]; ++G__23382__i;}
  args = new cljs.core.IndexedSeq(G__23382__a,0);
} 
return G__23381__delegate.call(this,args);};
G__23381.cljs$lang$maxFixedArity = 0;
G__23381.cljs$lang$applyTo = (function (arglist__23383){
var args = cljs.core.seq(arglist__23383);
return G__23381__delegate(args);
});
G__23381.cljs$core$IFn$_invoke$arity$variadic = G__23381__delegate;
return G__23381;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__23438 = null;
var G__23438__0 = (function (){
var G__23411 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23411) : f.call(null,G__23411));
});
var G__23438__1 = (function (x){
var G__23412 = (function (){var G__23413 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23413) : g.call(null,G__23413));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23412) : f.call(null,G__23412));
});
var G__23438__2 = (function (x,y){
var G__23414 = (function (){var G__23415 = x;
var G__23416 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23415,G__23416) : g.call(null,G__23415,G__23416));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23414) : f.call(null,G__23414));
});
var G__23438__3 = (function (x,y,z){
var G__23417 = (function (){var G__23418 = x;
var G__23419 = y;
var G__23420 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23418,G__23419,G__23420) : g.call(null,G__23418,G__23419,G__23420));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23417) : f.call(null,G__23417));
});
var G__23438__4 = (function() { 
var G__23439__delegate = function (x,y,z,args){
var G__23421 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23421) : f.call(null,G__23421));
};
var G__23439 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23440__i = 0, G__23440__a = new Array(arguments.length -  3);
while (G__23440__i < G__23440__a.length) {G__23440__a[G__23440__i] = arguments[G__23440__i + 3]; ++G__23440__i;}
  args = new cljs.core.IndexedSeq(G__23440__a,0);
} 
return G__23439__delegate.call(this,x,y,z,args);};
G__23439.cljs$lang$maxFixedArity = 3;
G__23439.cljs$lang$applyTo = (function (arglist__23441){
var x = cljs.core.first(arglist__23441);
arglist__23441 = cljs.core.next(arglist__23441);
var y = cljs.core.first(arglist__23441);
arglist__23441 = cljs.core.next(arglist__23441);
var z = cljs.core.first(arglist__23441);
var args = cljs.core.rest(arglist__23441);
return G__23439__delegate(x,y,z,args);
});
G__23439.cljs$core$IFn$_invoke$arity$variadic = G__23439__delegate;
return G__23439;
})()
;
G__23438 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23438__0.call(this);
case 1:
return G__23438__1.call(this,x);
case 2:
return G__23438__2.call(this,x,y);
case 3:
return G__23438__3.call(this,x,y,z);
default:
var G__23442 = null;
if (arguments.length > 3) {
var G__23443__i = 0, G__23443__a = new Array(arguments.length -  3);
while (G__23443__i < G__23443__a.length) {G__23443__a[G__23443__i] = arguments[G__23443__i + 3]; ++G__23443__i;}
G__23442 = new cljs.core.IndexedSeq(G__23443__a,0);
}
return G__23438__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23438.cljs$lang$maxFixedArity = 3;
G__23438.cljs$lang$applyTo = G__23438__4.cljs$lang$applyTo;
G__23438.cljs$core$IFn$_invoke$arity$0 = G__23438__0;
G__23438.cljs$core$IFn$_invoke$arity$1 = G__23438__1;
G__23438.cljs$core$IFn$_invoke$arity$2 = G__23438__2;
G__23438.cljs$core$IFn$_invoke$arity$3 = G__23438__3;
G__23438.cljs$core$IFn$_invoke$arity$variadic = G__23438__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23438;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__23444 = null;
var G__23444__0 = (function (){
var G__23422 = (function (){var G__23423 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23423) : g.call(null,G__23423));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23422) : f.call(null,G__23422));
});
var G__23444__1 = (function (x){
var G__23424 = (function (){var G__23425 = (function (){var G__23426 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23426) : h.call(null,G__23426));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23425) : g.call(null,G__23425));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23424) : f.call(null,G__23424));
});
var G__23444__2 = (function (x,y){
var G__23427 = (function (){var G__23428 = (function (){var G__23429 = x;
var G__23430 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23429,G__23430) : h.call(null,G__23429,G__23430));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23428) : g.call(null,G__23428));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23427) : f.call(null,G__23427));
});
var G__23444__3 = (function (x,y,z){
var G__23431 = (function (){var G__23432 = (function (){var G__23433 = x;
var G__23434 = y;
var G__23435 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23433,G__23434,G__23435) : h.call(null,G__23433,G__23434,G__23435));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23432) : g.call(null,G__23432));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23431) : f.call(null,G__23431));
});
var G__23444__4 = (function() { 
var G__23445__delegate = function (x,y,z,args){
var G__23436 = (function (){var G__23437 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23437) : g.call(null,G__23437));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23436) : f.call(null,G__23436));
};
var G__23445 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23446__i = 0, G__23446__a = new Array(arguments.length -  3);
while (G__23446__i < G__23446__a.length) {G__23446__a[G__23446__i] = arguments[G__23446__i + 3]; ++G__23446__i;}
  args = new cljs.core.IndexedSeq(G__23446__a,0);
} 
return G__23445__delegate.call(this,x,y,z,args);};
G__23445.cljs$lang$maxFixedArity = 3;
G__23445.cljs$lang$applyTo = (function (arglist__23447){
var x = cljs.core.first(arglist__23447);
arglist__23447 = cljs.core.next(arglist__23447);
var y = cljs.core.first(arglist__23447);
arglist__23447 = cljs.core.next(arglist__23447);
var z = cljs.core.first(arglist__23447);
var args = cljs.core.rest(arglist__23447);
return G__23445__delegate(x,y,z,args);
});
G__23445.cljs$core$IFn$_invoke$arity$variadic = G__23445__delegate;
return G__23445;
})()
;
G__23444 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23444__0.call(this);
case 1:
return G__23444__1.call(this,x);
case 2:
return G__23444__2.call(this,x,y);
case 3:
return G__23444__3.call(this,x,y,z);
default:
var G__23448 = null;
if (arguments.length > 3) {
var G__23449__i = 0, G__23449__a = new Array(arguments.length -  3);
while (G__23449__i < G__23449__a.length) {G__23449__a[G__23449__i] = arguments[G__23449__i + 3]; ++G__23449__i;}
G__23448 = new cljs.core.IndexedSeq(G__23449__a,0);
}
return G__23444__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23444.cljs$lang$maxFixedArity = 3;
G__23444.cljs$lang$applyTo = G__23444__4.cljs$lang$applyTo;
G__23444.cljs$core$IFn$_invoke$arity$0 = G__23444__0;
G__23444.cljs$core$IFn$_invoke$arity$1 = G__23444__1;
G__23444.cljs$core$IFn$_invoke$arity$2 = G__23444__2;
G__23444.cljs$core$IFn$_invoke$arity$3 = G__23444__3;
G__23444.cljs$core$IFn$_invoke$arity$variadic = G__23444__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23444;
})()
});
var comp__4 = (function() { 
var G__23450__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__23451__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__23452 = cljs.core.first(fs__$2).call(null,ret);
var G__23453 = cljs.core.next(fs__$2);
ret = G__23452;
fs__$2 = G__23453;
continue;
} else {
return ret;
}
break;
}
};
var G__23451 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23454__i = 0, G__23454__a = new Array(arguments.length -  0);
while (G__23454__i < G__23454__a.length) {G__23454__a[G__23454__i] = arguments[G__23454__i + 0]; ++G__23454__i;}
  args = new cljs.core.IndexedSeq(G__23454__a,0);
} 
return G__23451__delegate.call(this,args);};
G__23451.cljs$lang$maxFixedArity = 0;
G__23451.cljs$lang$applyTo = (function (arglist__23455){
var args = cljs.core.seq(arglist__23455);
return G__23451__delegate(args);
});
G__23451.cljs$core$IFn$_invoke$arity$variadic = G__23451__delegate;
return G__23451;
})()
;
;})(fs__$1))
};
var G__23450 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23456__i = 0, G__23456__a = new Array(arguments.length -  3);
while (G__23456__i < G__23456__a.length) {G__23456__a[G__23456__i] = arguments[G__23456__i + 3]; ++G__23456__i;}
  fs = new cljs.core.IndexedSeq(G__23456__a,0);
} 
return G__23450__delegate.call(this,f1,f2,f3,fs);};
G__23450.cljs$lang$maxFixedArity = 3;
G__23450.cljs$lang$applyTo = (function (arglist__23457){
var f1 = cljs.core.first(arglist__23457);
arglist__23457 = cljs.core.next(arglist__23457);
var f2 = cljs.core.first(arglist__23457);
arglist__23457 = cljs.core.next(arglist__23457);
var f3 = cljs.core.first(arglist__23457);
var fs = cljs.core.rest(arglist__23457);
return G__23450__delegate(f1,f2,f3,fs);
});
G__23450.cljs$core$IFn$_invoke$arity$variadic = G__23450__delegate;
return G__23450;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__23458 = null;
if (arguments.length > 3) {
var G__23459__i = 0, G__23459__a = new Array(arguments.length -  3);
while (G__23459__i < G__23459__a.length) {G__23459__a[G__23459__i] = arguments[G__23459__i + 3]; ++G__23459__i;}
G__23458 = new cljs.core.IndexedSeq(G__23459__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__23458);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__23544 = null;
var G__23544__0 = (function (){
var G__23502 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23502) : f.call(null,G__23502));
});
var G__23544__1 = (function (x){
var G__23503 = arg1;
var G__23504 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23503,G__23504) : f.call(null,G__23503,G__23504));
});
var G__23544__2 = (function (x,y){
var G__23505 = arg1;
var G__23506 = x;
var G__23507 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23505,G__23506,G__23507) : f.call(null,G__23505,G__23506,G__23507));
});
var G__23544__3 = (function (x,y,z){
var G__23508 = arg1;
var G__23509 = x;
var G__23510 = y;
var G__23511 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23508,G__23509,G__23510,G__23511) : f.call(null,G__23508,G__23509,G__23510,G__23511));
});
var G__23544__4 = (function() { 
var G__23545__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__23545 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23546__i = 0, G__23546__a = new Array(arguments.length -  3);
while (G__23546__i < G__23546__a.length) {G__23546__a[G__23546__i] = arguments[G__23546__i + 3]; ++G__23546__i;}
  args = new cljs.core.IndexedSeq(G__23546__a,0);
} 
return G__23545__delegate.call(this,x,y,z,args);};
G__23545.cljs$lang$maxFixedArity = 3;
G__23545.cljs$lang$applyTo = (function (arglist__23547){
var x = cljs.core.first(arglist__23547);
arglist__23547 = cljs.core.next(arglist__23547);
var y = cljs.core.first(arglist__23547);
arglist__23547 = cljs.core.next(arglist__23547);
var z = cljs.core.first(arglist__23547);
var args = cljs.core.rest(arglist__23547);
return G__23545__delegate(x,y,z,args);
});
G__23545.cljs$core$IFn$_invoke$arity$variadic = G__23545__delegate;
return G__23545;
})()
;
G__23544 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23544__0.call(this);
case 1:
return G__23544__1.call(this,x);
case 2:
return G__23544__2.call(this,x,y);
case 3:
return G__23544__3.call(this,x,y,z);
default:
var G__23548 = null;
if (arguments.length > 3) {
var G__23549__i = 0, G__23549__a = new Array(arguments.length -  3);
while (G__23549__i < G__23549__a.length) {G__23549__a[G__23549__i] = arguments[G__23549__i + 3]; ++G__23549__i;}
G__23548 = new cljs.core.IndexedSeq(G__23549__a,0);
}
return G__23544__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23544.cljs$lang$maxFixedArity = 3;
G__23544.cljs$lang$applyTo = G__23544__4.cljs$lang$applyTo;
G__23544.cljs$core$IFn$_invoke$arity$0 = G__23544__0;
G__23544.cljs$core$IFn$_invoke$arity$1 = G__23544__1;
G__23544.cljs$core$IFn$_invoke$arity$2 = G__23544__2;
G__23544.cljs$core$IFn$_invoke$arity$3 = G__23544__3;
G__23544.cljs$core$IFn$_invoke$arity$variadic = G__23544__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23544;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__23550 = null;
var G__23550__0 = (function (){
var G__23512 = arg1;
var G__23513 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23512,G__23513) : f.call(null,G__23512,G__23513));
});
var G__23550__1 = (function (x){
var G__23514 = arg1;
var G__23515 = arg2;
var G__23516 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23514,G__23515,G__23516) : f.call(null,G__23514,G__23515,G__23516));
});
var G__23550__2 = (function (x,y){
var G__23517 = arg1;
var G__23518 = arg2;
var G__23519 = x;
var G__23520 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23517,G__23518,G__23519,G__23520) : f.call(null,G__23517,G__23518,G__23519,G__23520));
});
var G__23550__3 = (function (x,y,z){
var G__23521 = arg1;
var G__23522 = arg2;
var G__23523 = x;
var G__23524 = y;
var G__23525 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23521,G__23522,G__23523,G__23524,G__23525) : f.call(null,G__23521,G__23522,G__23523,G__23524,G__23525));
});
var G__23550__4 = (function() { 
var G__23551__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__23551 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23552__i = 0, G__23552__a = new Array(arguments.length -  3);
while (G__23552__i < G__23552__a.length) {G__23552__a[G__23552__i] = arguments[G__23552__i + 3]; ++G__23552__i;}
  args = new cljs.core.IndexedSeq(G__23552__a,0);
} 
return G__23551__delegate.call(this,x,y,z,args);};
G__23551.cljs$lang$maxFixedArity = 3;
G__23551.cljs$lang$applyTo = (function (arglist__23553){
var x = cljs.core.first(arglist__23553);
arglist__23553 = cljs.core.next(arglist__23553);
var y = cljs.core.first(arglist__23553);
arglist__23553 = cljs.core.next(arglist__23553);
var z = cljs.core.first(arglist__23553);
var args = cljs.core.rest(arglist__23553);
return G__23551__delegate(x,y,z,args);
});
G__23551.cljs$core$IFn$_invoke$arity$variadic = G__23551__delegate;
return G__23551;
})()
;
G__23550 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23550__0.call(this);
case 1:
return G__23550__1.call(this,x);
case 2:
return G__23550__2.call(this,x,y);
case 3:
return G__23550__3.call(this,x,y,z);
default:
var G__23554 = null;
if (arguments.length > 3) {
var G__23555__i = 0, G__23555__a = new Array(arguments.length -  3);
while (G__23555__i < G__23555__a.length) {G__23555__a[G__23555__i] = arguments[G__23555__i + 3]; ++G__23555__i;}
G__23554 = new cljs.core.IndexedSeq(G__23555__a,0);
}
return G__23550__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23554);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23550.cljs$lang$maxFixedArity = 3;
G__23550.cljs$lang$applyTo = G__23550__4.cljs$lang$applyTo;
G__23550.cljs$core$IFn$_invoke$arity$0 = G__23550__0;
G__23550.cljs$core$IFn$_invoke$arity$1 = G__23550__1;
G__23550.cljs$core$IFn$_invoke$arity$2 = G__23550__2;
G__23550.cljs$core$IFn$_invoke$arity$3 = G__23550__3;
G__23550.cljs$core$IFn$_invoke$arity$variadic = G__23550__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23550;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__23556 = null;
var G__23556__0 = (function (){
var G__23526 = arg1;
var G__23527 = arg2;
var G__23528 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23526,G__23527,G__23528) : f.call(null,G__23526,G__23527,G__23528));
});
var G__23556__1 = (function (x){
var G__23529 = arg1;
var G__23530 = arg2;
var G__23531 = arg3;
var G__23532 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23529,G__23530,G__23531,G__23532) : f.call(null,G__23529,G__23530,G__23531,G__23532));
});
var G__23556__2 = (function (x,y){
var G__23533 = arg1;
var G__23534 = arg2;
var G__23535 = arg3;
var G__23536 = x;
var G__23537 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23533,G__23534,G__23535,G__23536,G__23537) : f.call(null,G__23533,G__23534,G__23535,G__23536,G__23537));
});
var G__23556__3 = (function (x,y,z){
var G__23538 = arg1;
var G__23539 = arg2;
var G__23540 = arg3;
var G__23541 = x;
var G__23542 = y;
var G__23543 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__23538,G__23539,G__23540,G__23541,G__23542,G__23543) : f.call(null,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543));
});
var G__23556__4 = (function() { 
var G__23557__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__23557 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23558__i = 0, G__23558__a = new Array(arguments.length -  3);
while (G__23558__i < G__23558__a.length) {G__23558__a[G__23558__i] = arguments[G__23558__i + 3]; ++G__23558__i;}
  args = new cljs.core.IndexedSeq(G__23558__a,0);
} 
return G__23557__delegate.call(this,x,y,z,args);};
G__23557.cljs$lang$maxFixedArity = 3;
G__23557.cljs$lang$applyTo = (function (arglist__23559){
var x = cljs.core.first(arglist__23559);
arglist__23559 = cljs.core.next(arglist__23559);
var y = cljs.core.first(arglist__23559);
arglist__23559 = cljs.core.next(arglist__23559);
var z = cljs.core.first(arglist__23559);
var args = cljs.core.rest(arglist__23559);
return G__23557__delegate(x,y,z,args);
});
G__23557.cljs$core$IFn$_invoke$arity$variadic = G__23557__delegate;
return G__23557;
})()
;
G__23556 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23556__0.call(this);
case 1:
return G__23556__1.call(this,x);
case 2:
return G__23556__2.call(this,x,y);
case 3:
return G__23556__3.call(this,x,y,z);
default:
var G__23560 = null;
if (arguments.length > 3) {
var G__23561__i = 0, G__23561__a = new Array(arguments.length -  3);
while (G__23561__i < G__23561__a.length) {G__23561__a[G__23561__i] = arguments[G__23561__i + 3]; ++G__23561__i;}
G__23560 = new cljs.core.IndexedSeq(G__23561__a,0);
}
return G__23556__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23556.cljs$lang$maxFixedArity = 3;
G__23556.cljs$lang$applyTo = G__23556__4.cljs$lang$applyTo;
G__23556.cljs$core$IFn$_invoke$arity$0 = G__23556__0;
G__23556.cljs$core$IFn$_invoke$arity$1 = G__23556__1;
G__23556.cljs$core$IFn$_invoke$arity$2 = G__23556__2;
G__23556.cljs$core$IFn$_invoke$arity$3 = G__23556__3;
G__23556.cljs$core$IFn$_invoke$arity$variadic = G__23556__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23556;
})()
});
var partial__5 = (function() { 
var G__23562__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__23563__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__23563 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23564__i = 0, G__23564__a = new Array(arguments.length -  0);
while (G__23564__i < G__23564__a.length) {G__23564__a[G__23564__i] = arguments[G__23564__i + 0]; ++G__23564__i;}
  args = new cljs.core.IndexedSeq(G__23564__a,0);
} 
return G__23563__delegate.call(this,args);};
G__23563.cljs$lang$maxFixedArity = 0;
G__23563.cljs$lang$applyTo = (function (arglist__23565){
var args = cljs.core.seq(arglist__23565);
return G__23563__delegate(args);
});
G__23563.cljs$core$IFn$_invoke$arity$variadic = G__23563__delegate;
return G__23563;
})()
;
};
var G__23562 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__23566__i = 0, G__23566__a = new Array(arguments.length -  4);
while (G__23566__i < G__23566__a.length) {G__23566__a[G__23566__i] = arguments[G__23566__i + 4]; ++G__23566__i;}
  more = new cljs.core.IndexedSeq(G__23566__a,0);
} 
return G__23562__delegate.call(this,f,arg1,arg2,arg3,more);};
G__23562.cljs$lang$maxFixedArity = 4;
G__23562.cljs$lang$applyTo = (function (arglist__23567){
var f = cljs.core.first(arglist__23567);
arglist__23567 = cljs.core.next(arglist__23567);
var arg1 = cljs.core.first(arglist__23567);
arglist__23567 = cljs.core.next(arglist__23567);
var arg2 = cljs.core.first(arglist__23567);
arglist__23567 = cljs.core.next(arglist__23567);
var arg3 = cljs.core.first(arglist__23567);
var more = cljs.core.rest(arglist__23567);
return G__23562__delegate(f,arg1,arg2,arg3,more);
});
G__23562.cljs$core$IFn$_invoke$arity$variadic = G__23562__delegate;
return G__23562;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__23568 = null;
if (arguments.length > 4) {
var G__23569__i = 0, G__23569__a = new Array(arguments.length -  4);
while (G__23569__i < G__23569__a.length) {G__23569__a[G__23569__i] = arguments[G__23569__i + 4]; ++G__23569__i;}
G__23568 = new cljs.core.IndexedSeq(G__23569__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__23568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__23602 = null;
var G__23602__1 = (function (a){
var G__23586 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23586) : f.call(null,G__23586));
});
var G__23602__2 = (function (a,b){
var G__23587 = (((a == null))?x:a);
var G__23588 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23587,G__23588) : f.call(null,G__23587,G__23588));
});
var G__23602__3 = (function (a,b,c){
var G__23589 = (((a == null))?x:a);
var G__23590 = b;
var G__23591 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23589,G__23590,G__23591) : f.call(null,G__23589,G__23590,G__23591));
});
var G__23602__4 = (function() { 
var G__23603__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__23603 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23604__i = 0, G__23604__a = new Array(arguments.length -  3);
while (G__23604__i < G__23604__a.length) {G__23604__a[G__23604__i] = arguments[G__23604__i + 3]; ++G__23604__i;}
  ds = new cljs.core.IndexedSeq(G__23604__a,0);
} 
return G__23603__delegate.call(this,a,b,c,ds);};
G__23603.cljs$lang$maxFixedArity = 3;
G__23603.cljs$lang$applyTo = (function (arglist__23605){
var a = cljs.core.first(arglist__23605);
arglist__23605 = cljs.core.next(arglist__23605);
var b = cljs.core.first(arglist__23605);
arglist__23605 = cljs.core.next(arglist__23605);
var c = cljs.core.first(arglist__23605);
var ds = cljs.core.rest(arglist__23605);
return G__23603__delegate(a,b,c,ds);
});
G__23603.cljs$core$IFn$_invoke$arity$variadic = G__23603__delegate;
return G__23603;
})()
;
G__23602 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__23602__1.call(this,a);
case 2:
return G__23602__2.call(this,a,b);
case 3:
return G__23602__3.call(this,a,b,c);
default:
var G__23606 = null;
if (arguments.length > 3) {
var G__23607__i = 0, G__23607__a = new Array(arguments.length -  3);
while (G__23607__i < G__23607__a.length) {G__23607__a[G__23607__i] = arguments[G__23607__i + 3]; ++G__23607__i;}
G__23606 = new cljs.core.IndexedSeq(G__23607__a,0);
}
return G__23602__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23602.cljs$lang$maxFixedArity = 3;
G__23602.cljs$lang$applyTo = G__23602__4.cljs$lang$applyTo;
G__23602.cljs$core$IFn$_invoke$arity$1 = G__23602__1;
G__23602.cljs$core$IFn$_invoke$arity$2 = G__23602__2;
G__23602.cljs$core$IFn$_invoke$arity$3 = G__23602__3;
G__23602.cljs$core$IFn$_invoke$arity$variadic = G__23602__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23602;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__23608 = null;
var G__23608__2 = (function (a,b){
var G__23592 = (((a == null))?x:a);
var G__23593 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23592,G__23593) : f.call(null,G__23592,G__23593));
});
var G__23608__3 = (function (a,b,c){
var G__23594 = (((a == null))?x:a);
var G__23595 = (((b == null))?y:b);
var G__23596 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23594,G__23595,G__23596) : f.call(null,G__23594,G__23595,G__23596));
});
var G__23608__4 = (function() { 
var G__23609__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__23609 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23610__i = 0, G__23610__a = new Array(arguments.length -  3);
while (G__23610__i < G__23610__a.length) {G__23610__a[G__23610__i] = arguments[G__23610__i + 3]; ++G__23610__i;}
  ds = new cljs.core.IndexedSeq(G__23610__a,0);
} 
return G__23609__delegate.call(this,a,b,c,ds);};
G__23609.cljs$lang$maxFixedArity = 3;
G__23609.cljs$lang$applyTo = (function (arglist__23611){
var a = cljs.core.first(arglist__23611);
arglist__23611 = cljs.core.next(arglist__23611);
var b = cljs.core.first(arglist__23611);
arglist__23611 = cljs.core.next(arglist__23611);
var c = cljs.core.first(arglist__23611);
var ds = cljs.core.rest(arglist__23611);
return G__23609__delegate(a,b,c,ds);
});
G__23609.cljs$core$IFn$_invoke$arity$variadic = G__23609__delegate;
return G__23609;
})()
;
G__23608 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23608__2.call(this,a,b);
case 3:
return G__23608__3.call(this,a,b,c);
default:
var G__23612 = null;
if (arguments.length > 3) {
var G__23613__i = 0, G__23613__a = new Array(arguments.length -  3);
while (G__23613__i < G__23613__a.length) {G__23613__a[G__23613__i] = arguments[G__23613__i + 3]; ++G__23613__i;}
G__23612 = new cljs.core.IndexedSeq(G__23613__a,0);
}
return G__23608__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23608.cljs$lang$maxFixedArity = 3;
G__23608.cljs$lang$applyTo = G__23608__4.cljs$lang$applyTo;
G__23608.cljs$core$IFn$_invoke$arity$2 = G__23608__2;
G__23608.cljs$core$IFn$_invoke$arity$3 = G__23608__3;
G__23608.cljs$core$IFn$_invoke$arity$variadic = G__23608__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23608;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__23614 = null;
var G__23614__2 = (function (a,b){
var G__23597 = (((a == null))?x:a);
var G__23598 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23597,G__23598) : f.call(null,G__23597,G__23598));
});
var G__23614__3 = (function (a,b,c){
var G__23599 = (((a == null))?x:a);
var G__23600 = (((b == null))?y:b);
var G__23601 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23599,G__23600,G__23601) : f.call(null,G__23599,G__23600,G__23601));
});
var G__23614__4 = (function() { 
var G__23615__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__23615 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23616__i = 0, G__23616__a = new Array(arguments.length -  3);
while (G__23616__i < G__23616__a.length) {G__23616__a[G__23616__i] = arguments[G__23616__i + 3]; ++G__23616__i;}
  ds = new cljs.core.IndexedSeq(G__23616__a,0);
} 
return G__23615__delegate.call(this,a,b,c,ds);};
G__23615.cljs$lang$maxFixedArity = 3;
G__23615.cljs$lang$applyTo = (function (arglist__23617){
var a = cljs.core.first(arglist__23617);
arglist__23617 = cljs.core.next(arglist__23617);
var b = cljs.core.first(arglist__23617);
arglist__23617 = cljs.core.next(arglist__23617);
var c = cljs.core.first(arglist__23617);
var ds = cljs.core.rest(arglist__23617);
return G__23615__delegate(a,b,c,ds);
});
G__23615.cljs$core$IFn$_invoke$arity$variadic = G__23615__delegate;
return G__23615;
})()
;
G__23614 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23614__2.call(this,a,b);
case 3:
return G__23614__3.call(this,a,b,c);
default:
var G__23618 = null;
if (arguments.length > 3) {
var G__23619__i = 0, G__23619__a = new Array(arguments.length -  3);
while (G__23619__i < G__23619__a.length) {G__23619__a[G__23619__i] = arguments[G__23619__i + 3]; ++G__23619__i;}
G__23618 = new cljs.core.IndexedSeq(G__23619__a,0);
}
return G__23614__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23614.cljs$lang$maxFixedArity = 3;
G__23614.cljs$lang$applyTo = G__23614__4.cljs$lang$applyTo;
G__23614.cljs$core$IFn$_invoke$arity$2 = G__23614__2;
G__23614.cljs$core$IFn$_invoke$arity$3 = G__23614__3;
G__23614.cljs$core$IFn$_invoke$arity$variadic = G__23614__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23614;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__23650 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__23650) : cljs.core.volatile_BANG_.call(null,G__23650));
})();
return ((function (i){
return (function() {
var G__23680 = null;
var G__23680__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23680__1 = (function (result){
var G__23651 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23651) : rf.call(null,G__23651));
});
var G__23680__2 = (function (result,input){
var G__23652 = result;
var G__23653 = (function (){var G__23654 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__23655 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23654,G__23655) : f.call(null,G__23654,G__23655));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23652,G__23653) : rf.call(null,G__23652,G__23653));
});
G__23680 = function(result,input){
switch(arguments.length){
case 0:
return G__23680__0.call(this);
case 1:
return G__23680__1.call(this,result);
case 2:
return G__23680__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23680.cljs$core$IFn$_invoke$arity$0 = G__23680__0;
G__23680.cljs$core$IFn$_invoke$arity$1 = G__23680__1;
G__23680.cljs$core$IFn$_invoke$arity$2 = G__23680__2;
return G__23680;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13660__auto___23681 = size;
var i_23682 = (0);
while(true){
if((i_23682 < n__13660__auto___23681)){
cljs.core.chunk_append(b,(function (){var G__23676 = (idx + i_23682);
var G__23677 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23682);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23676,G__23677) : f.call(null,G__23676,G__23677));
})());

var G__23683 = (i_23682 + (1));
i_23682 = G__23683;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23678 = idx;
var G__23679 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23678,G__23679) : f.call(null,G__23678,G__23679));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__23702 = null;
var G__23702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23702__1 = (function (result){
var G__23696 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23696) : rf.call(null,G__23696));
});
var G__23702__2 = (function (result,input){
var v = (function (){var G__23697 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23697) : f.call(null,G__23697));
})();
if((v == null)){
return result;
} else {
var G__23698 = result;
var G__23699 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23698,G__23699) : rf.call(null,G__23698,G__23699));
}
});
G__23702 = function(result,input){
switch(arguments.length){
case 0:
return G__23702__0.call(this);
case 1:
return G__23702__1.call(this,result);
case 2:
return G__23702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23702.cljs$core$IFn$_invoke$arity$0 = G__23702__0;
G__23702.cljs$core$IFn$_invoke$arity$1 = G__23702__1;
G__23702.cljs$core$IFn$_invoke$arity$2 = G__23702__2;
return G__23702;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13660__auto___23703 = size;
var i_23704 = (0);
while(true){
if((i_23704 < n__13660__auto___23703)){
var x_23705 = (function (){var G__23700 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23704);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23700) : f.call(null,G__23700));
})();
if((x_23705 == null)){
} else {
cljs.core.chunk_append(b,x_23705);
}

var G__23706 = (i_23704 + (1));
i_23704 = G__23706;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23701 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23701) : f.call(null,G__23701));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23707 = this$__$1;
return goog.getUid(G__23707);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__23708 = cljs.core.seq(self__.watches);
var chunk__23709 = null;
var count__23710 = (0);
var i__23711 = (0);
while(true){
if((i__23711 < count__23710)){
var vec__23712 = chunk__23709.cljs$core$IIndexed$_nth$arity$2(null,i__23711);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23712,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23712,(1),null);
var G__23713_23722 = key;
var G__23714_23723 = this$__$1;
var G__23715_23724 = oldval;
var G__23716_23725 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23713_23722,G__23714_23723,G__23715_23724,G__23716_23725) : f.call(null,G__23713_23722,G__23714_23723,G__23715_23724,G__23716_23725));

var G__23726 = seq__23708;
var G__23727 = chunk__23709;
var G__23728 = count__23710;
var G__23729 = (i__23711 + (1));
seq__23708 = G__23726;
chunk__23709 = G__23727;
count__23710 = G__23728;
i__23711 = G__23729;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23708);
if(temp__4126__auto__){
var seq__23708__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23708__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__23708__$1);
var G__23730 = cljs.core.chunk_rest(seq__23708__$1);
var G__23731 = c__13560__auto__;
var G__23732 = cljs.core.count(c__13560__auto__);
var G__23733 = (0);
seq__23708 = G__23730;
chunk__23709 = G__23731;
count__23710 = G__23732;
i__23711 = G__23733;
continue;
} else {
var vec__23717 = cljs.core.first(seq__23708__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23717,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23717,(1),null);
var G__23718_23734 = key;
var G__23719_23735 = this$__$1;
var G__23720_23736 = oldval;
var G__23721_23737 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23718_23734,G__23719_23735,G__23720_23736,G__23721_23737) : f.call(null,G__23718_23734,G__23719_23735,G__23720_23736,G__23721_23737));

var G__23738 = cljs.core.next(seq__23708__$1);
var G__23739 = null;
var G__23740 = (0);
var G__23741 = (0);
seq__23708 = G__23738;
chunk__23709 = G__23739;
count__23710 = G__23740;
i__23711 = G__23741;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__23745__delegate = function (x,p__23742){
var map__23744 = p__23742;
var map__23744__$1 = ((cljs.core.seq_QMARK_(map__23744))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23744):map__23744);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23744__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23744__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__23745 = function (x,var_args){
var p__23742 = null;
if (arguments.length > 1) {
var G__23746__i = 0, G__23746__a = new Array(arguments.length -  1);
while (G__23746__i < G__23746__a.length) {G__23746__a[G__23746__i] = arguments[G__23746__i + 1]; ++G__23746__i;}
  p__23742 = new cljs.core.IndexedSeq(G__23746__a,0);
} 
return G__23745__delegate.call(this,x,p__23742);};
G__23745.cljs$lang$maxFixedArity = 1;
G__23745.cljs$lang$applyTo = (function (arglist__23747){
var x = cljs.core.first(arglist__23747);
var p__23742 = cljs.core.rest(arglist__23747);
return G__23745__delegate(x,p__23742);
});
G__23745.cljs$core$IFn$_invoke$arity$variadic = G__23745__delegate;
return G__23745;
})()
;
atom = function(x,var_args){
var p__23742 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__23748 = null;
if (arguments.length > 1) {
var G__23749__i = 0, G__23749__a = new Array(arguments.length -  1);
while (G__23749__i < G__23749__a.length) {G__23749__a[G__23749__i] = arguments[G__23749__i + 1]; ++G__23749__i;}
G__23748 = new cljs.core.IndexedSeq(G__23749__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__23752 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__23752) : validate.call(null,G__23752));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__23753 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23753) : cljs.core.pr_str.call(null,G__23753));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23760 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23760) : f.call(null,G__23760));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23761 = a.state;
var G__23762 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23761,G__23762) : f.call(null,G__23761,G__23762));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23763 = a.state;
var G__23764 = x;
var G__23765 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23763,G__23764,G__23765) : f.call(null,G__23763,G__23764,G__23765));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__23766__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__23766 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__23767__i = 0, G__23767__a = new Array(arguments.length -  4);
while (G__23767__i < G__23767__a.length) {G__23767__a[G__23767__i] = arguments[G__23767__i + 4]; ++G__23767__i;}
  more = new cljs.core.IndexedSeq(G__23767__a,0);
} 
return G__23766__delegate.call(this,a,f,x,y,more);};
G__23766.cljs$lang$maxFixedArity = 4;
G__23766.cljs$lang$applyTo = (function (arglist__23768){
var a = cljs.core.first(arglist__23768);
arglist__23768 = cljs.core.next(arglist__23768);
var f = cljs.core.first(arglist__23768);
arglist__23768 = cljs.core.next(arglist__23768);
var x = cljs.core.first(arglist__23768);
arglist__23768 = cljs.core.next(arglist__23768);
var y = cljs.core.first(arglist__23768);
var more = cljs.core.rest(arglist__23768);
return G__23766__delegate(a,f,x,y,more);
});
G__23766.cljs$core$IFn$_invoke$arity$variadic = G__23766__delegate;
return G__23766;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__23769 = null;
if (arguments.length > 4) {
var G__23770__i = 0, G__23770__a = new Array(arguments.length -  4);
while (G__23770__i < G__23770__a.length) {G__23770__a[G__23770__i] = arguments[G__23770__i + 4]; ++G__23770__i;}
G__23769 = new cljs.core.IndexedSeq(G__23770__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__23769);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23837 = null;
var G__23837__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23837__1 = (function (result){
var G__23804 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23804) : rf.call(null,G__23804));
});
var G__23837__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__23805 = i;
var G__23806 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23805,G__23806) : f.call(null,G__23805,G__23806));
})();
if((v == null)){
return result;
} else {
var G__23807 = result;
var G__23808 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23807,G__23808) : rf.call(null,G__23807,G__23808));
}
});
G__23837 = function(result,input){
switch(arguments.length){
case 0:
return G__23837__0.call(this);
case 1:
return G__23837__1.call(this,result);
case 2:
return G__23837__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23837.cljs$core$IFn$_invoke$arity$0 = G__23837__0;
G__23837.cljs$core$IFn$_invoke$arity$1 = G__23837__1;
G__23837.cljs$core$IFn$_invoke$arity$2 = G__23837__2;
return G__23837;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13660__auto___23838 = size;
var i_23839 = (0);
while(true){
if((i_23839 < n__13660__auto___23838)){
var x_23840 = (function (){var G__23833 = (idx + i_23839);
var G__23834 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23839);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23833,G__23834) : f.call(null,G__23833,G__23834));
})();
if((x_23840 == null)){
} else {
cljs.core.chunk_append(b,x_23840);
}

var G__23841 = (i_23839 + (1));
i_23839 = G__23841;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23835 = idx;
var G__23836 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23835,G__23836) : f.call(null,G__23835,G__23836));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__24055 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24055) : p.call(null,G__24055));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24057 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24057) : p.call(null,G__24057));
})();
if(cljs.core.truth_(and__12761__auto__)){
var G__24058 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24058) : p.call(null,G__24058));
} else {
return and__12761__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24060 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24060) : p.call(null,G__24060));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24062 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24062) : p.call(null,G__24062));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var G__24063 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24063) : p.call(null,G__24063));
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__24232__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__24232 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24233__i = 0, G__24233__a = new Array(arguments.length -  3);
while (G__24233__i < G__24233__a.length) {G__24233__a[G__24233__i] = arguments[G__24233__i + 3]; ++G__24233__i;}
  args = new cljs.core.IndexedSeq(G__24233__a,0);
} 
return G__24232__delegate.call(this,x,y,z,args);};
G__24232.cljs$lang$maxFixedArity = 3;
G__24232.cljs$lang$applyTo = (function (arglist__24234){
var x = cljs.core.first(arglist__24234);
arglist__24234 = cljs.core.next(arglist__24234);
var y = cljs.core.first(arglist__24234);
arglist__24234 = cljs.core.next(arglist__24234);
var z = cljs.core.first(arglist__24234);
var args = cljs.core.rest(arglist__24234);
return G__24232__delegate(x,y,z,args);
});
G__24232.cljs$core$IFn$_invoke$arity$variadic = G__24232__delegate;
return G__24232;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__24235 = null;
if (arguments.length > 3) {
var G__24236__i = 0, G__24236__a = new Array(arguments.length -  3);
while (G__24236__i < G__24236__a.length) {G__24236__a[G__24236__i] = arguments[G__24236__i + 3]; ++G__24236__i;}
G__24235 = new cljs.core.IndexedSeq(G__24236__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24095 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24095) : p1.call(null,G__24095));
})();
if(cljs.core.truth_(and__12761__auto__)){
var G__24096 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24096) : p2.call(null,G__24096));
} else {
return and__12761__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24098 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24098) : p1.call(null,G__24098));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24100 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24100) : p1.call(null,G__24100));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var and__12761__auto____$2 = (function (){var G__24102 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24102) : p2.call(null,G__24102));
})();
if(cljs.core.truth_(and__12761__auto____$2)){
var G__24103 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24103) : p2.call(null,G__24103));
} else {
return and__12761__auto____$2;
}
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24105 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24105) : p1.call(null,G__24105));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24107 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24107) : p1.call(null,G__24107));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var and__12761__auto____$2 = (function (){var G__24109 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24109) : p1.call(null,G__24109));
})();
if(cljs.core.truth_(and__12761__auto____$2)){
var and__12761__auto____$3 = (function (){var G__24111 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24111) : p2.call(null,G__24111));
})();
if(cljs.core.truth_(and__12761__auto____$3)){
var and__12761__auto____$4 = (function (){var G__24113 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24113) : p2.call(null,G__24113));
})();
if(cljs.core.truth_(and__12761__auto____$4)){
var G__24114 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24114) : p2.call(null,G__24114));
} else {
return and__12761__auto____$4;
}
} else {
return and__12761__auto____$3;
}
} else {
return and__12761__auto____$2;
}
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__24237__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23842_SHARP_){
var and__12761__auto__ = (function (){var G__24119 = p1__23842_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24119) : p1.call(null,G__24119));
})();
if(cljs.core.truth_(and__12761__auto__)){
var G__24120 = p1__23842_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24120) : p2.call(null,G__24120));
} else {
return and__12761__auto__;
}
}),args)));
};
var G__24237 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24238__i = 0, G__24238__a = new Array(arguments.length -  3);
while (G__24238__i < G__24238__a.length) {G__24238__a[G__24238__i] = arguments[G__24238__i + 3]; ++G__24238__i;}
  args = new cljs.core.IndexedSeq(G__24238__a,0);
} 
return G__24237__delegate.call(this,x,y,z,args);};
G__24237.cljs$lang$maxFixedArity = 3;
G__24237.cljs$lang$applyTo = (function (arglist__24239){
var x = cljs.core.first(arglist__24239);
arglist__24239 = cljs.core.next(arglist__24239);
var y = cljs.core.first(arglist__24239);
arglist__24239 = cljs.core.next(arglist__24239);
var z = cljs.core.first(arglist__24239);
var args = cljs.core.rest(arglist__24239);
return G__24237__delegate(x,y,z,args);
});
G__24237.cljs$core$IFn$_invoke$arity$variadic = G__24237__delegate;
return G__24237;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__24240 = null;
if (arguments.length > 3) {
var G__24241__i = 0, G__24241__a = new Array(arguments.length -  3);
while (G__24241__i < G__24241__a.length) {G__24241__a[G__24241__i] = arguments[G__24241__i + 3]; ++G__24241__i;}
G__24240 = new cljs.core.IndexedSeq(G__24241__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24166 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24166) : p1.call(null,G__24166));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24168 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24168) : p2.call(null,G__24168));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var G__24169 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24169) : p3.call(null,G__24169));
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24171 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24171) : p1.call(null,G__24171));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24173 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24173) : p2.call(null,G__24173));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var and__12761__auto____$2 = (function (){var G__24175 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24175) : p3.call(null,G__24175));
})();
if(cljs.core.truth_(and__12761__auto____$2)){
var and__12761__auto____$3 = (function (){var G__24177 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24177) : p1.call(null,G__24177));
})();
if(cljs.core.truth_(and__12761__auto____$3)){
var and__12761__auto____$4 = (function (){var G__24179 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24179) : p2.call(null,G__24179));
})();
if(cljs.core.truth_(and__12761__auto____$4)){
var G__24180 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24180) : p3.call(null,G__24180));
} else {
return and__12761__auto____$4;
}
} else {
return and__12761__auto____$3;
}
} else {
return and__12761__auto____$2;
}
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12761__auto__ = (function (){var G__24182 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24182) : p1.call(null,G__24182));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24184 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24184) : p2.call(null,G__24184));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var and__12761__auto____$2 = (function (){var G__24186 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24186) : p3.call(null,G__24186));
})();
if(cljs.core.truth_(and__12761__auto____$2)){
var and__12761__auto____$3 = (function (){var G__24188 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24188) : p1.call(null,G__24188));
})();
if(cljs.core.truth_(and__12761__auto____$3)){
var and__12761__auto____$4 = (function (){var G__24190 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24190) : p2.call(null,G__24190));
})();
if(cljs.core.truth_(and__12761__auto____$4)){
var and__12761__auto____$5 = (function (){var G__24192 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24192) : p3.call(null,G__24192));
})();
if(cljs.core.truth_(and__12761__auto____$5)){
var and__12761__auto____$6 = (function (){var G__24194 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24194) : p1.call(null,G__24194));
})();
if(cljs.core.truth_(and__12761__auto____$6)){
var and__12761__auto____$7 = (function (){var G__24196 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24196) : p2.call(null,G__24196));
})();
if(cljs.core.truth_(and__12761__auto____$7)){
var G__24197 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24197) : p3.call(null,G__24197));
} else {
return and__12761__auto____$7;
}
} else {
return and__12761__auto____$6;
}
} else {
return and__12761__auto____$5;
}
} else {
return and__12761__auto____$4;
}
} else {
return and__12761__auto____$3;
}
} else {
return and__12761__auto____$2;
}
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__24242__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23843_SHARP_){
var and__12761__auto__ = (function (){var G__24204 = p1__23843_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24204) : p1.call(null,G__24204));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24206 = p1__23843_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24206) : p2.call(null,G__24206));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var G__24207 = p1__23843_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24207) : p3.call(null,G__24207));
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
}),args)));
};
var G__24242 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24243__i = 0, G__24243__a = new Array(arguments.length -  3);
while (G__24243__i < G__24243__a.length) {G__24243__a[G__24243__i] = arguments[G__24243__i + 3]; ++G__24243__i;}
  args = new cljs.core.IndexedSeq(G__24243__a,0);
} 
return G__24242__delegate.call(this,x,y,z,args);};
G__24242.cljs$lang$maxFixedArity = 3;
G__24242.cljs$lang$applyTo = (function (arglist__24244){
var x = cljs.core.first(arglist__24244);
arglist__24244 = cljs.core.next(arglist__24244);
var y = cljs.core.first(arglist__24244);
arglist__24244 = cljs.core.next(arglist__24244);
var z = cljs.core.first(arglist__24244);
var args = cljs.core.rest(arglist__24244);
return G__24242__delegate(x,y,z,args);
});
G__24242.cljs$core$IFn$_invoke$arity$variadic = G__24242__delegate;
return G__24242;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__24245 = null;
if (arguments.length > 3) {
var G__24246__i = 0, G__24246__a = new Array(arguments.length -  3);
while (G__24246__i < G__24246__a.length) {G__24246__a[G__24246__i] = arguments[G__24246__i + 3]; ++G__24246__i;}
G__24245 = new cljs.core.IndexedSeq(G__24246__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__24247__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23844_SHARP_){
var G__24223 = x;
return (p1__23844_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23844_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24223) : p1__23844_SHARP_.call(null,G__24223));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23845_SHARP_){
var and__12761__auto__ = (function (){var G__24225 = x;
return (p1__23845_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23845_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24225) : p1__23845_SHARP_.call(null,G__24225));
})();
if(cljs.core.truth_(and__12761__auto__)){
var G__24226 = y;
return (p1__23845_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23845_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24226) : p1__23845_SHARP_.call(null,G__24226));
} else {
return and__12761__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23846_SHARP_){
var and__12761__auto__ = (function (){var G__24228 = x;
return (p1__23846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24228) : p1__23846_SHARP_.call(null,G__24228));
})();
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__24230 = y;
return (p1__23846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24230) : p1__23846_SHARP_.call(null,G__24230));
})();
if(cljs.core.truth_(and__12761__auto____$1)){
var G__24231 = z;
return (p1__23846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24231) : p1__23846_SHARP_.call(null,G__24231));
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__24248__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23847_SHARP_){
return cljs.core.every_QMARK_(p1__23847_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__24248 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24249__i = 0, G__24249__a = new Array(arguments.length -  3);
while (G__24249__i < G__24249__a.length) {G__24249__a[G__24249__i] = arguments[G__24249__i + 3]; ++G__24249__i;}
  args = new cljs.core.IndexedSeq(G__24249__a,0);
} 
return G__24248__delegate.call(this,x,y,z,args);};
G__24248.cljs$lang$maxFixedArity = 3;
G__24248.cljs$lang$applyTo = (function (arglist__24250){
var x = cljs.core.first(arglist__24250);
arglist__24250 = cljs.core.next(arglist__24250);
var y = cljs.core.first(arglist__24250);
arglist__24250 = cljs.core.next(arglist__24250);
var z = cljs.core.first(arglist__24250);
var args = cljs.core.rest(arglist__24250);
return G__24248__delegate(x,y,z,args);
});
G__24248.cljs$core$IFn$_invoke$arity$variadic = G__24248__delegate;
return G__24248;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__24251 = null;
if (arguments.length > 3) {
var G__24252__i = 0, G__24252__a = new Array(arguments.length -  3);
while (G__24252__i < G__24252__a.length) {G__24252__a[G__24252__i] = arguments[G__24252__i + 3]; ++G__24252__i;}
G__24251 = new cljs.core.IndexedSeq(G__24252__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__24247 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__24253__i = 0, G__24253__a = new Array(arguments.length -  3);
while (G__24253__i < G__24253__a.length) {G__24253__a[G__24253__i] = arguments[G__24253__i + 3]; ++G__24253__i;}
  ps = new cljs.core.IndexedSeq(G__24253__a,0);
} 
return G__24247__delegate.call(this,p1,p2,p3,ps);};
G__24247.cljs$lang$maxFixedArity = 3;
G__24247.cljs$lang$applyTo = (function (arglist__24254){
var p1 = cljs.core.first(arglist__24254);
arglist__24254 = cljs.core.next(arglist__24254);
var p2 = cljs.core.first(arglist__24254);
arglist__24254 = cljs.core.next(arglist__24254);
var p3 = cljs.core.first(arglist__24254);
var ps = cljs.core.rest(arglist__24254);
return G__24247__delegate(p1,p2,p3,ps);
});
G__24247.cljs$core$IFn$_invoke$arity$variadic = G__24247__delegate;
return G__24247;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__24255 = null;
if (arguments.length > 3) {
var G__24256__i = 0, G__24256__a = new Array(arguments.length -  3);
while (G__24256__i < G__24256__a.length) {G__24256__a[G__24256__i] = arguments[G__24256__i + 3]; ++G__24256__i;}
G__24255 = new cljs.core.IndexedSeq(G__24256__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__24255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__24462 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24462) : p.call(null,G__24462));
});
var sp1__2 = (function (x,y){
var or__12773__auto__ = (function (){var G__24464 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24464) : p.call(null,G__24464));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var G__24465 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24465) : p.call(null,G__24465));
}
});
var sp1__3 = (function (x,y,z){
var or__12773__auto__ = (function (){var G__24467 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24467) : p.call(null,G__24467));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24469 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24469) : p.call(null,G__24469));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var G__24470 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24470) : p.call(null,G__24470));
}
}
});
var sp1__4 = (function() { 
var G__24631__delegate = function (x,y,z,args){
var or__12773__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__24631 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24632__i = 0, G__24632__a = new Array(arguments.length -  3);
while (G__24632__i < G__24632__a.length) {G__24632__a[G__24632__i] = arguments[G__24632__i + 3]; ++G__24632__i;}
  args = new cljs.core.IndexedSeq(G__24632__a,0);
} 
return G__24631__delegate.call(this,x,y,z,args);};
G__24631.cljs$lang$maxFixedArity = 3;
G__24631.cljs$lang$applyTo = (function (arglist__24633){
var x = cljs.core.first(arglist__24633);
arglist__24633 = cljs.core.next(arglist__24633);
var y = cljs.core.first(arglist__24633);
arglist__24633 = cljs.core.next(arglist__24633);
var z = cljs.core.first(arglist__24633);
var args = cljs.core.rest(arglist__24633);
return G__24631__delegate(x,y,z,args);
});
G__24631.cljs$core$IFn$_invoke$arity$variadic = G__24631__delegate;
return G__24631;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__24634 = null;
if (arguments.length > 3) {
var G__24635__i = 0, G__24635__a = new Array(arguments.length -  3);
while (G__24635__i < G__24635__a.length) {G__24635__a[G__24635__i] = arguments[G__24635__i + 3]; ++G__24635__i;}
G__24634 = new cljs.core.IndexedSeq(G__24635__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12773__auto__ = (function (){var G__24502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24502) : p1.call(null,G__24502));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var G__24503 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24503) : p2.call(null,G__24503));
}
});
var sp2__2 = (function (x,y){
var or__12773__auto__ = (function (){var G__24505 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24505) : p1.call(null,G__24505));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24507 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24507) : p1.call(null,G__24507));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var or__12773__auto____$2 = (function (){var G__24509 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24509) : p2.call(null,G__24509));
})();
if(cljs.core.truth_(or__12773__auto____$2)){
return or__12773__auto____$2;
} else {
var G__24510 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24510) : p2.call(null,G__24510));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12773__auto__ = (function (){var G__24512 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24512) : p1.call(null,G__24512));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24514 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24514) : p1.call(null,G__24514));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var or__12773__auto____$2 = (function (){var G__24516 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24516) : p1.call(null,G__24516));
})();
if(cljs.core.truth_(or__12773__auto____$2)){
return or__12773__auto____$2;
} else {
var or__12773__auto____$3 = (function (){var G__24518 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24518) : p2.call(null,G__24518));
})();
if(cljs.core.truth_(or__12773__auto____$3)){
return or__12773__auto____$3;
} else {
var or__12773__auto____$4 = (function (){var G__24520 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24520) : p2.call(null,G__24520));
})();
if(cljs.core.truth_(or__12773__auto____$4)){
return or__12773__auto____$4;
} else {
var G__24521 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24521) : p2.call(null,G__24521));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__24636__delegate = function (x,y,z,args){
var or__12773__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.some(((function (or__12773__auto__){
return (function (p1__24257_SHARP_){
var or__12773__auto____$1 = (function (){var G__24523 = p1__24257_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24523) : p1.call(null,G__24523));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var G__24524 = p1__24257_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24524) : p2.call(null,G__24524));
}
});})(or__12773__auto__))
,args);
}
};
var G__24636 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24637__i = 0, G__24637__a = new Array(arguments.length -  3);
while (G__24637__i < G__24637__a.length) {G__24637__a[G__24637__i] = arguments[G__24637__i + 3]; ++G__24637__i;}
  args = new cljs.core.IndexedSeq(G__24637__a,0);
} 
return G__24636__delegate.call(this,x,y,z,args);};
G__24636.cljs$lang$maxFixedArity = 3;
G__24636.cljs$lang$applyTo = (function (arglist__24638){
var x = cljs.core.first(arglist__24638);
arglist__24638 = cljs.core.next(arglist__24638);
var y = cljs.core.first(arglist__24638);
arglist__24638 = cljs.core.next(arglist__24638);
var z = cljs.core.first(arglist__24638);
var args = cljs.core.rest(arglist__24638);
return G__24636__delegate(x,y,z,args);
});
G__24636.cljs$core$IFn$_invoke$arity$variadic = G__24636__delegate;
return G__24636;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__24639 = null;
if (arguments.length > 3) {
var G__24640__i = 0, G__24640__a = new Array(arguments.length -  3);
while (G__24640__i < G__24640__a.length) {G__24640__a[G__24640__i] = arguments[G__24640__i + 3]; ++G__24640__i;}
G__24639 = new cljs.core.IndexedSeq(G__24640__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12773__auto__ = (function (){var G__24570 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24570) : p1.call(null,G__24570));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24572 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24572) : p2.call(null,G__24572));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var G__24573 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24573) : p3.call(null,G__24573));
}
}
});
var sp3__2 = (function (x,y){
var or__12773__auto__ = (function (){var G__24575 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24575) : p1.call(null,G__24575));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24577 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24577) : p2.call(null,G__24577));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var or__12773__auto____$2 = (function (){var G__24579 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24579) : p3.call(null,G__24579));
})();
if(cljs.core.truth_(or__12773__auto____$2)){
return or__12773__auto____$2;
} else {
var or__12773__auto____$3 = (function (){var G__24581 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24581) : p1.call(null,G__24581));
})();
if(cljs.core.truth_(or__12773__auto____$3)){
return or__12773__auto____$3;
} else {
var or__12773__auto____$4 = (function (){var G__24583 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24583) : p2.call(null,G__24583));
})();
if(cljs.core.truth_(or__12773__auto____$4)){
return or__12773__auto____$4;
} else {
var G__24584 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24584) : p3.call(null,G__24584));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12773__auto__ = (function (){var G__24586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24586) : p1.call(null,G__24586));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24588 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24588) : p2.call(null,G__24588));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var or__12773__auto____$2 = (function (){var G__24590 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24590) : p3.call(null,G__24590));
})();
if(cljs.core.truth_(or__12773__auto____$2)){
return or__12773__auto____$2;
} else {
var or__12773__auto____$3 = (function (){var G__24592 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24592) : p1.call(null,G__24592));
})();
if(cljs.core.truth_(or__12773__auto____$3)){
return or__12773__auto____$3;
} else {
var or__12773__auto____$4 = (function (){var G__24594 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24594) : p2.call(null,G__24594));
})();
if(cljs.core.truth_(or__12773__auto____$4)){
return or__12773__auto____$4;
} else {
var or__12773__auto____$5 = (function (){var G__24596 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24596) : p3.call(null,G__24596));
})();
if(cljs.core.truth_(or__12773__auto____$5)){
return or__12773__auto____$5;
} else {
var or__12773__auto____$6 = (function (){var G__24598 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24598) : p1.call(null,G__24598));
})();
if(cljs.core.truth_(or__12773__auto____$6)){
return or__12773__auto____$6;
} else {
var or__12773__auto____$7 = (function (){var G__24600 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24600) : p2.call(null,G__24600));
})();
if(cljs.core.truth_(or__12773__auto____$7)){
return or__12773__auto____$7;
} else {
var G__24601 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24601) : p3.call(null,G__24601));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__24641__delegate = function (x,y,z,args){
var or__12773__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.some(((function (or__12773__auto__){
return (function (p1__24258_SHARP_){
var or__12773__auto____$1 = (function (){var G__24603 = p1__24258_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24603) : p1.call(null,G__24603));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var or__12773__auto____$2 = (function (){var G__24605 = p1__24258_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24605) : p2.call(null,G__24605));
})();
if(cljs.core.truth_(or__12773__auto____$2)){
return or__12773__auto____$2;
} else {
var G__24606 = p1__24258_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24606) : p3.call(null,G__24606));
}
}
});})(or__12773__auto__))
,args);
}
};
var G__24641 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24642__i = 0, G__24642__a = new Array(arguments.length -  3);
while (G__24642__i < G__24642__a.length) {G__24642__a[G__24642__i] = arguments[G__24642__i + 3]; ++G__24642__i;}
  args = new cljs.core.IndexedSeq(G__24642__a,0);
} 
return G__24641__delegate.call(this,x,y,z,args);};
G__24641.cljs$lang$maxFixedArity = 3;
G__24641.cljs$lang$applyTo = (function (arglist__24643){
var x = cljs.core.first(arglist__24643);
arglist__24643 = cljs.core.next(arglist__24643);
var y = cljs.core.first(arglist__24643);
arglist__24643 = cljs.core.next(arglist__24643);
var z = cljs.core.first(arglist__24643);
var args = cljs.core.rest(arglist__24643);
return G__24641__delegate(x,y,z,args);
});
G__24641.cljs$core$IFn$_invoke$arity$variadic = G__24641__delegate;
return G__24641;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__24644 = null;
if (arguments.length > 3) {
var G__24645__i = 0, G__24645__a = new Array(arguments.length -  3);
while (G__24645__i < G__24645__a.length) {G__24645__a[G__24645__i] = arguments[G__24645__i + 3]; ++G__24645__i;}
G__24644 = new cljs.core.IndexedSeq(G__24645__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__24646__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__24259_SHARP_){
var G__24622 = x;
return (p1__24259_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24259_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24622) : p1__24259_SHARP_.call(null,G__24622));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__24260_SHARP_){
var or__12773__auto__ = (function (){var G__24624 = x;
return (p1__24260_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24260_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24624) : p1__24260_SHARP_.call(null,G__24624));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var G__24625 = y;
return (p1__24260_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24260_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24625) : p1__24260_SHARP_.call(null,G__24625));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__24261_SHARP_){
var or__12773__auto__ = (function (){var G__24627 = x;
return (p1__24261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24627) : p1__24261_SHARP_.call(null,G__24627));
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var G__24629 = y;
return (p1__24261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24629) : p1__24261_SHARP_.call(null,G__24629));
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var G__24630 = z;
return (p1__24261_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24261_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24630) : p1__24261_SHARP_.call(null,G__24630));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__24647__delegate = function (x,y,z,args){
var or__12773__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.some(((function (or__12773__auto__,ps__$1){
return (function (p1__24262_SHARP_){
return cljs.core.some(p1__24262_SHARP_,args);
});})(or__12773__auto__,ps__$1))
,ps__$1);
}
};
var G__24647 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24648__i = 0, G__24648__a = new Array(arguments.length -  3);
while (G__24648__i < G__24648__a.length) {G__24648__a[G__24648__i] = arguments[G__24648__i + 3]; ++G__24648__i;}
  args = new cljs.core.IndexedSeq(G__24648__a,0);
} 
return G__24647__delegate.call(this,x,y,z,args);};
G__24647.cljs$lang$maxFixedArity = 3;
G__24647.cljs$lang$applyTo = (function (arglist__24649){
var x = cljs.core.first(arglist__24649);
arglist__24649 = cljs.core.next(arglist__24649);
var y = cljs.core.first(arglist__24649);
arglist__24649 = cljs.core.next(arglist__24649);
var z = cljs.core.first(arglist__24649);
var args = cljs.core.rest(arglist__24649);
return G__24647__delegate(x,y,z,args);
});
G__24647.cljs$core$IFn$_invoke$arity$variadic = G__24647__delegate;
return G__24647;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__24650 = null;
if (arguments.length > 3) {
var G__24651__i = 0, G__24651__a = new Array(arguments.length -  3);
while (G__24651__i < G__24651__a.length) {G__24651__a[G__24651__i] = arguments[G__24651__i + 3]; ++G__24651__i;}
G__24650 = new cljs.core.IndexedSeq(G__24651__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__24646 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__24652__i = 0, G__24652__a = new Array(arguments.length -  3);
while (G__24652__i < G__24652__a.length) {G__24652__a[G__24652__i] = arguments[G__24652__i + 3]; ++G__24652__i;}
  ps = new cljs.core.IndexedSeq(G__24652__a,0);
} 
return G__24646__delegate.call(this,p1,p2,p3,ps);};
G__24646.cljs$lang$maxFixedArity = 3;
G__24646.cljs$lang$applyTo = (function (arglist__24653){
var p1 = cljs.core.first(arglist__24653);
arglist__24653 = cljs.core.next(arglist__24653);
var p2 = cljs.core.first(arglist__24653);
arglist__24653 = cljs.core.next(arglist__24653);
var p3 = cljs.core.first(arglist__24653);
var ps = cljs.core.rest(arglist__24653);
return G__24646__delegate(p1,p2,p3,ps);
});
G__24646.cljs$core$IFn$_invoke$arity$variadic = G__24646__delegate;
return G__24646;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__24654 = null;
if (arguments.length > 3) {
var G__24655__i = 0, G__24655__a = new Array(arguments.length -  3);
while (G__24655__i < G__24655__a.length) {G__24655__a[G__24655__i] = arguments[G__24655__i + 3]; ++G__24655__i;}
G__24654 = new cljs.core.IndexedSeq(G__24655__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__24654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__24710 = null;
var G__24710__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24710__1 = (function (result){
var G__24696 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24696) : rf.call(null,G__24696));
});
var G__24710__2 = (function (result,input){
var G__24697 = result;
var G__24698 = (function (){var G__24699 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24699) : f.call(null,G__24699));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24697,G__24698) : rf.call(null,G__24697,G__24698));
});
var G__24710__3 = (function() { 
var G__24711__delegate = function (result,input,inputs){
var G__24700 = result;
var G__24701 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24700,G__24701) : rf.call(null,G__24700,G__24701));
};
var G__24711 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__24712__i = 0, G__24712__a = new Array(arguments.length -  2);
while (G__24712__i < G__24712__a.length) {G__24712__a[G__24712__i] = arguments[G__24712__i + 2]; ++G__24712__i;}
  inputs = new cljs.core.IndexedSeq(G__24712__a,0);
} 
return G__24711__delegate.call(this,result,input,inputs);};
G__24711.cljs$lang$maxFixedArity = 2;
G__24711.cljs$lang$applyTo = (function (arglist__24713){
var result = cljs.core.first(arglist__24713);
arglist__24713 = cljs.core.next(arglist__24713);
var input = cljs.core.first(arglist__24713);
var inputs = cljs.core.rest(arglist__24713);
return G__24711__delegate(result,input,inputs);
});
G__24711.cljs$core$IFn$_invoke$arity$variadic = G__24711__delegate;
return G__24711;
})()
;
G__24710 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__24710__0.call(this);
case 1:
return G__24710__1.call(this,result);
case 2:
return G__24710__2.call(this,result,input);
default:
var G__24714 = null;
if (arguments.length > 2) {
var G__24715__i = 0, G__24715__a = new Array(arguments.length -  2);
while (G__24715__i < G__24715__a.length) {G__24715__a[G__24715__i] = arguments[G__24715__i + 2]; ++G__24715__i;}
G__24714 = new cljs.core.IndexedSeq(G__24715__a,0);
}
return G__24710__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__24714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24710.cljs$lang$maxFixedArity = 2;
G__24710.cljs$lang$applyTo = G__24710__3.cljs$lang$applyTo;
G__24710.cljs$core$IFn$_invoke$arity$0 = G__24710__0;
G__24710.cljs$core$IFn$_invoke$arity$1 = G__24710__1;
G__24710.cljs$core$IFn$_invoke$arity$2 = G__24710__2;
G__24710.cljs$core$IFn$_invoke$arity$variadic = G__24710__3.cljs$core$IFn$_invoke$arity$variadic;
return G__24710;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13660__auto___24716 = size;
var i_24717 = (0);
while(true){
if((i_24717 < n__13660__auto___24716)){
cljs.core.chunk_append(b,(function (){var G__24702 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24717);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24702) : f.call(null,G__24702));
})());

var G__24718 = (i_24717 + (1));
i_24717 = G__24718;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__24703 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24703) : f.call(null,G__24703));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__24704 = cljs.core.first(s1);
var G__24705 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24704,G__24705) : f.call(null,G__24704,G__24705));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__24706 = cljs.core.first(s1);
var G__24707 = cljs.core.first(s2);
var G__24708 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24706,G__24707,G__24708) : f.call(null,G__24706,G__24707,G__24708));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__24719__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__24656_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__24656_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__24719 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24720__i = 0, G__24720__a = new Array(arguments.length -  4);
while (G__24720__i < G__24720__a.length) {G__24720__a[G__24720__i] = arguments[G__24720__i + 4]; ++G__24720__i;}
  colls = new cljs.core.IndexedSeq(G__24720__a,0);
} 
return G__24719__delegate.call(this,f,c1,c2,c3,colls);};
G__24719.cljs$lang$maxFixedArity = 4;
G__24719.cljs$lang$applyTo = (function (arglist__24721){
var f = cljs.core.first(arglist__24721);
arglist__24721 = cljs.core.next(arglist__24721);
var c1 = cljs.core.first(arglist__24721);
arglist__24721 = cljs.core.next(arglist__24721);
var c2 = cljs.core.first(arglist__24721);
arglist__24721 = cljs.core.next(arglist__24721);
var c3 = cljs.core.first(arglist__24721);
var colls = cljs.core.rest(arglist__24721);
return G__24719__delegate(f,c1,c2,c3,colls);
});
G__24719.cljs$core$IFn$_invoke$arity$variadic = G__24719__delegate;
return G__24719;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__24722 = null;
if (arguments.length > 4) {
var G__24723__i = 0, G__24723__a = new Array(arguments.length -  4);
while (G__24723__i < G__24723__a.length) {G__24723__a[G__24723__i] = arguments[G__24723__i + 4]; ++G__24723__i;}
G__24722 = new cljs.core.IndexedSeq(G__24723__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24732 = null;
var G__24732__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24732__1 = (function (result){
var G__24729 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24729) : rf.call(null,G__24729));
});
var G__24732__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__24730 = result;
var G__24731 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24730,G__24731) : rf.call(null,G__24730,G__24731));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__24732 = function(result,input){
switch(arguments.length){
case 0:
return G__24732__0.call(this);
case 1:
return G__24732__1.call(this,result);
case 2:
return G__24732__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24732.cljs$core$IFn$_invoke$arity$0 = G__24732__0;
G__24732.cljs$core$IFn$_invoke$arity$1 = G__24732__1;
G__24732.cljs$core$IFn$_invoke$arity$2 = G__24732__2;
return G__24732;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24739 = null;
var G__24739__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24739__1 = (function (result){
var G__24736 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24736) : rf.call(null,G__24736));
});
var G__24739__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__24737 = result;
var G__24738 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24737,G__24738) : rf.call(null,G__24737,G__24738));
}
});
G__24739 = function(result,input){
switch(arguments.length){
case 0:
return G__24739__0.call(this);
case 1:
return G__24739__1.call(this,result);
case 2:
return G__24739__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24739.cljs$core$IFn$_invoke$arity$0 = G__24739__0;
G__24739.cljs$core$IFn$_invoke$arity$1 = G__24739__1;
G__24739.cljs$core$IFn$_invoke$arity$2 = G__24739__2;
return G__24739;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__24740 = (n__$1 - (1));
var G__24741 = cljs.core.rest(s);
n__$1 = G__24740;
coll__$1 = G__24741;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__24744 = cljs.core.next(s);
var G__24745 = cljs.core.next(lead);
s = G__24744;
lead = G__24745;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__24758 = null;
var G__24758__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24758__1 = (function (result){
var G__24752 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24752) : rf.call(null,G__24752));
});
var G__24758__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12761__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12761__auto__)){
var G__24753 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24753) : pred.call(null,G__24753));
} else {
return and__12761__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__24754 = result;
var G__24755 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24754,G__24755) : rf.call(null,G__24754,G__24755));
}
});
G__24758 = function(result,input){
switch(arguments.length){
case 0:
return G__24758__0.call(this);
case 1:
return G__24758__1.call(this,result);
case 2:
return G__24758__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24758.cljs$core$IFn$_invoke$arity$0 = G__24758__0;
G__24758.cljs$core$IFn$_invoke$arity$1 = G__24758__1;
G__24758.cljs$core$IFn$_invoke$arity$2 = G__24758__2;
return G__24758;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12761__auto__ = s;
if(and__12761__auto__){
var G__24757 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__24757) : pred__$1.call(null,G__24757));
} else {
return and__12761__auto__;
}
})())){
var G__24759 = pred__$1;
var G__24760 = cljs.core.rest(s);
pred__$1 = G__24759;
coll__$1 = G__24760;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__24769 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24769) : f.call(null,G__24769));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__24772__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__24772 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__24773__i = 0, G__24773__a = new Array(arguments.length -  2);
while (G__24773__i < G__24773__a.length) {G__24773__a[G__24773__i] = arguments[G__24773__i + 2]; ++G__24773__i;}
  colls = new cljs.core.IndexedSeq(G__24773__a,0);
} 
return G__24772__delegate.call(this,c1,c2,colls);};
G__24772.cljs$lang$maxFixedArity = 2;
G__24772.cljs$lang$applyTo = (function (arglist__24774){
var c1 = cljs.core.first(arglist__24774);
arglist__24774 = cljs.core.next(arglist__24774);
var c2 = cljs.core.first(arglist__24774);
var colls = cljs.core.rest(arglist__24774);
return G__24772__delegate(c1,c2,colls);
});
G__24772.cljs$core$IFn$_invoke$arity$variadic = G__24772__delegate;
return G__24772;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__24775 = null;
if (arguments.length > 2) {
var G__24776__i = 0, G__24776__a = new Array(arguments.length -  2);
while (G__24776__i < G__24776__a.length) {G__24776__a[G__24776__i] = arguments[G__24776__i + 2]; ++G__24776__i;}
G__24775 = new cljs.core.IndexedSeq(G__24776__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__24775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__24791 = null;
var G__24791__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24791__1 = (function (result){
var G__24784 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24784) : rf.call(null,G__24784));
});
var G__24791__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__24785 = result;
var G__24786 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24785,G__24786) : rf.call(null,G__24785,G__24786));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__24787 = sepr;
var G__24788 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24787,G__24788) : rf.call(null,G__24787,G__24788));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__24789 = result;
var G__24790 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24789,G__24790) : rf.call(null,G__24789,G__24790));
}
});
G__24791 = function(result,input){
switch(arguments.length){
case 0:
return G__24791__0.call(this);
case 1:
return G__24791__1.call(this,result);
case 2:
return G__24791__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24791.cljs$core$IFn$_invoke$arity$0 = G__24791__0;
G__24791.cljs$core$IFn$_invoke$arity$1 = G__24791__1;
G__24791.cljs$core$IFn$_invoke$arity$2 = G__24791__2;
return G__24791;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__24800__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__24800 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__24801__i = 0, G__24801__a = new Array(arguments.length -  1);
while (G__24801__i < G__24801__a.length) {G__24801__a[G__24801__i] = arguments[G__24801__i + 1]; ++G__24801__i;}
  colls = new cljs.core.IndexedSeq(G__24801__a,0);
} 
return G__24800__delegate.call(this,f,colls);};
G__24800.cljs$lang$maxFixedArity = 1;
G__24800.cljs$lang$applyTo = (function (arglist__24802){
var f = cljs.core.first(arglist__24802);
var colls = cljs.core.rest(arglist__24802);
return G__24800__delegate(f,colls);
});
G__24800.cljs$core$IFn$_invoke$arity$variadic = G__24800__delegate;
return G__24800;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__24803 = null;
if (arguments.length > 1) {
var G__24804__i = 0, G__24804__a = new Array(arguments.length -  1);
while (G__24804__i < G__24804__a.length) {G__24804__a[G__24804__i] = arguments[G__24804__i + 1]; ++G__24804__i;}
G__24803 = new cljs.core.IndexedSeq(G__24804__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__24823 = null;
var G__24823__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24823__1 = (function (result){
var G__24817 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24817) : rf.call(null,G__24817));
});
var G__24823__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24818 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24818) : pred.call(null,G__24818));
})())){
var G__24819 = result;
var G__24820 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24819,G__24820) : rf.call(null,G__24819,G__24820));
} else {
return result;
}
});
G__24823 = function(result,input){
switch(arguments.length){
case 0:
return G__24823__0.call(this);
case 1:
return G__24823__1.call(this,result);
case 2:
return G__24823__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24823.cljs$core$IFn$_invoke$arity$0 = G__24823__0;
G__24823.cljs$core$IFn$_invoke$arity$1 = G__24823__1;
G__24823.cljs$core$IFn$_invoke$arity$2 = G__24823__2;
return G__24823;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13660__auto___24824 = size;
var i_24825 = (0);
while(true){
if((i_24825 < n__13660__auto___24824)){
if(cljs.core.truth_((function (){var G__24821 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24825);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24821) : pred.call(null,G__24821));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24825));
} else {
}

var G__24826 = (i_24825 + (1));
i_24825 = G__24826;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__24822 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24822) : pred.call(null,G__24822));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__24833 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__24833) : branch_QMARK_.call(null,G__24833));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__24834 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__24834) : children.call(null,G__24834));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24835_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__24835_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__24838 = to;
if(G__24838){
var bit__13447__auto__ = (G__24838.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13447__auto__) || (G__24838.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__24839 = to;
if(G__24839){
var bit__13447__auto__ = (G__24839.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13447__auto__) || (G__24839.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__24841 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24841) : f.call(null,G__24841));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__24842__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__24842 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24843__i = 0, G__24843__a = new Array(arguments.length -  4);
while (G__24843__i < G__24843__a.length) {G__24843__a[G__24843__i] = arguments[G__24843__i + 4]; ++G__24843__i;}
  colls = new cljs.core.IndexedSeq(G__24843__a,0);
} 
return G__24842__delegate.call(this,f,c1,c2,c3,colls);};
G__24842.cljs$lang$maxFixedArity = 4;
G__24842.cljs$lang$applyTo = (function (arglist__24844){
var f = cljs.core.first(arglist__24844);
arglist__24844 = cljs.core.next(arglist__24844);
var c1 = cljs.core.first(arglist__24844);
arglist__24844 = cljs.core.next(arglist__24844);
var c2 = cljs.core.first(arglist__24844);
arglist__24844 = cljs.core.next(arglist__24844);
var c3 = cljs.core.first(arglist__24844);
var colls = cljs.core.rest(arglist__24844);
return G__24842__delegate(f,c1,c2,c3,colls);
});
G__24842.cljs$core$IFn$_invoke$arity$variadic = G__24842__delegate;
return G__24842;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__24845 = null;
if (arguments.length > 4) {
var G__24846__i = 0, G__24846__a = new Array(arguments.length -  4);
while (G__24846__i < G__24846__a.length) {G__24846__a[G__24846__i] = arguments[G__24846__i + 4]; ++G__24846__i;}
G__24845 = new cljs.core.IndexedSeq(G__24846__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__24848 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24848) : pred.call(null,G__24848));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__24863 = m__$1;
if(G__24863){
var bit__13454__auto__ = (G__24863.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13454__auto__) || (G__24863.cljs$core$ILookup$)){
return true;
} else {
if((!G__24863.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24863);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24863);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__24864 = sentinel;
var G__24865 = m__$2;
var G__24866 = cljs.core.next(ks__$1);
sentinel = G__24864;
m__$1 = G__24865;
ks__$1 = G__24866;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__24867,v){
var vec__24872 = p__24867;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24872,(0),null);
var ks = cljs.core.nthnext(vec__24872,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__24873,f){
var vec__24911 = p__24873;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24911,(0),null);
var ks = cljs.core.nthnext(vec__24911,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24912 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24912) : f.call(null,G__24912));
})());
}
});
var update_in__4 = (function (m,p__24874,f,a){
var vec__24913 = p__24874;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24913,(0),null);
var ks = cljs.core.nthnext(vec__24913,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24914 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24915 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24914,G__24915) : f.call(null,G__24914,G__24915));
})());
}
});
var update_in__5 = (function (m,p__24875,f,a,b){
var vec__24916 = p__24875;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24916,(0),null);
var ks = cljs.core.nthnext(vec__24916,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24917 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24918 = a;
var G__24919 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24917,G__24918,G__24919) : f.call(null,G__24917,G__24918,G__24919));
})());
}
});
var update_in__6 = (function (m,p__24876,f,a,b,c){
var vec__24920 = p__24876;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24920,(0),null);
var ks = cljs.core.nthnext(vec__24920,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24921 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24922 = a;
var G__24923 = b;
var G__24924 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24921,G__24922,G__24923,G__24924) : f.call(null,G__24921,G__24922,G__24923,G__24924));
})());
}
});
var update_in__7 = (function() { 
var G__24926__delegate = function (m,p__24877,f,a,b,c,args){
var vec__24925 = p__24877;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24925,(0),null);
var ks = cljs.core.nthnext(vec__24925,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__24926 = function (m,p__24877,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__24927__i = 0, G__24927__a = new Array(arguments.length -  6);
while (G__24927__i < G__24927__a.length) {G__24927__a[G__24927__i] = arguments[G__24927__i + 6]; ++G__24927__i;}
  args = new cljs.core.IndexedSeq(G__24927__a,0);
} 
return G__24926__delegate.call(this,m,p__24877,f,a,b,c,args);};
G__24926.cljs$lang$maxFixedArity = 6;
G__24926.cljs$lang$applyTo = (function (arglist__24928){
var m = cljs.core.first(arglist__24928);
arglist__24928 = cljs.core.next(arglist__24928);
var p__24877 = cljs.core.first(arglist__24928);
arglist__24928 = cljs.core.next(arglist__24928);
var f = cljs.core.first(arglist__24928);
arglist__24928 = cljs.core.next(arglist__24928);
var a = cljs.core.first(arglist__24928);
arglist__24928 = cljs.core.next(arglist__24928);
var b = cljs.core.first(arglist__24928);
arglist__24928 = cljs.core.next(arglist__24928);
var c = cljs.core.first(arglist__24928);
var args = cljs.core.rest(arglist__24928);
return G__24926__delegate(m,p__24877,f,a,b,c,args);
});
G__24926.cljs$core$IFn$_invoke$arity$variadic = G__24926__delegate;
return G__24926;
})()
;
update_in = function(m,p__24877,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__24877,f);
case 4:
return update_in__4.call(this,m,p__24877,f,a);
case 5:
return update_in__5.call(this,m,p__24877,f,a,b);
case 6:
return update_in__6.call(this,m,p__24877,f,a,b,c);
default:
var G__24929 = null;
if (arguments.length > 6) {
var G__24930__i = 0, G__24930__a = new Array(arguments.length -  6);
while (G__24930__i < G__24930__a.length) {G__24930__a[G__24930__i] = arguments[G__24930__i + 6]; ++G__24930__i;}
G__24929 = new cljs.core.IndexedSeq(G__24930__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__24877,f,a,b,c, G__24929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24941 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24941) : f.call(null,G__24941));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24942 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24943 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24942,G__24943) : f.call(null,G__24942,G__24943));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24944 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24945 = x;
var G__24946 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24944,G__24945,G__24946) : f.call(null,G__24944,G__24945,G__24946));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24947 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24948 = x;
var G__24949 = y;
var G__24950 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24947,G__24948,G__24949,G__24950) : f.call(null,G__24947,G__24948,G__24949,G__24950));
})());
});
var update__7 = (function() { 
var G__24951__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__24951 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__24952__i = 0, G__24952__a = new Array(arguments.length -  6);
while (G__24952__i < G__24952__a.length) {G__24952__a[G__24952__i] = arguments[G__24952__i + 6]; ++G__24952__i;}
  more = new cljs.core.IndexedSeq(G__24952__a,0);
} 
return G__24951__delegate.call(this,m,k,f,x,y,z,more);};
G__24951.cljs$lang$maxFixedArity = 6;
G__24951.cljs$lang$applyTo = (function (arglist__24953){
var m = cljs.core.first(arglist__24953);
arglist__24953 = cljs.core.next(arglist__24953);
var k = cljs.core.first(arglist__24953);
arglist__24953 = cljs.core.next(arglist__24953);
var f = cljs.core.first(arglist__24953);
arglist__24953 = cljs.core.next(arglist__24953);
var x = cljs.core.first(arglist__24953);
arglist__24953 = cljs.core.next(arglist__24953);
var y = cljs.core.first(arglist__24953);
arglist__24953 = cljs.core.next(arglist__24953);
var z = cljs.core.first(arglist__24953);
var more = cljs.core.rest(arglist__24953);
return G__24951__delegate(m,k,f,x,y,z,more);
});
G__24951.cljs$core$IFn$_invoke$arity$variadic = G__24951__delegate;
return G__24951;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__24954 = null;
if (arguments.length > 6) {
var G__24955__i = 0, G__24955__a = new Array(arguments.length -  6);
while (G__24955__i < G__24955__a.length) {G__24955__a[G__24955__i] = arguments[G__24955__i + 6]; ++G__24955__i;}
G__24954 = new cljs.core.IndexedSeq(G__24955__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__24954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__24956 = (ll - (5));
var G__24957 = r;
ll = G__24956;
ret = G__24957;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24962 = cljs.core.pv_aget(node,(0));
var G__24963 = (level - (5));
node = G__24962;
level = G__24963;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24964 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__24965 = (level - (5));
node = G__24964;
level = G__24965;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24975 = init__$2;
var G__24976 = (j + i);
var G__24977 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24975,G__24976,G__24977) : f.call(null,G__24975,G__24976,G__24977));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24988 = (j + (1));
var G__24989 = init__$3;
j = G__24988;
init__$2 = G__24989;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24978 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24978) : cljs.core.deref.call(null,G__24978));
} else {
var G__24990 = (i + len);
var G__24991 = init__$2;
i = G__24990;
init__$1 = G__24991;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__24979 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__24979) : cljs.core.tv_editable_root.call(null,G__24979));
})(),(function (){var G__24980 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__24980) : cljs.core.tv_editable_tail.call(null,G__24980));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24981 = init__$2;
var G__24982 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24981,G__24982) : f.call(null,G__24981,G__24982));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24992 = (j + (1));
var G__24993 = init__$3;
j = G__24992;
init__$2 = G__24993;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24983 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24983) : cljs.core.deref.call(null,G__24983));
} else {
var G__24994 = (i + len);
var G__24995 = init__$2;
i = G__24994;
init__$1 = G__24995;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__24984 = coll__$1;
var G__24985 = cljs.core.first_array_for_longvec(coll__$1);
var G__24986 = (0);
var G__24987 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24984,G__24985,G__24986,G__24987) : cljs.core.chunked_seq.call(null,G__24984,G__24985,G__24986,G__24987));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13660__auto___24996 = len;
var i_24997 = (0);
while(true){
if((i_24997 < n__13660__auto___24996)){
(new_tail[i_24997] = (self__.tail[i_24997]));

var G__24998 = (i_24997 + (1));
i_24997 = G__24998;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__24999 = null;
var G__24999__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24999__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24999 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24999__2.call(this,self__,k);
case 3:
return G__24999__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24999.cljs$core$IFn$_invoke$arity$2 = G__24999__2;
G__24999.cljs$core$IFn$_invoke$arity$3 = G__24999__3;
return G__24999;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args24974){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24974)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__25000 = (i + (1));
var G__25001 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__25000;
out = G__25001;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25002__i = 0, G__25002__a = new Array(arguments.length -  0);
while (G__25002__i < G__25002__a.length) {G__25002__a[G__25002__i] = arguments[G__25002__i + 0]; ++G__25002__i;}
  args = new cljs.core.IndexedSeq(G__25002__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__25003){
var args = cljs.core.seq(arglist__25003);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__25004 = self__.vec;
var G__25005 = self__.node;
var G__25006 = self__.i;
var G__25007 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25004,G__25005,G__25006,G__25007) : cljs.core.chunked_seq.call(null,G__25004,G__25005,G__25006,G__25007));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__25008 = self__.vec;
var G__25009 = (self__.i + self__.off);
var G__25010 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__25008,G__25009,G__25010) : cljs.core.subvec.call(null,G__25008,G__25009,G__25010));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__25011 = self__.vec;
var G__25012 = (self__.i + self__.off);
var G__25013 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__25011,G__25012,G__25013) : cljs.core.subvec.call(null,G__25011,G__25012,G__25013));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__25014 = self__.vec;
var G__25015 = self__.node;
var G__25016 = self__.i;
var G__25017 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25014,G__25015,G__25016,G__25017) : cljs.core.chunked_seq.call(null,G__25014,G__25015,G__25016,G__25017));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__25018 = self__.vec;
var G__25019 = cljs.core.unchecked_array_for(self__.vec,end);
var G__25020 = end;
var G__25021 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25018,G__25019,G__25020,G__25021) : cljs.core.chunked_seq.call(null,G__25018,G__25019,G__25020,G__25021));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__25022 = self__.vec;
var G__25023 = self__.node;
var G__25024 = self__.i;
var G__25025 = self__.off;
var G__25026 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__25022,G__25023,G__25024,G__25025,G__25026) : cljs.core.chunked_seq.call(null,G__25022,G__25023,G__25024,G__25025,G__25026));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__25027 = self__.vec;
var G__25028 = cljs.core.unchecked_array_for(self__.vec,end);
var G__25029 = end;
var G__25030 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25027,G__25028,G__25029,G__25030) : cljs.core.chunked_seq.call(null,G__25027,G__25028,G__25029,G__25030));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__25032 = self__.meta;
var G__25033 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__25034 = self__.start;
var G__25035 = (function (){var x__13090__auto__ = self__.end;
var y__13091__auto__ = (v_pos + (1));
return ((x__13090__auto__ > y__13091__auto__) ? x__13090__auto__ : y__13091__auto__);
})();
var G__25036 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25032,G__25033,G__25034,G__25035,G__25036) : cljs.core.build_subvec.call(null,G__25032,G__25033,G__25034,G__25035,G__25036));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__25037 = self__.meta;
var G__25038 = self__.v;
var G__25039 = self__.start;
var G__25040 = (self__.end - (1));
var G__25041 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25037,G__25038,G__25039,G__25040,G__25041) : cljs.core.build_subvec.call(null,G__25037,G__25038,G__25039,G__25040,G__25041));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__25043 = meta__$1;
var G__25044 = self__.v;
var G__25045 = self__.start;
var G__25046 = self__.end;
var G__25047 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25043,G__25044,G__25045,G__25046,G__25047) : cljs.core.build_subvec.call(null,G__25043,G__25044,G__25045,G__25046,G__25047));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__25048 = self__.meta;
var G__25049 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__25050 = self__.start;
var G__25051 = (self__.end + (1));
var G__25052 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__25048,G__25049,G__25050,G__25051,G__25052) : cljs.core.build_subvec.call(null,G__25048,G__25049,G__25050,G__25051,G__25052));
});

cljs.core.Subvec.prototype.call = (function() {
var G__25053 = null;
var G__25053__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__25053__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__25053 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25053__2.call(this,self__,k);
case 3:
return G__25053__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25053.cljs$core$IFn$_invoke$arity$2 = G__25053__2;
G__25053.cljs$core$IFn$_invoke$arity$3 = G__25053__3;
return G__25053;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args25031){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25031)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__25054 = meta;
var G__25055 = v.v;
var G__25056 = (v.start + start);
var G__25057 = (v.start + end);
var G__25058 = __hash;
meta = G__25054;
v = G__25055;
start = G__25056;
end = G__25057;
__hash = G__25058;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj25065 = {};
return obj25065;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__25073 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__25074 = (level - (5));
node = G__25073;
level = G__25074;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__25078 = null;
var G__25078__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25078__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25078 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25078__2.call(this,self__,k);
case 3:
return G__25078__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25078.cljs$core$IFn$_invoke$arity$2 = G__25078__2;
G__25078.cljs$core$IFn$_invoke$arity$3 = G__25078__3;
return G__25078;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args25075){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25075)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12773__auto__ = self__.front;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12773__auto__ = self__.rear;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__25079 = (i + incr);
i = G__25079;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__25080 = (i + (1));
var G__25081 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__25080;
out = G__25081;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj25085 = {};
return obj25085;
})();
var l = ks.length;
var i_25086 = (0);
while(true){
if((i_25086 < l)){
var k_25087 = (ks[i_25086]);
(new_obj[k_25087] = (obj[k_25087]));

var G__25088 = (i_25086 + (1));
i_25086 = G__25088;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12761__auto__ = (function (){var G__25092 = k;
return goog.isString(G__25092);
})();
if(cljs.core.truth_(and__12761__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12761__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__25093 = init__$1;
var G__25094 = k;
var G__25095 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25093,G__25094,G__25095) : f.call(null,G__25093,G__25094,G__25095));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25096 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25096) : cljs.core.deref.call(null,G__25096));
} else {
var G__25102 = cljs.core.rest(keys__$1);
var G__25103 = init__$2;
keys__$1 = G__25102;
init__$1 = G__25103;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12761__auto__ = (function (){var G__25098 = k;
return goog.isString(G__25098);
})();
if(cljs.core.truth_(and__12761__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12761__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__25099 = k;
return goog.isString(G__25099);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12761__auto__ = (function (){var G__25101 = k;
return goog.isString(G__25101);
})();
if(cljs.core.truth_(and__12761__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12761__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__25089_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__25089_SHARP_,(self__.strobj[p1__25089_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__25104 = null;
var G__25104__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25104__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25104 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25104__2.call(this,self__,k);
case 3:
return G__25104__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25104.cljs$core$IFn$_invoke$arity$2 = G__25104__2;
G__25104.cljs$core$IFn$_invoke$arity$3 = G__25104__3;
return G__25104;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args25090){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25090)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj25106 = {};
return obj25106;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__25107 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25107,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25107,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__25108 = (i + (2));
i = G__25108;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__25109 = (i + (2));
i = G__25109;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__25110 = (i + (2));
i = G__25110;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__25111 = (i + (2));
i = G__25111;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__25112 = (i + (2));
i = G__25112;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12773__auto__ = (function (){var G__25116 = k;
return goog.isString(G__25116);
})();
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_25117 = (0);
while(true){
if((i_25117 < l)){
(narr[i_25117] = (arr[i_25117]));

var G__25118 = (i_25117 + (1));
i_25117 = G__25118;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25120 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25120) : cljs.core.keys.call(null,G__25120));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25121 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25121) : cljs.core.vals.call(null,G__25121));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25122 = cljs.core.seq(coll);
var chunk__25123 = null;
var count__25124 = (0);
var i__25125 = (0);
while(true){
if((i__25125 < count__25124)){
var vec__25126 = chunk__25123.cljs$core$IIndexed$_nth$arity$2(null,i__25125);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25126,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25126,(1),null);
var G__25127_25140 = v;
var G__25128_25141 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25127_25140,G__25128_25141) : f.call(null,G__25127_25140,G__25128_25141));

var G__25142 = seq__25122;
var G__25143 = chunk__25123;
var G__25144 = count__25124;
var G__25145 = (i__25125 + (1));
seq__25122 = G__25142;
chunk__25123 = G__25143;
count__25124 = G__25144;
i__25125 = G__25145;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25122);
if(temp__4126__auto__){
var seq__25122__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25122__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25122__$1);
var G__25146 = cljs.core.chunk_rest(seq__25122__$1);
var G__25147 = c__13560__auto__;
var G__25148 = cljs.core.count(c__13560__auto__);
var G__25149 = (0);
seq__25122 = G__25146;
chunk__25123 = G__25147;
count__25124 = G__25148;
i__25125 = G__25149;
continue;
} else {
var vec__25129 = cljs.core.first(seq__25122__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25129,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25129,(1),null);
var G__25130_25150 = v;
var G__25131_25151 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25130_25150,G__25131_25151) : f.call(null,G__25130_25150,G__25131_25151));

var G__25152 = cljs.core.next(seq__25122__$1);
var G__25153 = null;
var G__25154 = (0);
var G__25155 = (0);
seq__25122 = G__25152;
chunk__25123 = G__25153;
count__25124 = G__25154;
i__25125 = G__25155;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__25132 = init__$1;
var G__25133 = (self__.arr[i]);
var G__25134 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25132,G__25133,G__25134) : f.call(null,G__25132,G__25133,G__25134));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25135 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25135) : cljs.core.deref.call(null,G__25135));
} else {
var G__25156 = (i + (2));
var G__25157 = init__$2;
i = G__25156;
init__$1 = G__25157;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__25136 = other;
if(G__25136){
var bit__13447__auto__ = (G__25136.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13447__auto__) || (G__25136.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__25158 = (i + (2));
i = G__25158;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj25138 = {};
return obj25138;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__25159 = (s + (2));
var G__25160 = d;
s = G__25159;
d = G__25160;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__25161 = (s + (2));
var G__25162 = (d + (2));
s = G__25161;
d = G__25162;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__25139 = cljs.core.aclone(self__.arr);
(G__25139[(idx + (1))] = v);

return G__25139;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25163 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25164 = cljs.core.next(es);
ret = G__25163;
es = G__25164;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__25165 = null;
var G__25165__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25165__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25165 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25165__2.call(this,self__,k);
case 3:
return G__25165__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25165.cljs$core$IFn$_invoke$arity$2 = G__25165__2;
G__25165.cljs$core$IFn$_invoke$arity$3 = G__25165__3;
return G__25165;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args25119){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25119)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__25166 = (i + (2));
var G__25167 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__25166;
ret = G__25167;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__25168_25176 = self__.arr;
G__25168_25176.pop();

G__25168_25176.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__25169 = self__.len;
var G__25170 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__25169,G__25170) : cljs.core.array__GT_transient_hash_map.call(null,G__25169,G__25170));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__25171 = o;
if(G__25171){
var bit__13454__auto__ = (G__25171.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13454__auto__) || (G__25171.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__25171.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25171);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__25172 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25172) : cljs.core.key.call(null,G__25172));
})(),(function (){var G__25173 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25173) : cljs.core.val.call(null,G__25173));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__25177 = cljs.core.next(es);
var G__25178 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__25174 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25174) : cljs.core.key.call(null,G__25174));
})(),(function (){var G__25175 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25175) : cljs.core.val.call(null,G__25175));
})());
es = G__25177;
tcoll__$2 = G__25178;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__25179 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__25180 = (i + (2));
out = G__25179;
i = G__25180;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__25183 = cljs.core.aclone(arr);
(G__25183[i] = a);

return G__25183;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__25184 = cljs.core.aclone(arr);
(G__25184[i] = a);

(G__25184[j] = b);

return G__25184;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__25189 = init__$1;
var G__25190 = k;
var G__25191 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25189,G__25190,G__25191) : f.call(null,G__25189,G__25190,G__25191));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25192 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25192) : cljs.core.deref.call(null,G__25192));
} else {
var G__25193 = (i + (2));
var G__25194 = init__$2;
i = G__25193;
init__$1 = G__25194;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__25195 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__25195) : cljs.core.create_inode_seq.call(null,G__25195));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_25209 = (0);
var j_25210 = (0);
while(true){
if((i_25209 < (32))){
if((((self__.bitmap >>> i_25209) & (1)) === (0))){
var G__25211 = (i_25209 + (1));
var G__25212 = j_25210;
i_25209 = G__25211;
j_25210 = G__25212;
continue;
} else {
(nodes[i_25209] = ((!(((self__.arr[j_25210]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_25210])),(self__.arr[j_25210]),(self__.arr[(j_25210 + (1))]),added_leaf_QMARK_):(self__.arr[(j_25210 + (1))])));

var G__25213 = (i_25209 + (1));
var G__25214 = (j_25210 + (2));
i_25209 = G__25213;
j_25210 = G__25214;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__25196 = edit__$1;
var G__25197 = (shift + (5));
var G__25198 = key_or_nil;
var G__25199 = val_or_node;
var G__25200 = hash;
var G__25201 = key;
var G__25202 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202) : cljs.core.create_node.call(null,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_25215 = (0);
var j_25216 = (0);
while(true){
if((i_25215 < (32))){
if((((self__.bitmap >>> i_25215) & (1)) === (0))){
var G__25217 = (i_25215 + (1));
var G__25218 = j_25216;
i_25215 = G__25217;
j_25216 = G__25218;
continue;
} else {
(nodes[i_25215] = ((!(((self__.arr[j_25216]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_25216])),(self__.arr[j_25216]),(self__.arr[(j_25216 + (1))]),added_leaf_QMARK_):(self__.arr[(j_25216 + (1))])));

var G__25219 = (i_25215 + (1));
var G__25220 = (j_25216 + (2));
i_25215 = G__25219;
j_25216 = G__25220;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__25203 = (shift + (5));
var G__25204 = key_or_nil;
var G__25205 = val_or_node;
var G__25206 = hash;
var G__25207 = key;
var G__25208 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__25203,G__25204,G__25205,G__25206,G__25207,G__25208) : cljs.core.create_node.call(null,G__25203,G__25204,G__25205,G__25206,G__25207,G__25208));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__25221 = (i + (1));
var G__25222 = (j + (2));
var G__25223 = (bitmap | ((1) << i));
i = G__25221;
j = G__25222;
bitmap = G__25223;
continue;
} else {
var G__25224 = (i + (1));
var G__25225 = j;
var G__25226 = bitmap;
i = G__25224;
j = G__25225;
bitmap = G__25226;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__25227 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__25227) : cljs.core.create_array_node_seq.call(null,G__25227));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25228 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25228) : cljs.core.deref.call(null,G__25228));
} else {
var G__25229 = (i + (1));
var G__25230 = init__$2;
i = G__25229;
init__$1 = G__25230;
continue;
}
} else {
var G__25231 = (i + (1));
var G__25232 = init__$1;
i = G__25231;
init__$1 = G__25232;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__25233 = (i + (2));
i = G__25233;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__25234 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__25234) : cljs.core.create_inode_seq.call(null,G__25234));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__25235 = self__.nodes;
var G__25236 = (self__.i + (2));
var G__25237 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__25235,G__25236,G__25237) : cljs.core.create_inode_seq.call(null,G__25235,G__25236,G__25237));
} else {
var G__25238 = self__.nodes;
var G__25239 = self__.i;
var G__25240 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__25238,G__25239,G__25240) : cljs.core.create_inode_seq.call(null,G__25238,G__25239,G__25240));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__25244 = (j + (2));
j = G__25244;
continue;
}
} else {
var G__25245 = (j + (2));
j = G__25245;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__25246 = null;
var G__25247 = self__.nodes;
var G__25248 = self__.i;
var G__25249 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__25246,G__25247,G__25248,G__25249) : cljs.core.create_array_node_seq.call(null,G__25246,G__25247,G__25248,G__25249));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__25254 = (j + (1));
j = G__25254;
continue;
}
} else {
var G__25255 = (j + (1));
j = G__25255;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25257 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25257) : cljs.core.keys.call(null,G__25257));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25258 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25258) : cljs.core.vals.call(null,G__25258));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25259 = cljs.core.seq(coll);
var chunk__25260 = null;
var count__25261 = (0);
var i__25262 = (0);
while(true){
if((i__25262 < count__25261)){
var vec__25263 = chunk__25260.cljs$core$IIndexed$_nth$arity$2(null,i__25262);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25263,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25263,(1),null);
var G__25264_25275 = v;
var G__25265_25276 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25264_25275,G__25265_25276) : f.call(null,G__25264_25275,G__25265_25276));

var G__25277 = seq__25259;
var G__25278 = chunk__25260;
var G__25279 = count__25261;
var G__25280 = (i__25262 + (1));
seq__25259 = G__25277;
chunk__25260 = G__25278;
count__25261 = G__25279;
i__25262 = G__25280;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25259);
if(temp__4126__auto__){
var seq__25259__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25259__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25259__$1);
var G__25281 = cljs.core.chunk_rest(seq__25259__$1);
var G__25282 = c__13560__auto__;
var G__25283 = cljs.core.count(c__13560__auto__);
var G__25284 = (0);
seq__25259 = G__25281;
chunk__25260 = G__25282;
count__25261 = G__25283;
i__25262 = G__25284;
continue;
} else {
var vec__25266 = cljs.core.first(seq__25259__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25266,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25266,(1),null);
var G__25267_25285 = v;
var G__25268_25286 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25267_25285,G__25268_25286) : f.call(null,G__25267_25285,G__25268_25286));

var G__25287 = cljs.core.next(seq__25259__$1);
var G__25288 = null;
var G__25289 = (0);
var G__25290 = (0);
seq__25259 = G__25287;
chunk__25260 = G__25288;
count__25261 = G__25289;
i__25262 = G__25290;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__25269 = init;
var G__25270 = null;
var G__25271 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25269,G__25270,G__25271) : f.call(null,G__25269,G__25270,G__25271));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__25272 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25272) : cljs.core.deref.call(null,G__25272));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj25274 = {};
return obj25274;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25291 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25292 = cljs.core.next(es);
ret = G__25291;
es = G__25292;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__25293 = null;
var G__25293__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25293__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25293 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25293__2.call(this,self__,k);
case 3:
return G__25293__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25293.cljs$core$IFn$_invoke$arity$2 = G__25293__2;
G__25293.cljs$core$IFn$_invoke$arity$3 = G__25293__3;
return G__25293;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args25256){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25256)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__25294 = (i + (2));
var G__25295 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__25294;
ret = G__25295;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__25296 = (i + (1));
var G__25297 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__25296;
out = G__25297;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__25298 = o;
if(G__25298){
var bit__13454__auto__ = (G__25298.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13454__auto__) || (G__25298.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__25298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25298);
}
})()){
return tcoll.assoc_BANG_((function (){var G__25299 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25299) : cljs.core.key.call(null,G__25299));
})(),(function (){var G__25300 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25300) : cljs.core.val.call(null,G__25300));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__25303 = cljs.core.next(es);
var G__25304 = tcoll__$1.assoc_BANG_((function (){var G__25301 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25301) : cljs.core.key.call(null,G__25301));
})(),(function (){var G__25302 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25302) : cljs.core.val.call(null,G__25302));
})());
es = G__25303;
tcoll__$1 = G__25304;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__25305 = ((ascending_QMARK_)?t.left:t.right);
var G__25306 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__25305;
stack__$1 = G__25306;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__25319 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25319) : cljs.core.deref.call(null,G__25319));
} else {
var init__$2 = (function (){var G__25320 = init__$1;
var G__25321 = node.key;
var G__25322 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25320,G__25321,G__25322) : f.call(null,G__25320,G__25321,G__25322));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25323 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25323) : cljs.core.deref.call(null,G__25323));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__25324 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25324) : cljs.core.deref.call(null,G__25324));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__25326 = null;
var G__25326__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25326__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25326 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25326__2.call(this,self__,k);
case 3:
return G__25326__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25326.cljs$core$IFn$_invoke$arity$2 = G__25326__2;
G__25326.cljs$core$IFn$_invoke$arity$3 = G__25326__3;
return G__25326;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args25325){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25325)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__25328 = null;
var G__25328__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25328__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25328 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25328__2.call(this,self__,k);
case 3:
return G__25328__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25328.cljs$core$IFn$_invoke$arity$2 = G__25328__2;
G__25328.cljs$core$IFn$_invoke$arity$3 = G__25328__3;
return G__25328;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args25327){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25327)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__25341 = k;
var G__25342 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25341,G__25342) : comp.call(null,G__25341,G__25342));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__25361 = k;
var G__25362 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25361,G__25362) : comp.call(null,G__25361,G__25362));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__25373 = k;
var G__25374 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25373,G__25374) : comp.call(null,G__25373,G__25374));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25376 = cljs.core.seq(coll);
var chunk__25377 = null;
var count__25378 = (0);
var i__25379 = (0);
while(true){
if((i__25379 < count__25378)){
var vec__25380 = chunk__25377.cljs$core$IIndexed$_nth$arity$2(null,i__25379);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25380,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25380,(1),null);
var G__25381_25393 = v;
var G__25382_25394 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25381_25393,G__25382_25394) : f.call(null,G__25381_25393,G__25382_25394));

var G__25395 = seq__25376;
var G__25396 = chunk__25377;
var G__25397 = count__25378;
var G__25398 = (i__25379 + (1));
seq__25376 = G__25395;
chunk__25377 = G__25396;
count__25378 = G__25397;
i__25379 = G__25398;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25376);
if(temp__4126__auto__){
var seq__25376__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25376__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25376__$1);
var G__25399 = cljs.core.chunk_rest(seq__25376__$1);
var G__25400 = c__13560__auto__;
var G__25401 = cljs.core.count(c__13560__auto__);
var G__25402 = (0);
seq__25376 = G__25399;
chunk__25377 = G__25400;
count__25378 = G__25401;
i__25379 = G__25402;
continue;
} else {
var vec__25383 = cljs.core.first(seq__25376__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25383,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25383,(1),null);
var G__25384_25403 = v;
var G__25385_25404 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25384_25403,G__25385_25404) : f.call(null,G__25384_25403,G__25385_25404));

var G__25405 = cljs.core.next(seq__25376__$1);
var G__25406 = null;
var G__25407 = (0);
var G__25408 = (0);
seq__25376 = G__25405;
chunk__25377 = G__25406;
count__25378 = G__25407;
i__25379 = G__25408;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25386 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25386) : cljs.core.keys.call(null,G__25386));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25387 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25387) : cljs.core.vals.call(null,G__25387));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25388 = k;
var G__25389 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25388,G__25389) : self__.comp.call(null,G__25388,G__25389));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__25409 = t.left;
t = G__25409;
continue;
} else {
var G__25410 = t.right;
t = G__25410;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25411 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25412 = cljs.core.next(es);
ret = G__25411;
es = G__25412;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__25413 = null;
var G__25413__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25413__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25413 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25413__2.call(this,self__,k);
case 3:
return G__25413__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25413.cljs$core$IFn$_invoke$arity$2 = G__25413__2;
G__25413.cljs$core$IFn$_invoke$arity$3 = G__25413__3;
return G__25413;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args25375){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25375)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25390 = k;
var G__25391 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25390,G__25391) : self__.comp.call(null,G__25390,G__25391));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__25414 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25415 = t.left;
stack = G__25414;
t = G__25415;
continue;
} else {
var G__25416 = stack;
var G__25417 = t.right;
stack = G__25416;
t = G__25417;
continue;
}
} else {
if((c > (0))){
var G__25418 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25419 = t.right;
stack = G__25418;
t = G__25419;
continue;
} else {
var G__25420 = stack;
var G__25421 = t.left;
stack = G__25420;
t = G__25421;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__25392 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25392) : cljs.core.key.call(null,G__25392));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__25422 = cljs.core.nnext(in$);
var G__25423 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25422;
out = G__25423;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25424__i = 0, G__25424__a = new Array(arguments.length -  0);
while (G__25424__i < G__25424__a.length) {G__25424__a[G__25424__i] = arguments[G__25424__i + 0]; ++G__25424__i;}
  keyvals = new cljs.core.IndexedSeq(G__25424__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__25425){
var keyvals = cljs.core.seq(arglist__25425);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25426__i = 0, G__25426__a = new Array(arguments.length -  0);
while (G__25426__i < G__25426__a.length) {G__25426__a[G__25426__i] = arguments[G__25426__i + 0]; ++G__25426__i;}
  keyvals = new cljs.core.IndexedSeq(G__25426__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__25427){
var keyvals = cljs.core.seq(arglist__25427);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj25431 = {};
return obj25431;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__25432 = cljs.core.nnext(kvs);
kvs = G__25432;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25433__i = 0, G__25433__a = new Array(arguments.length -  0);
while (G__25433__i < G__25433__a.length) {G__25433__a[G__25433__i] = arguments[G__25433__i + 0]; ++G__25433__i;}
  keyvals = new cljs.core.IndexedSeq(G__25433__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__25434){
var keyvals = cljs.core.seq(arglist__25434);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__25435 = cljs.core.nnext(in$);
var G__25436 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25435;
out = G__25436;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25437__i = 0, G__25437__a = new Array(arguments.length -  0);
while (G__25437__i < G__25437__a.length) {G__25437__a[G__25437__i] = arguments[G__25437__i + 0]; ++G__25437__i;}
  keyvals = new cljs.core.IndexedSeq(G__25437__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__25438){
var keyvals = cljs.core.seq(arglist__25438);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__25439 = cljs.core.nnext(in$);
var G__25440 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25439;
out = G__25440;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__25441__i = 0, G__25441__a = new Array(arguments.length -  1);
while (G__25441__i < G__25441__a.length) {G__25441__a[G__25441__i] = arguments[G__25441__i + 1]; ++G__25441__i;}
  keyvals = new cljs.core.IndexedSeq(G__25441__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__25442){
var comparator = cljs.core.first(arglist__25442);
var keyvals = cljs.core.rest(arglist__25442);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25443 = self__.mseq;
if(G__25443){
var bit__13454__auto__ = (G__25443.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13454__auto__) || (G__25443.cljs$core$INext$)){
return true;
} else {
if((!G__25443.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25443);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25443);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25444 = self__.mseq;
if(G__25444){
var bit__13454__auto__ = (G__25444.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13454__auto__) || (G__25444.cljs$core$INext$)){
return true;
} else {
if((!G__25444.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25444);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25444);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25445 = self__.mseq;
if(G__25445){
var bit__13454__auto__ = (G__25445.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13454__auto__) || (G__25445.cljs$core$INext$)){
return true;
} else {
if((!G__25445.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25445);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25446 = self__.mseq;
if(G__25446){
var bit__13454__auto__ = (G__25446.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13454__auto__) || (G__25446.cljs$core$INext$)){
return true;
} else {
if((!G__25446.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25446);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25446);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__25447_SHARP_,p2__25448_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12773__auto__ = p1__25447_SHARP_;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__25448_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__25449__i = 0, G__25449__a = new Array(arguments.length -  0);
while (G__25449__i < G__25449__a.length) {G__25449__a[G__25449__i] = arguments[G__25449__i + 0]; ++G__25449__i;}
  maps = new cljs.core.IndexedSeq(G__25449__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__25450){
var maps = cljs.core.seq(arglist__25450);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25453 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25454 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25453,G__25454) : f.call(null,G__25453,G__25454));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12773__auto__ = m1;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__25455__i = 0, G__25455__a = new Array(arguments.length -  1);
while (G__25455__i < G__25455__a.length) {G__25455__a[G__25455__i] = arguments[G__25455__i + 1]; ++G__25455__i;}
  maps = new cljs.core.IndexedSeq(G__25455__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__25456){
var f = cljs.core.first(arglist__25456);
var maps = cljs.core.rest(arglist__25456);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__25457 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__25458 = cljs.core.next(keys);
ret = G__25457;
keys = G__25458;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25461 = cljs.core.seq(coll);
var chunk__25462 = null;
var count__25463 = (0);
var i__25464 = (0);
while(true){
if((i__25464 < count__25463)){
var vec__25465 = chunk__25462.cljs$core$IIndexed$_nth$arity$2(null,i__25464);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25465,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25465,(1),null);
var G__25466_25471 = v;
var G__25467_25472 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25466_25471,G__25467_25472) : f.call(null,G__25466_25471,G__25467_25472));

var G__25473 = seq__25461;
var G__25474 = chunk__25462;
var G__25475 = count__25463;
var G__25476 = (i__25464 + (1));
seq__25461 = G__25473;
chunk__25462 = G__25474;
count__25463 = G__25475;
i__25464 = G__25476;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25461);
if(temp__4126__auto__){
var seq__25461__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25461__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25461__$1);
var G__25477 = cljs.core.chunk_rest(seq__25461__$1);
var G__25478 = c__13560__auto__;
var G__25479 = cljs.core.count(c__13560__auto__);
var G__25480 = (0);
seq__25461 = G__25477;
chunk__25462 = G__25478;
count__25463 = G__25479;
i__25464 = G__25480;
continue;
} else {
var vec__25468 = cljs.core.first(seq__25461__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25468,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25468,(1),null);
var G__25469_25481 = v;
var G__25470_25482 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25469_25481,G__25470_25482) : f.call(null,G__25469_25481,G__25470_25482));

var G__25483 = cljs.core.next(seq__25461__$1);
var G__25484 = null;
var G__25485 = (0);
var G__25486 = (0);
seq__25461 = G__25483;
chunk__25462 = G__25484;
count__25463 = G__25485;
i__25464 = G__25486;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25459_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25459_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__25487 = null;
var G__25487__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25487__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25487 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25487__2.call(this,self__,k);
case 3:
return G__25487__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25487.cljs$core$IFn$_invoke$arity$2 = G__25487__2;
G__25487.cljs$core$IFn$_invoke$arity$3 = G__25487__3;
return G__25487;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args25460){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25460)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__25488 = (i + (1));
var G__25489 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__25488;
out = G__25489;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__25490 = (i + (1));
var G__25491 = cljs.core._conj_BANG_(out,(items[i]));
i = G__25490;
out = G__25491;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__25493 = null;
var G__25493__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__25493__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__25493 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25493__2.call(this,self__,k);
case 3:
return G__25493__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25493.cljs$core$IFn$_invoke$arity$2 = G__25493__2;
G__25493.cljs$core$IFn$_invoke$arity$3 = G__25493__3;
return G__25493;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args25492){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25492)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25496 = cljs.core.seq(coll);
var chunk__25497 = null;
var count__25498 = (0);
var i__25499 = (0);
while(true){
if((i__25499 < count__25498)){
var vec__25500 = chunk__25497.cljs$core$IIndexed$_nth$arity$2(null,i__25499);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25500,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25500,(1),null);
var G__25501_25506 = v;
var G__25502_25507 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25501_25506,G__25502_25507) : f.call(null,G__25501_25506,G__25502_25507));

var G__25508 = seq__25496;
var G__25509 = chunk__25497;
var G__25510 = count__25498;
var G__25511 = (i__25499 + (1));
seq__25496 = G__25508;
chunk__25497 = G__25509;
count__25498 = G__25510;
i__25499 = G__25511;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25496);
if(temp__4126__auto__){
var seq__25496__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25496__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25496__$1);
var G__25512 = cljs.core.chunk_rest(seq__25496__$1);
var G__25513 = c__13560__auto__;
var G__25514 = cljs.core.count(c__13560__auto__);
var G__25515 = (0);
seq__25496 = G__25512;
chunk__25497 = G__25513;
count__25498 = G__25514;
i__25499 = G__25515;
continue;
} else {
var vec__25503 = cljs.core.first(seq__25496__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25503,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25503,(1),null);
var G__25504_25516 = v;
var G__25505_25517 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25504_25516,G__25505_25517) : f.call(null,G__25504_25516,G__25505_25517));

var G__25518 = cljs.core.next(seq__25496__$1);
var G__25519 = null;
var G__25520 = (0);
var G__25521 = (0);
seq__25496 = G__25518;
chunk__25497 = G__25519;
count__25498 = G__25520;
i__25499 = G__25521;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25494_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25494_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__25522 = null;
var G__25522__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25522__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25522 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25522__2.call(this,self__,k);
case 3:
return G__25522__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25522.cljs$core$IFn$_invoke$arity$2 = G__25522__2;
G__25522.cljs$core$IFn$_invoke$arity$3 = G__25522__3;
return G__25522;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args25495){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25495)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13654__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13654__auto__.length)){
var G__25523 = (i + (1));
var G__25524 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__25523;
res = G__25524;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__25525 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__25526 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__25525;
out = G__25526;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__25527__delegate = function (keys){
return cljs.core.set(keys);
};
var G__25527 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25528__i = 0, G__25528__a = new Array(arguments.length -  0);
while (G__25528__i < G__25528__a.length) {G__25528__a[G__25528__i] = arguments[G__25528__i + 0]; ++G__25528__i;}
  keys = new cljs.core.IndexedSeq(G__25528__a,0);
} 
return G__25527__delegate.call(this,keys);};
G__25527.cljs$lang$maxFixedArity = 0;
G__25527.cljs$lang$applyTo = (function (arglist__25529){
var keys = cljs.core.seq(arglist__25529);
return G__25527__delegate(keys);
});
G__25527.cljs$core$IFn$_invoke$arity$variadic = G__25527__delegate;
return G__25527;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__25530 = null;
if (arguments.length > 0) {
var G__25531__i = 0, G__25531__a = new Array(arguments.length -  0);
while (G__25531__i < G__25531__a.length) {G__25531__a[G__25531__i] = arguments[G__25531__i + 0]; ++G__25531__i;}
G__25530 = new cljs.core.IndexedSeq(G__25531__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__25530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25532__i = 0, G__25532__a = new Array(arguments.length -  0);
while (G__25532__i < G__25532__a.length) {G__25532__a[G__25532__i] = arguments[G__25532__i + 0]; ++G__25532__i;}
  keys = new cljs.core.IndexedSeq(G__25532__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__25533){
var keys = cljs.core.seq(arglist__25533);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__25534__i = 0, G__25534__a = new Array(arguments.length -  1);
while (G__25534__i < G__25534__a.length) {G__25534__a[G__25534__i] = arguments[G__25534__i + 1]; ++G__25534__i;}
  keys = new cljs.core.IndexedSeq(G__25534__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__25535){
var comparator = cljs.core.first(arglist__25535);
var keys = cljs.core.rest(arglist__25535);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__25536_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25536_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__25536_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__25537_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25537_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__25537_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__25558 = null;
var G__25558__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25558__1 = (function (result){
var G__25548 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25548) : rf.call(null,G__25548));
});
var G__25558__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__25549 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25549) : cljs.core.deref.call(null,G__25549));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__25550 = result;
var G__25551 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25550,G__25551) : rf.call(null,G__25550,G__25551));
}
});
G__25558 = function(result,input){
switch(arguments.length){
case 0:
return G__25558__0.call(this);
case 1:
return G__25558__1.call(this,result);
case 2:
return G__25558__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25558.cljs$core$IFn$_invoke$arity$0 = G__25558__0;
G__25558.cljs$core$IFn$_invoke$arity$1 = G__25558__1;
G__25558.cljs$core$IFn$_invoke$arity$2 = G__25558__2;
return G__25558;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__25556,seen__$1){
while(true){
var vec__25557 = p__25556;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25557,(0),null);
var xs__$1 = vec__25557;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__25559 = cljs.core.rest(s);
var G__25560 = seen__$1;
p__25556 = G__25559;
seen__$1 = G__25560;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__25561 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__25562 = cljs.core.next(s__$1);
ret = G__25561;
s__$1 = G__25562;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__25564 = x;
if(G__25564){
var bit__13447__auto__ = (G__25564.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13447__auto__) || (G__25564.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__25565 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__25566 = cljs.core.next(ks);
var G__25567 = cljs.core.next(vs);
map = G__25565;
ks = G__25566;
vs = G__25567;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__25578 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25578) : k.call(null,G__25578));
})() > (function (){var G__25579 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25579) : k.call(null,G__25579));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__25580__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25568_SHARP_,p2__25569_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__25568_SHARP_,p2__25569_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25580 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25581__i = 0, G__25581__a = new Array(arguments.length -  3);
while (G__25581__i < G__25581__a.length) {G__25581__a[G__25581__i] = arguments[G__25581__i + 3]; ++G__25581__i;}
  more = new cljs.core.IndexedSeq(G__25581__a,0);
} 
return G__25580__delegate.call(this,k,x,y,more);};
G__25580.cljs$lang$maxFixedArity = 3;
G__25580.cljs$lang$applyTo = (function (arglist__25582){
var k = cljs.core.first(arglist__25582);
arglist__25582 = cljs.core.next(arglist__25582);
var x = cljs.core.first(arglist__25582);
arglist__25582 = cljs.core.next(arglist__25582);
var y = cljs.core.first(arglist__25582);
var more = cljs.core.rest(arglist__25582);
return G__25580__delegate(k,x,y,more);
});
G__25580.cljs$core$IFn$_invoke$arity$variadic = G__25580__delegate;
return G__25580;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__25583 = null;
if (arguments.length > 3) {
var G__25584__i = 0, G__25584__a = new Array(arguments.length -  3);
while (G__25584__i < G__25584__a.length) {G__25584__a[G__25584__i] = arguments[G__25584__i + 3]; ++G__25584__i;}
G__25583 = new cljs.core.IndexedSeq(G__25584__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__25595 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25595) : k.call(null,G__25595));
})() < (function (){var G__25596 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25596) : k.call(null,G__25596));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__25597__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25585_SHARP_,p2__25586_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__25585_SHARP_,p2__25586_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25597 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25598__i = 0, G__25598__a = new Array(arguments.length -  3);
while (G__25598__i < G__25598__a.length) {G__25598__a[G__25598__i] = arguments[G__25598__i + 3]; ++G__25598__i;}
  more = new cljs.core.IndexedSeq(G__25598__a,0);
} 
return G__25597__delegate.call(this,k,x,y,more);};
G__25597.cljs$lang$maxFixedArity = 3;
G__25597.cljs$lang$applyTo = (function (arglist__25599){
var k = cljs.core.first(arglist__25599);
arglist__25599 = cljs.core.next(arglist__25599);
var x = cljs.core.first(arglist__25599);
arglist__25599 = cljs.core.next(arglist__25599);
var y = cljs.core.first(arglist__25599);
var more = cljs.core.rest(arglist__25599);
return G__25597__delegate(k,x,y,more);
});
G__25597.cljs$core$IFn$_invoke$arity$variadic = G__25597__delegate;
return G__25597;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__25600 = null;
if (arguments.length > 3) {
var G__25601__i = 0, G__25601__a = new Array(arguments.length -  3);
while (G__25601__i < G__25601__a.length) {G__25601__a[G__25601__i] = arguments[G__25601__i + 3]; ++G__25601__i;}
G__25600 = new cljs.core.IndexedSeq(G__25601__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__25618 = null;
var G__25618__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25618__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25613 = result;
var G__25614 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25613,G__25614) : rf.call(null,G__25613,G__25614));
})());
})());
var G__25615 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25615) : rf.call(null,G__25615));
});
var G__25618__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__25616 = result;
var G__25617 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25616,G__25617) : rf.call(null,G__25616,G__25617));
} else {
return result;
}
});
G__25618 = function(result,input){
switch(arguments.length){
case 0:
return G__25618__0.call(this);
case 1:
return G__25618__1.call(this,result);
case 2:
return G__25618__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25618.cljs$core$IFn$_invoke$arity$0 = G__25618__0;
G__25618.cljs$core$IFn$_invoke$arity$1 = G__25618__1;
G__25618.cljs$core$IFn$_invoke$arity$2 = G__25618__2;
return G__25618;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__25631 = null;
var G__25631__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25631__1 = (function (result){
var G__25626 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25626) : rf.call(null,G__25626));
});
var G__25631__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__25627 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25627) : pred.call(null,G__25627));
})())){
var G__25628 = result;
var G__25629 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25628,G__25629) : rf.call(null,G__25628,G__25629));
} else {
return cljs.core.reduced(result);
}
});
G__25631 = function(result,input){
switch(arguments.length){
case 0:
return G__25631__0.call(this);
case 1:
return G__25631__1.call(this,result);
case 2:
return G__25631__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25631.cljs$core$IFn$_invoke$arity$0 = G__25631__0;
G__25631.cljs$core$IFn$_invoke$arity$1 = G__25631__1;
G__25631.cljs$core$IFn$_invoke$arity$2 = G__25631__2;
return G__25631;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__25630 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25630) : pred.call(null,G__25630));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__25636 = (function (){var G__25638 = cljs.core._entry_key(sc,e);
var G__25639 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25638,G__25639) : comp.call(null,G__25638,G__25639));
})();
var G__25637 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__25636,G__25637) : test.call(null,G__25636,G__25637));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25643 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25643,(0),null);
var s = vec__25643;
if(cljs.core.truth_((function (){var G__25644 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25644) : include.call(null,G__25644));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25645 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25645,(0),null);
var s = vec__25645;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25649 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25649,(0),null);
var s = vec__25649;
if(cljs.core.truth_((function (){var G__25650 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25650) : include.call(null,G__25650));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25651 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25651,(0),null);
var s = vec__25651;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__25652 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25652) : Math.ceil.call(null,G__25652));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13194__auto__ = self__.__hash;
if(!((h__13194__auto__ == null))){
return h__13194__auto__;
} else {
var h__13194__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13194__auto____$1;

return h__13194__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__25653 = ret;
var G__25654 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25653,G__25654) : f.call(null,G__25653,G__25654));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__25655 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25655) : cljs.core.deref.call(null,G__25655));
} else {
var G__25656 = (i + self__.step);
var G__25657 = ret__$1;
i = G__25656;
ret = G__25657;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25675 = null;
var G__25675__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25675__1 = (function (result){
var G__25672 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25672) : rf.call(null,G__25672));
});
var G__25675__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__25673 = result;
var G__25674 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25673,G__25674) : rf.call(null,G__25673,G__25674));
} else {
return result;
}
});
G__25675 = function(result,input){
switch(arguments.length){
case 0:
return G__25675__0.call(this);
case 1:
return G__25675__1.call(this,result);
case 2:
return G__25675__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25675.cljs$core$IFn$_invoke$arity$0 = G__25675__0;
G__25675.cljs$core$IFn$_invoke$arity$1 = G__25675__1;
G__25675.cljs$core$IFn$_invoke$arity$2 = G__25675__2;
return G__25675;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__25697 = null;
var G__25697__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25697__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25688 = result;
var G__25689 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25688,G__25689) : rf.call(null,G__25688,G__25689));
})());
})());
var G__25690 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25690) : rf.call(null,G__25690));
});
var G__25697__2 = (function (result,input){
var pval = (function (){var G__25691 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25691) : cljs.core.deref.call(null,G__25691));
})();
var val = (function (){var G__25692 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25692) : f.call(null,G__25692));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__25693 = result;
var G__25694 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25693,G__25694) : rf.call(null,G__25693,G__25694));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__25697 = function(result,input){
switch(arguments.length){
case 0:
return G__25697__0.call(this);
case 1:
return G__25697__1.call(this,result);
case 2:
return G__25697__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25697.cljs$core$IFn$_invoke$arity$0 = G__25697__0;
G__25697.cljs$core$IFn$_invoke$arity$1 = G__25697__1;
G__25697.cljs$core$IFn$_invoke$arity$2 = G__25697__2;
return G__25697;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__25695 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25695) : f.call(null,G__25695));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__25676_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__25696 = p1__25676_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25696) : f.call(null,G__25696));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__25706 = init;
var G__25707 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25706,G__25707) : f.call(null,G__25706,G__25707));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__25802 = null;
var G__25802__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__25802__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25760 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25760) : f.call(null,G__25760));
})()],null));
});
var G__25802__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25761 = x;
var G__25762 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25761,G__25762) : f.call(null,G__25761,G__25762));
})()],null));
});
var G__25802__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25763 = x;
var G__25764 = y;
var G__25765 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25763,G__25764,G__25765) : f.call(null,G__25763,G__25764,G__25765));
})()],null));
});
var G__25802__4 = (function() { 
var G__25803__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__25803 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25804__i = 0, G__25804__a = new Array(arguments.length -  3);
while (G__25804__i < G__25804__a.length) {G__25804__a[G__25804__i] = arguments[G__25804__i + 3]; ++G__25804__i;}
  args = new cljs.core.IndexedSeq(G__25804__a,0);
} 
return G__25803__delegate.call(this,x,y,z,args);};
G__25803.cljs$lang$maxFixedArity = 3;
G__25803.cljs$lang$applyTo = (function (arglist__25805){
var x = cljs.core.first(arglist__25805);
arglist__25805 = cljs.core.next(arglist__25805);
var y = cljs.core.first(arglist__25805);
arglist__25805 = cljs.core.next(arglist__25805);
var z = cljs.core.first(arglist__25805);
var args = cljs.core.rest(arglist__25805);
return G__25803__delegate(x,y,z,args);
});
G__25803.cljs$core$IFn$_invoke$arity$variadic = G__25803__delegate;
return G__25803;
})()
;
G__25802 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25802__0.call(this);
case 1:
return G__25802__1.call(this,x);
case 2:
return G__25802__2.call(this,x,y);
case 3:
return G__25802__3.call(this,x,y,z);
default:
var G__25806 = null;
if (arguments.length > 3) {
var G__25807__i = 0, G__25807__a = new Array(arguments.length -  3);
while (G__25807__i < G__25807__a.length) {G__25807__a[G__25807__i] = arguments[G__25807__i + 3]; ++G__25807__i;}
G__25806 = new cljs.core.IndexedSeq(G__25807__a,0);
}
return G__25802__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25802.cljs$lang$maxFixedArity = 3;
G__25802.cljs$lang$applyTo = G__25802__4.cljs$lang$applyTo;
G__25802.cljs$core$IFn$_invoke$arity$0 = G__25802__0;
G__25802.cljs$core$IFn$_invoke$arity$1 = G__25802__1;
G__25802.cljs$core$IFn$_invoke$arity$2 = G__25802__2;
G__25802.cljs$core$IFn$_invoke$arity$3 = G__25802__3;
G__25802.cljs$core$IFn$_invoke$arity$variadic = G__25802__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25802;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__25808 = null;
var G__25808__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__25808__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25766 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25766) : f.call(null,G__25766));
})(),(function (){var G__25767 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25767) : g.call(null,G__25767));
})()],null));
});
var G__25808__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25768 = x;
var G__25769 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25768,G__25769) : f.call(null,G__25768,G__25769));
})(),(function (){var G__25770 = x;
var G__25771 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25770,G__25771) : g.call(null,G__25770,G__25771));
})()],null));
});
var G__25808__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25772 = x;
var G__25773 = y;
var G__25774 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25772,G__25773,G__25774) : f.call(null,G__25772,G__25773,G__25774));
})(),(function (){var G__25775 = x;
var G__25776 = y;
var G__25777 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25775,G__25776,G__25777) : g.call(null,G__25775,G__25776,G__25777));
})()],null));
});
var G__25808__4 = (function() { 
var G__25809__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__25809 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25810__i = 0, G__25810__a = new Array(arguments.length -  3);
while (G__25810__i < G__25810__a.length) {G__25810__a[G__25810__i] = arguments[G__25810__i + 3]; ++G__25810__i;}
  args = new cljs.core.IndexedSeq(G__25810__a,0);
} 
return G__25809__delegate.call(this,x,y,z,args);};
G__25809.cljs$lang$maxFixedArity = 3;
G__25809.cljs$lang$applyTo = (function (arglist__25811){
var x = cljs.core.first(arglist__25811);
arglist__25811 = cljs.core.next(arglist__25811);
var y = cljs.core.first(arglist__25811);
arglist__25811 = cljs.core.next(arglist__25811);
var z = cljs.core.first(arglist__25811);
var args = cljs.core.rest(arglist__25811);
return G__25809__delegate(x,y,z,args);
});
G__25809.cljs$core$IFn$_invoke$arity$variadic = G__25809__delegate;
return G__25809;
})()
;
G__25808 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25808__0.call(this);
case 1:
return G__25808__1.call(this,x);
case 2:
return G__25808__2.call(this,x,y);
case 3:
return G__25808__3.call(this,x,y,z);
default:
var G__25812 = null;
if (arguments.length > 3) {
var G__25813__i = 0, G__25813__a = new Array(arguments.length -  3);
while (G__25813__i < G__25813__a.length) {G__25813__a[G__25813__i] = arguments[G__25813__i + 3]; ++G__25813__i;}
G__25812 = new cljs.core.IndexedSeq(G__25813__a,0);
}
return G__25808__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25808.cljs$lang$maxFixedArity = 3;
G__25808.cljs$lang$applyTo = G__25808__4.cljs$lang$applyTo;
G__25808.cljs$core$IFn$_invoke$arity$0 = G__25808__0;
G__25808.cljs$core$IFn$_invoke$arity$1 = G__25808__1;
G__25808.cljs$core$IFn$_invoke$arity$2 = G__25808__2;
G__25808.cljs$core$IFn$_invoke$arity$3 = G__25808__3;
G__25808.cljs$core$IFn$_invoke$arity$variadic = G__25808__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25808;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__25814 = null;
var G__25814__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__25814__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25778 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25778) : f.call(null,G__25778));
})(),(function (){var G__25779 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25779) : g.call(null,G__25779));
})(),(function (){var G__25780 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25780) : h.call(null,G__25780));
})()],null));
});
var G__25814__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25781 = x;
var G__25782 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25781,G__25782) : f.call(null,G__25781,G__25782));
})(),(function (){var G__25783 = x;
var G__25784 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25783,G__25784) : g.call(null,G__25783,G__25784));
})(),(function (){var G__25785 = x;
var G__25786 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25785,G__25786) : h.call(null,G__25785,G__25786));
})()],null));
});
var G__25814__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25787 = x;
var G__25788 = y;
var G__25789 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25787,G__25788,G__25789) : f.call(null,G__25787,G__25788,G__25789));
})(),(function (){var G__25790 = x;
var G__25791 = y;
var G__25792 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25790,G__25791,G__25792) : g.call(null,G__25790,G__25791,G__25792));
})(),(function (){var G__25793 = x;
var G__25794 = y;
var G__25795 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25793,G__25794,G__25795) : h.call(null,G__25793,G__25794,G__25795));
})()],null));
});
var G__25814__4 = (function() { 
var G__25815__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__25815 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25816__i = 0, G__25816__a = new Array(arguments.length -  3);
while (G__25816__i < G__25816__a.length) {G__25816__a[G__25816__i] = arguments[G__25816__i + 3]; ++G__25816__i;}
  args = new cljs.core.IndexedSeq(G__25816__a,0);
} 
return G__25815__delegate.call(this,x,y,z,args);};
G__25815.cljs$lang$maxFixedArity = 3;
G__25815.cljs$lang$applyTo = (function (arglist__25817){
var x = cljs.core.first(arglist__25817);
arglist__25817 = cljs.core.next(arglist__25817);
var y = cljs.core.first(arglist__25817);
arglist__25817 = cljs.core.next(arglist__25817);
var z = cljs.core.first(arglist__25817);
var args = cljs.core.rest(arglist__25817);
return G__25815__delegate(x,y,z,args);
});
G__25815.cljs$core$IFn$_invoke$arity$variadic = G__25815__delegate;
return G__25815;
})()
;
G__25814 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25814__0.call(this);
case 1:
return G__25814__1.call(this,x);
case 2:
return G__25814__2.call(this,x,y);
case 3:
return G__25814__3.call(this,x,y,z);
default:
var G__25818 = null;
if (arguments.length > 3) {
var G__25819__i = 0, G__25819__a = new Array(arguments.length -  3);
while (G__25819__i < G__25819__a.length) {G__25819__a[G__25819__i] = arguments[G__25819__i + 3]; ++G__25819__i;}
G__25818 = new cljs.core.IndexedSeq(G__25819__a,0);
}
return G__25814__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25818);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25814.cljs$lang$maxFixedArity = 3;
G__25814.cljs$lang$applyTo = G__25814__4.cljs$lang$applyTo;
G__25814.cljs$core$IFn$_invoke$arity$0 = G__25814__0;
G__25814.cljs$core$IFn$_invoke$arity$1 = G__25814__1;
G__25814.cljs$core$IFn$_invoke$arity$2 = G__25814__2;
G__25814.cljs$core$IFn$_invoke$arity$3 = G__25814__3;
G__25814.cljs$core$IFn$_invoke$arity$variadic = G__25814__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25814;
})()
});
var juxt__4 = (function() { 
var G__25820__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__25821 = null;
var G__25821__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25708_SHARP_,p2__25709_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25708_SHARP_,(function (){return (p2__25709_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__25709_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__25709_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25821__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25710_SHARP_,p2__25711_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25710_SHARP_,(function (){var G__25796 = x;
return (p2__25711_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__25711_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25796) : p2__25711_SHARP_.call(null,G__25796));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25821__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25712_SHARP_,p2__25713_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25712_SHARP_,(function (){var G__25797 = x;
var G__25798 = y;
return (p2__25713_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__25713_SHARP_.cljs$core$IFn$_invoke$arity$2(G__25797,G__25798) : p2__25713_SHARP_.call(null,G__25797,G__25798));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25821__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25714_SHARP_,p2__25715_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25714_SHARP_,(function (){var G__25799 = x;
var G__25800 = y;
var G__25801 = z;
return (p2__25715_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__25715_SHARP_.cljs$core$IFn$_invoke$arity$3(G__25799,G__25800,G__25801) : p2__25715_SHARP_.call(null,G__25799,G__25800,G__25801));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25821__4 = (function() { 
var G__25822__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25716_SHARP_,p2__25717_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25716_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__25717_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__25822 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25823__i = 0, G__25823__a = new Array(arguments.length -  3);
while (G__25823__i < G__25823__a.length) {G__25823__a[G__25823__i] = arguments[G__25823__i + 3]; ++G__25823__i;}
  args = new cljs.core.IndexedSeq(G__25823__a,0);
} 
return G__25822__delegate.call(this,x,y,z,args);};
G__25822.cljs$lang$maxFixedArity = 3;
G__25822.cljs$lang$applyTo = (function (arglist__25824){
var x = cljs.core.first(arglist__25824);
arglist__25824 = cljs.core.next(arglist__25824);
var y = cljs.core.first(arglist__25824);
arglist__25824 = cljs.core.next(arglist__25824);
var z = cljs.core.first(arglist__25824);
var args = cljs.core.rest(arglist__25824);
return G__25822__delegate(x,y,z,args);
});
G__25822.cljs$core$IFn$_invoke$arity$variadic = G__25822__delegate;
return G__25822;
})()
;
G__25821 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25821__0.call(this);
case 1:
return G__25821__1.call(this,x);
case 2:
return G__25821__2.call(this,x,y);
case 3:
return G__25821__3.call(this,x,y,z);
default:
var G__25825 = null;
if (arguments.length > 3) {
var G__25826__i = 0, G__25826__a = new Array(arguments.length -  3);
while (G__25826__i < G__25826__a.length) {G__25826__a[G__25826__i] = arguments[G__25826__i + 3]; ++G__25826__i;}
G__25825 = new cljs.core.IndexedSeq(G__25826__a,0);
}
return G__25821__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25821.cljs$lang$maxFixedArity = 3;
G__25821.cljs$lang$applyTo = G__25821__4.cljs$lang$applyTo;
G__25821.cljs$core$IFn$_invoke$arity$0 = G__25821__0;
G__25821.cljs$core$IFn$_invoke$arity$1 = G__25821__1;
G__25821.cljs$core$IFn$_invoke$arity$2 = G__25821__2;
G__25821.cljs$core$IFn$_invoke$arity$3 = G__25821__3;
G__25821.cljs$core$IFn$_invoke$arity$variadic = G__25821__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25821;
})()
;})(fs__$1))
};
var G__25820 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25827__i = 0, G__25827__a = new Array(arguments.length -  3);
while (G__25827__i < G__25827__a.length) {G__25827__a[G__25827__i] = arguments[G__25827__i + 3]; ++G__25827__i;}
  fs = new cljs.core.IndexedSeq(G__25827__a,0);
} 
return G__25820__delegate.call(this,f,g,h,fs);};
G__25820.cljs$lang$maxFixedArity = 3;
G__25820.cljs$lang$applyTo = (function (arglist__25828){
var f = cljs.core.first(arglist__25828);
arglist__25828 = cljs.core.next(arglist__25828);
var g = cljs.core.first(arglist__25828);
arglist__25828 = cljs.core.next(arglist__25828);
var h = cljs.core.first(arglist__25828);
var fs = cljs.core.rest(arglist__25828);
return G__25820__delegate(f,g,h,fs);
});
G__25820.cljs$core$IFn$_invoke$arity$variadic = G__25820__delegate;
return G__25820;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__25829 = null;
if (arguments.length > 3) {
var G__25830__i = 0, G__25830__a = new Array(arguments.length -  3);
while (G__25830__i < G__25830__a.length) {G__25830__a[G__25830__i] = arguments[G__25830__i + 3]; ++G__25830__i;}
G__25829 = new cljs.core.IndexedSeq(G__25830__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__25829);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__25831 = cljs.core.next(coll);
coll = G__25831;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__25832 = (n - (1));
var G__25833 = cljs.core.next(coll);
n = G__25832;
coll = G__25833;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__25837 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25837,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25837,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25837,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_25845 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__25846_25852 = cljs.core.first(coll);
var G__25847_25853 = writer;
var G__25848_25854 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25846_25852,G__25847_25853,G__25848_25854) : print_one.call(null,G__25846_25852,G__25847_25853,G__25848_25854));
} else {
}

var coll_25855__$1 = cljs.core.next(coll);
var n_25856 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_25855__$1) && (((n_25856 == null)) || (!((n_25856 === (0)))))){
cljs.core._write(writer,sep);

var G__25849_25857 = cljs.core.first(coll_25855__$1);
var G__25850_25858 = writer;
var G__25851_25859 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25849_25857,G__25850_25858,G__25851_25859) : print_one.call(null,G__25849_25857,G__25850_25858,G__25851_25859));

var G__25860 = cljs.core.next(coll_25855__$1);
var G__25861 = (n_25856 - (1));
coll_25855__$1 = G__25860;
n_25856 = G__25861;
continue;
} else {
if((cljs.core.seq(coll_25855__$1)) && ((n_25856 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_25845;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__25866 = cljs.core.seq(ss);
var chunk__25867 = null;
var count__25868 = (0);
var i__25869 = (0);
while(true){
if((i__25869 < count__25868)){
var s = chunk__25867.cljs$core$IIndexed$_nth$arity$2(null,i__25869);
cljs.core._write(writer,s);

var G__25870 = seq__25866;
var G__25871 = chunk__25867;
var G__25872 = count__25868;
var G__25873 = (i__25869 + (1));
seq__25866 = G__25870;
chunk__25867 = G__25871;
count__25868 = G__25872;
i__25869 = G__25873;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25866);
if(temp__4126__auto__){
var seq__25866__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25866__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25866__$1);
var G__25874 = cljs.core.chunk_rest(seq__25866__$1);
var G__25875 = c__13560__auto__;
var G__25876 = cljs.core.count(c__13560__auto__);
var G__25877 = (0);
seq__25866 = G__25874;
chunk__25867 = G__25875;
count__25868 = G__25876;
i__25869 = G__25877;
continue;
} else {
var s = cljs.core.first(seq__25866__$1);
cljs.core._write(writer,s);

var G__25878 = cljs.core.next(seq__25866__$1);
var G__25879 = null;
var G__25880 = (0);
var G__25881 = (0);
seq__25866 = G__25878;
chunk__25867 = G__25879;
count__25868 = G__25880;
i__25869 = G__25881;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__25882__i = 0, G__25882__a = new Array(arguments.length -  1);
while (G__25882__i < G__25882__a.length) {G__25882__a[G__25882__i] = arguments[G__25882__i + 1]; ++G__25882__i;}
  ss = new cljs.core.IndexedSeq(G__25882__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__25883){
var writer = cljs.core.first(arglist__25883);
var ss = cljs.core.rest(arglist__25883);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj25885 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj25885;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__25888 = "[\\\\\"\b\f\n\r\t]";
var G__25889 = "g";
return RegExp(G__25888,G__25889);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12761__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12761__auto__)){
var and__12761__auto____$1 = (function (){var G__25903 = obj;
if(G__25903){
var bit__13454__auto__ = (G__25903.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13454__auto__) || (G__25903.cljs$core$IMeta$)){
return true;
} else {
if((!G__25903.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25903);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25903);
}
})();
if(and__12761__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__25904 = obj;
if(G__25904){
var bit__13447__auto__ = (G__25904.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13447__auto__) || (G__25904.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__25905 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__25906 = pr_writer;
var G__25907 = writer;
var G__25908 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__25905,G__25906,G__25907,G__25908) : cljs.core.print_map.call(null,G__25905,G__25906,G__25907,G__25908));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__25909 = obj;
return goog.isString(G__25909);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__25911 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__25911;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__25910 = obj;
if(G__25910){
var bit__13454__auto__ = (G__25910.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13454__auto__) || (G__25910.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__25910.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25910);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25910);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__25916 = cljs.core.seq(cljs.core.next(objs));
var chunk__25917 = null;
var count__25918 = (0);
var i__25919 = (0);
while(true){
if((i__25919 < count__25918)){
var obj = chunk__25917.cljs$core$IIndexed$_nth$arity$2(null,i__25919);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25920 = seq__25916;
var G__25921 = chunk__25917;
var G__25922 = count__25918;
var G__25923 = (i__25919 + (1));
seq__25916 = G__25920;
chunk__25917 = G__25921;
count__25918 = G__25922;
i__25919 = G__25923;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25916);
if(temp__4126__auto__){
var seq__25916__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25916__$1)){
var c__13560__auto__ = cljs.core.chunk_first(seq__25916__$1);
var G__25924 = cljs.core.chunk_rest(seq__25916__$1);
var G__25925 = c__13560__auto__;
var G__25926 = cljs.core.count(c__13560__auto__);
var G__25927 = (0);
seq__25916 = G__25924;
chunk__25917 = G__25925;
count__25918 = G__25926;
i__25919 = G__25927;
continue;
} else {
var obj = cljs.core.first(seq__25916__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25928 = cljs.core.next(seq__25916__$1);
var G__25929 = null;
var G__25930 = (0);
var G__25931 = (0);
seq__25916 = G__25928;
chunk__25917 = G__25929;
count__25918 = G__25930;
i__25919 = G__25931;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25932__i = 0, G__25932__a = new Array(arguments.length -  0);
while (G__25932__i < G__25932__a.length) {G__25932__a[G__25932__i] = arguments[G__25932__i + 0]; ++G__25932__i;}
  objs = new cljs.core.IndexedSeq(G__25932__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__25933){
var objs = cljs.core.seq(arglist__25933);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25934__i = 0, G__25934__a = new Array(arguments.length -  0);
while (G__25934__i < G__25934__a.length) {G__25934__a[G__25934__i] = arguments[G__25934__i + 0]; ++G__25934__i;}
  objs = new cljs.core.IndexedSeq(G__25934__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__25935){
var objs = cljs.core.seq(arglist__25935);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25936__i = 0, G__25936__a = new Array(arguments.length -  0);
while (G__25936__i < G__25936__a.length) {G__25936__a[G__25936__i] = arguments[G__25936__i + 0]; ++G__25936__i;}
  objs = new cljs.core.IndexedSeq(G__25936__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__25937){
var objs = cljs.core.seq(arglist__25937);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25938__i = 0, G__25938__a = new Array(arguments.length -  0);
while (G__25938__i < G__25938__a.length) {G__25938__a[G__25938__i] = arguments[G__25938__i + 0]; ++G__25938__i;}
  objs = new cljs.core.IndexedSeq(G__25938__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__25939){
var objs = cljs.core.seq(arglist__25939);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25940__i = 0, G__25940__a = new Array(arguments.length -  0);
while (G__25940__i < G__25940__a.length) {G__25940__a[G__25940__i] = arguments[G__25940__i + 0]; ++G__25940__i;}
  objs = new cljs.core.IndexedSeq(G__25940__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__25941){
var objs = cljs.core.seq(arglist__25941);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25942__i = 0, G__25942__a = new Array(arguments.length -  0);
while (G__25942__i < G__25942__a.length) {G__25942__a[G__25942__i] = arguments[G__25942__i + 0]; ++G__25942__i;}
  objs = new cljs.core.IndexedSeq(G__25942__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__25943){
var objs = cljs.core.seq(arglist__25943);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25944__i = 0, G__25944__a = new Array(arguments.length -  0);
while (G__25944__i < G__25944__a.length) {G__25944__a[G__25944__i] = arguments[G__25944__i + 0]; ++G__25944__i;}
  objs = new cljs.core.IndexedSeq(G__25944__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__25945){
var objs = cljs.core.seq(arglist__25945);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25946__i = 0, G__25946__a = new Array(arguments.length -  0);
while (G__25946__i < G__25946__a.length) {G__25946__a[G__25946__i] = arguments[G__25946__i + 0]; ++G__25946__i;}
  objs = new cljs.core.IndexedSeq(G__25946__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__25947){
var objs = cljs.core.seq(arglist__25947);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__25954_25960 = cljs.core.key(e);
var G__25955_25961 = w;
var G__25956_25962 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25954_25960,G__25955_25961,G__25956_25962) : print_one.call(null,G__25954_25960,G__25955_25961,G__25956_25962));

cljs.core._write(w," ");

var G__25957 = cljs.core.val(e);
var G__25958 = w;
var G__25959 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25957,G__25958,G__25959) : print_one.call(null,G__25957,G__25958,G__25959));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__25963__i = 0, G__25963__a = new Array(arguments.length -  2);
while (G__25963__i < G__25963__a.length) {G__25963__a[G__25963__i] = arguments[G__25963__i + 2]; ++G__25963__i;}
  args = new cljs.core.IndexedSeq(G__25963__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__25964){
var iref = cljs.core.first(arglist__25964);
arglist__25964 = cljs.core.next(arglist__25964);
var f = cljs.core.first(arglist__25964);
var args = cljs.core.rest(arglist__25964);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__25967 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25967) : cljs.core.atom.call(null,G__25967));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__25969 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25969) : cljs.core.deref.call(null,G__25969));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__25970_SHARP_,p2__25971_SHARP_){
var ret = (function (){var G__25974 = p1__25970_SHARP_;
var G__25975 = p2__25971_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25974,G__25975) : rf.call(null,G__25974,G__25975));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__25978 = null;
var G__25978__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25978__1 = (function (result){
var G__25977 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25977) : rf.call(null,G__25977));
});
var G__25978__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__25978 = function(result,input){
switch(arguments.length){
case 0:
return G__25978__0.call(this);
case 1:
return G__25978__1.call(this,result);
case 2:
return G__25978__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25978.cljs$core$IFn$_invoke$arity$0 = G__25978__0;
G__25978.cljs$core$IFn$_invoke$arity$1 = G__25978__1;
G__25978.cljs$core$IFn$_invoke$arity$2 = G__25978__2;
return G__25978;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__25987 = null;
var G__25987__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25987__1 = (function (result){
var G__25983 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25983) : rf.call(null,G__25983));
});
var G__25987__2 = (function (result,input){
var prior = (function (){var G__25984 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25984) : cljs.core.deref.call(null,G__25984));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__25985 = result;
var G__25986 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25985,G__25986) : rf.call(null,G__25985,G__25986));
}
});
G__25987 = function(result,input){
switch(arguments.length){
case 0:
return G__25987__0.call(this);
case 1:
return G__25987__1.call(this,result);
case 2:
return G__25987__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25987.cljs$core$IFn$_invoke$arity$0 = G__25987__0;
G__25987.cljs$core$IFn$_invoke$arity$1 = G__25987__1;
G__25987.cljs$core$IFn$_invoke$arity$2 = G__25987__2;
return G__25987;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13751__auto__ = this;
return cljs.core.es6_iterator(this__13751__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25989_SHARP_,p2__25988_SHARP_){
var G__25991 = p2__25988_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__25991) : proc.call(null,G__25991));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj25993 = {};
return obj25993;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12761__auto__ = x;
if(and__12761__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12761__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13417__auto__ = (((x == null))?null:x);
return (function (){var or__12773__auto__ = (cljs.core._clj__GT_js[(function (){var G__25997 = x__13417__auto__;
return goog.typeOf(G__25997);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12761__auto__ = x;
if(and__12761__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12761__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13417__auto__ = (((x == null))?null:x);
return (function (){var or__12773__auto__ = (cljs.core._key__GT_js[(function (){var G__26001 = x__13417__auto__;
return goog.typeOf(G__26001);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__26004 = k;
if(G__26004){
var bit__13454__auto__ = null;
if(cljs.core.truth_((function (){var or__12773__auto__ = bit__13454__auto__;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return G__26004.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__26004.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26004);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26004);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__26005 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__26005) : cljs.core.clj__GT_js.call(null,G__26005));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__26021 = x;
if(G__26021){
var bit__13454__auto__ = null;
if(cljs.core.truth_((function (){var or__12773__auto__ = bit__13454__auto__;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return G__26021.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__26021.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26021);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26021);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj26023 = {};
return obj26023;
})();
var seq__26024_26034 = cljs.core.seq(x);
var chunk__26025_26035 = null;
var count__26026_26036 = (0);
var i__26027_26037 = (0);
while(true){
if((i__26027_26037 < count__26026_26036)){
var vec__26028_26038 = chunk__26025_26035.cljs$core$IIndexed$_nth$arity$2(null,i__26027_26037);
var k_26039 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26028_26038,(0),null);
var v_26040 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26028_26038,(1),null);
(m[cljs.core.key__GT_js(k_26039)] = clj__GT_js(v_26040));

var G__26041 = seq__26024_26034;
var G__26042 = chunk__26025_26035;
var G__26043 = count__26026_26036;
var G__26044 = (i__26027_26037 + (1));
seq__26024_26034 = G__26041;
chunk__26025_26035 = G__26042;
count__26026_26036 = G__26043;
i__26027_26037 = G__26044;
continue;
} else {
var temp__4126__auto___26045 = cljs.core.seq(seq__26024_26034);
if(temp__4126__auto___26045){
var seq__26024_26046__$1 = temp__4126__auto___26045;
if(cljs.core.chunked_seq_QMARK_(seq__26024_26046__$1)){
var c__13560__auto___26047 = cljs.core.chunk_first(seq__26024_26046__$1);
var G__26048 = cljs.core.chunk_rest(seq__26024_26046__$1);
var G__26049 = c__13560__auto___26047;
var G__26050 = cljs.core.count(c__13560__auto___26047);
var G__26051 = (0);
seq__26024_26034 = G__26048;
chunk__26025_26035 = G__26049;
count__26026_26036 = G__26050;
i__26027_26037 = G__26051;
continue;
} else {
var vec__26029_26052 = cljs.core.first(seq__26024_26046__$1);
var k_26053 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26029_26052,(0),null);
var v_26054 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26029_26052,(1),null);
(m[cljs.core.key__GT_js(k_26053)] = clj__GT_js(v_26054));

var G__26055 = cljs.core.next(seq__26024_26046__$1);
var G__26056 = null;
var G__26057 = (0);
var G__26058 = (0);
seq__26024_26034 = G__26055;
chunk__26025_26035 = G__26056;
count__26026_26036 = G__26057;
i__26027_26037 = G__26058;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__26030_26059 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__26031_26060 = null;
var count__26032_26061 = (0);
var i__26033_26062 = (0);
while(true){
if((i__26033_26062 < count__26032_26061)){
var x_26063__$1 = chunk__26031_26060.cljs$core$IIndexed$_nth$arity$2(null,i__26033_26062);
arr.push(x_26063__$1);

var G__26064 = seq__26030_26059;
var G__26065 = chunk__26031_26060;
var G__26066 = count__26032_26061;
var G__26067 = (i__26033_26062 + (1));
seq__26030_26059 = G__26064;
chunk__26031_26060 = G__26065;
count__26032_26061 = G__26066;
i__26033_26062 = G__26067;
continue;
} else {
var temp__4126__auto___26068 = cljs.core.seq(seq__26030_26059);
if(temp__4126__auto___26068){
var seq__26030_26069__$1 = temp__4126__auto___26068;
if(cljs.core.chunked_seq_QMARK_(seq__26030_26069__$1)){
var c__13560__auto___26070 = cljs.core.chunk_first(seq__26030_26069__$1);
var G__26071 = cljs.core.chunk_rest(seq__26030_26069__$1);
var G__26072 = c__13560__auto___26070;
var G__26073 = cljs.core.count(c__13560__auto___26070);
var G__26074 = (0);
seq__26030_26059 = G__26071;
chunk__26031_26060 = G__26072;
count__26032_26061 = G__26073;
i__26033_26062 = G__26074;
continue;
} else {
var x_26075__$1 = cljs.core.first(seq__26030_26069__$1);
arr.push(x_26075__$1);

var G__26076 = cljs.core.next(seq__26030_26069__$1);
var G__26077 = null;
var G__26078 = (0);
var G__26079 = (0);
seq__26030_26059 = G__26076;
chunk__26031_26060 = G__26077;
count__26032_26061 = G__26078;
i__26033_26062 = G__26079;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj26081 = {};
return obj26081;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12761__auto__ = x;
if(and__12761__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12761__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13417__auto__ = (((x == null))?null:x);
return (function (){var or__12773__auto__ = (cljs.core._js__GT_clj[(function (){var G__26085 = x__13417__auto__;
return goog.typeOf(G__26085);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__26142__delegate = function (x,opts){
var map__26115 = opts;
var map__26115__$1 = ((cljs.core.seq_QMARK_(map__26115))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26115):map__26115);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26115__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__26115,map__26115__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__26131 = x__$1;
if(G__26131){
var bit__13454__auto__ = null;
if(cljs.core.truth_((function (){var or__12773__auto__ = bit__13454__auto__;
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return G__26131.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__26131.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__26131);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__26131);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__13529__auto__ = ((function (map__26115,map__26115__$1,keywordize_keys,keyfn){
return (function iter__26132(s__26133){
return (new cljs.core.LazySeq(null,((function (map__26115,map__26115__$1,keywordize_keys,keyfn){
return (function (){
var s__26133__$1 = s__26133;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__26133__$1);
if(temp__4126__auto__){
var s__26133__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__26133__$2)){
var c__13527__auto__ = cljs.core.chunk_first(s__26133__$2);
var size__13528__auto__ = cljs.core.count(c__13527__auto__);
var b__26135 = cljs.core.chunk_buffer(size__13528__auto__);
if((function (){var i__26134 = (0);
while(true){
if((i__26134 < size__13528__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__13527__auto__,i__26134);
cljs.core.chunk_append(b__26135,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__26140 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__26140) : keyfn.call(null,G__26140));
})(),thisfn((x__$1[k]))], null));

var G__26143 = (i__26134 + (1));
i__26134 = G__26143;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__26135),iter__26132(cljs.core.chunk_rest(s__26133__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__26135),null);
}
} else {
var k = cljs.core.first(s__26133__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__26141 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__26141) : keyfn.call(null,G__26141));
})(),thisfn((x__$1[k]))], null),iter__26132(cljs.core.rest(s__26133__$2)));
}
} else {
return null;
}
break;
}
});})(map__26115,map__26115__$1,keywordize_keys,keyfn))
,null,null));
});})(map__26115,map__26115__$1,keywordize_keys,keyfn))
;
return iter__13529__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__26115,map__26115__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__26142 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__26144__i = 0, G__26144__a = new Array(arguments.length -  1);
while (G__26144__i < G__26144__a.length) {G__26144__a[G__26144__i] = arguments[G__26144__i + 1]; ++G__26144__i;}
  opts = new cljs.core.IndexedSeq(G__26144__a,0);
} 
return G__26142__delegate.call(this,x,opts);};
G__26142.cljs$lang$maxFixedArity = 1;
G__26142.cljs$lang$applyTo = (function (arglist__26145){
var x = cljs.core.first(arglist__26145);
var opts = cljs.core.rest(arglist__26145);
return G__26142__delegate(x,opts);
});
G__26142.cljs$core$IFn$_invoke$arity$variadic = G__26142__delegate;
return G__26142;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__26146 = null;
if (arguments.length > 1) {
var G__26147__i = 0, G__26147__a = new Array(arguments.length -  1);
while (G__26147__i < G__26147__a.length) {G__26147__a[G__26147__i] = arguments[G__26147__i + 1]; ++G__26147__i;}
G__26146 = new cljs.core.IndexedSeq(G__26147__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__26150 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26150) : cljs.core.atom.call(null,G__26150));
})();
return ((function (mem){
return (function() { 
var G__26152__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__26151 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26151) : cljs.core.deref.call(null,G__26151));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__26152 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26153__i = 0, G__26153__a = new Array(arguments.length -  0);
while (G__26153__i < G__26153__a.length) {G__26153__a[G__26153__i] = arguments[G__26153__i + 0]; ++G__26153__i;}
  args = new cljs.core.IndexedSeq(G__26153__a,0);
} 
return G__26152__delegate.call(this,args);};
G__26152.cljs$lang$maxFixedArity = 0;
G__26152.cljs$lang$applyTo = (function (arglist__26154){
var args = cljs.core.seq(arglist__26154);
return G__26152__delegate(args);
});
G__26152.cljs$core$IFn$_invoke$arity$variadic = G__26152__delegate;
return G__26152;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__26156 = ret;
f = G__26156;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__26157__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__26157 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__26158__i = 0, G__26158__a = new Array(arguments.length -  1);
while (G__26158__i < G__26158__a.length) {G__26158__a[G__26158__i] = arguments[G__26158__i + 1]; ++G__26158__i;}
  args = new cljs.core.IndexedSeq(G__26158__a,0);
} 
return G__26157__delegate.call(this,f,args);};
G__26157.cljs$lang$maxFixedArity = 1;
G__26157.cljs$lang$applyTo = (function (arglist__26159){
var f = cljs.core.first(arglist__26159);
var args = cljs.core.rest(arglist__26159);
return G__26157__delegate(f,args);
});
G__26157.cljs$core$IFn$_invoke$arity$variadic = G__26157__delegate;
return G__26157;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__26160 = null;
if (arguments.length > 1) {
var G__26161__i = 0, G__26161__a = new Array(arguments.length -  1);
while (G__26161__i < G__26161__a.length) {G__26161__a[G__26161__i] = arguments[G__26161__i + 1]; ++G__26161__i;}
G__26160 = new cljs.core.IndexedSeq(G__26161__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__26164 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__26164) : Math.floor.call(null,G__26164));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__26166 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26166) : f.call(null,G__26166));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__26168 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26168) : cljs.core.atom.call(null,G__26168));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__26169__i = 0, G__26169__a = new Array(arguments.length -  1);
while (G__26169__i < G__26169__a.length) {G__26169__a[G__26169__i] = arguments[G__26169__i + 1]; ++G__26169__i;}
  args = new cljs.core.IndexedSeq(G__26169__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__26170){
var f = cljs.core.first(arglist__26170);
var args = cljs.core.rest(arglist__26170);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__26235 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26235) : cljs.core.deref.call(null,G__26235));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12773__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
var and__12761__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12761__auto__){
var and__12761__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12761__auto____$1){
var and__12761__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12761__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__26260 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__26258 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__26258) : child.call(null,G__26258));
})(),(function (){var G__26259 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__26259) : parent.call(null,G__26259));
})());
var G__26261 = (i + (1));
ret = G__26260;
i = G__26261;
continue;
}
break;
}
} else {
return and__12761__auto____$2;
}
} else {
return and__12761__auto____$1;
}
} else {
return and__12761__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__26265 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26265) : cljs.core.deref.call(null,G__26265));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__26269 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26269) : cljs.core.deref.call(null,G__26269));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__26273 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26273) : cljs.core.deref.call(null,G__26273));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__26282 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__26282) : targets.call(null,G__26282));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__26283 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__26283) : sources.call(null,G__26283));
})()));
});})(tp,td,ta))
;
var or__12773__auto__ = ((cljs.core.contains_QMARK_((function (){var G__26287 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__26287) : tp.call(null,G__26287));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__26288 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__26288) : ta.call(null,G__26288));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__26289 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__26289) : ta.call(null,G__26289));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__26296 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26296) : parentMap.call(null,G__26296));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__26297 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26297) : parentMap.call(null,G__26297));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__26290_SHARP_){
return cljs.core.cons(cljs.core.first(p1__26290_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__26290_SHARP_),cljs.core.second(p1__26290_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__26298 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26298) : parentMap.call(null,G__26298));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__26291_SHARP_,p2__26292_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__26291_SHARP_,p2__26292_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__26301 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26301) : cljs.core.deref.call(null,G__26301));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__26302 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26302) : cljs.core.deref.call(null,G__26302));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__26318 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26318) : cljs.core.deref.call(null,G__26318));
})().call(null,x);
var or__12773__auto__ = (cljs.core.truth_((function (){var and__12761__auto__ = xprefs;
if(cljs.core.truth_(and__12761__auto__)){
var G__26320 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__26320) : xprefs.call(null,G__26320));
} else {
return and__12761__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__26321 = cljs.core.rest(ps);
ps = G__26321;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12773__auto____$1)){
return or__12773__auto____$1;
} else {
var or__12773__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__26322 = cljs.core.rest(ps);
ps = G__26322;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12773__auto____$2)){
return or__12773__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12773__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12773__auto__)){
return or__12773__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__26336){
var vec__26337 = p__26336;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26337,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26337,(1),null);
var e = vec__26337;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__26338 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26338) : cljs.core.deref.call(null,G__26338));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12773__auto__ = (be == null);
if(or__12773__auto__){
return or__12773__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__26339 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26339) : cljs.core.deref.call(null,G__26339));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26340 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26340) : cljs.core.deref.call(null,G__26340));
})(),(function (){var G__26341 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26341) : cljs.core.deref.call(null,G__26341));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj26343 = {};
return obj26343;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._reset[(function (){var G__26347 = x__13417__auto__;
return goog.typeOf(G__26347);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._reset["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._add_method[(function (){var G__26351 = x__13417__auto__;
return goog.typeOf(G__26351);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._add_method["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._remove_method[(function (){var G__26355 = x__13417__auto__;
return goog.typeOf(G__26355);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._prefer_method[(function (){var G__26359 = x__13417__auto__;
return goog.typeOf(G__26359);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._get_method[(function (){var G__26363 = x__13417__auto__;
return goog.typeOf(G__26363);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._get_method["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._methods[(function (){var G__26367 = x__13417__auto__;
return goog.typeOf(G__26367);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._methods["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12761__auto__ = mf;
if(and__12761__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12761__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13417__auto__ = (((mf == null))?null:mf);
return (function (){var or__12773__auto__ = (cljs.core._prefers[(function (){var G__26371 = x__13417__auto__;
return goog.typeOf(G__26371);
})()]);
if(or__12773__auto__){
return or__12773__auto__;
} else {
var or__12773__auto____$1 = (cljs.core._prefers["_"]);
if(or__12773__auto____$1){
return or__12773__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26373 = this$__$1;
return goog.getUid(G__26373);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26374 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26374) : cljs.core.deref.call(null,G__26374));
})(),(function (){var G__26375 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26375) : cljs.core.deref.call(null,G__26375));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__26376 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26376) : cljs.core.deref.call(null,G__26376));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__26377 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26377) : cljs.core.deref.call(null,G__26377));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26378 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26378) : cljs.core.deref.call(null,G__26378));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26379 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26379) : cljs.core.deref.call(null,G__26379));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__27220 = null;
var G__27220__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__27220__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26380 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26380) : self__.dispatch_fn.call(null,G__26380));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26381 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26381) : target_fn.call(null,G__26381));
});
var G__27220__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26382 = a;
var G__26383 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26382,G__26383) : self__.dispatch_fn.call(null,G__26382,G__26383));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26384 = a;
var G__26385 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26384,G__26385) : target_fn.call(null,G__26384,G__26385));
});
var G__27220__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26386 = a;
var G__26387 = b;
var G__26388 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26386,G__26387,G__26388) : self__.dispatch_fn.call(null,G__26386,G__26387,G__26388));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26389 = a;
var G__26390 = b;
var G__26391 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26389,G__26390,G__26391) : target_fn.call(null,G__26389,G__26390,G__26391));
});
var G__27220__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26392 = a;
var G__26393 = b;
var G__26394 = c;
var G__26395 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26392,G__26393,G__26394,G__26395) : self__.dispatch_fn.call(null,G__26392,G__26393,G__26394,G__26395));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26396 = a;
var G__26397 = b;
var G__26398 = c;
var G__26399 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26396,G__26397,G__26398,G__26399) : target_fn.call(null,G__26396,G__26397,G__26398,G__26399));
});
var G__27220__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26400 = a;
var G__26401 = b;
var G__26402 = c;
var G__26403 = d;
var G__26404 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26400,G__26401,G__26402,G__26403,G__26404) : self__.dispatch_fn.call(null,G__26400,G__26401,G__26402,G__26403,G__26404));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26405 = a;
var G__26406 = b;
var G__26407 = c;
var G__26408 = d;
var G__26409 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26405,G__26406,G__26407,G__26408,G__26409) : target_fn.call(null,G__26405,G__26406,G__26407,G__26408,G__26409));
});
var G__27220__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26410 = a;
var G__26411 = b;
var G__26412 = c;
var G__26413 = d;
var G__26414 = e;
var G__26415 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26410,G__26411,G__26412,G__26413,G__26414,G__26415) : self__.dispatch_fn.call(null,G__26410,G__26411,G__26412,G__26413,G__26414,G__26415));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26416 = a;
var G__26417 = b;
var G__26418 = c;
var G__26419 = d;
var G__26420 = e;
var G__26421 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26416,G__26417,G__26418,G__26419,G__26420,G__26421) : target_fn.call(null,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421));
});
var G__27220__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26422 = a;
var G__26423 = b;
var G__26424 = c;
var G__26425 = d;
var G__26426 = e;
var G__26427 = f;
var G__26428 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26422,G__26423,G__26424,G__26425,G__26426,G__26427,G__26428) : self__.dispatch_fn.call(null,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427,G__26428));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26429 = a;
var G__26430 = b;
var G__26431 = c;
var G__26432 = d;
var G__26433 = e;
var G__26434 = f;
var G__26435 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26429,G__26430,G__26431,G__26432,G__26433,G__26434,G__26435) : target_fn.call(null,G__26429,G__26430,G__26431,G__26432,G__26433,G__26434,G__26435));
});
var G__27220__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26436 = a;
var G__26437 = b;
var G__26438 = c;
var G__26439 = d;
var G__26440 = e;
var G__26441 = f;
var G__26442 = g;
var G__26443 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442,G__26443) : self__.dispatch_fn.call(null,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442,G__26443));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26444 = a;
var G__26445 = b;
var G__26446 = c;
var G__26447 = d;
var G__26448 = e;
var G__26449 = f;
var G__26450 = g;
var G__26451 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451) : target_fn.call(null,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451));
});
var G__27220__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26452 = a;
var G__26453 = b;
var G__26454 = c;
var G__26455 = d;
var G__26456 = e;
var G__26457 = f;
var G__26458 = g;
var G__26459 = h;
var G__26460 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26452,G__26453,G__26454,G__26455,G__26456,G__26457,G__26458,G__26459,G__26460) : self__.dispatch_fn.call(null,G__26452,G__26453,G__26454,G__26455,G__26456,G__26457,G__26458,G__26459,G__26460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26461 = a;
var G__26462 = b;
var G__26463 = c;
var G__26464 = d;
var G__26465 = e;
var G__26466 = f;
var G__26467 = g;
var G__26468 = h;
var G__26469 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26461,G__26462,G__26463,G__26464,G__26465,G__26466,G__26467,G__26468,G__26469) : target_fn.call(null,G__26461,G__26462,G__26463,G__26464,G__26465,G__26466,G__26467,G__26468,G__26469));
});
var G__27220__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26470 = a;
var G__26471 = b;
var G__26472 = c;
var G__26473 = d;
var G__26474 = e;
var G__26475 = f;
var G__26476 = g;
var G__26477 = h;
var G__26478 = i;
var G__26479 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26470,G__26471,G__26472,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479) : self__.dispatch_fn.call(null,G__26470,G__26471,G__26472,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26480 = a;
var G__26481 = b;
var G__26482 = c;
var G__26483 = d;
var G__26484 = e;
var G__26485 = f;
var G__26486 = g;
var G__26487 = h;
var G__26488 = i;
var G__26489 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26480,G__26481,G__26482,G__26483,G__26484,G__26485,G__26486,G__26487,G__26488,G__26489) : target_fn.call(null,G__26480,G__26481,G__26482,G__26483,G__26484,G__26485,G__26486,G__26487,G__26488,G__26489));
});
var G__27220__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26490 = a;
var G__26491 = b;
var G__26492 = c;
var G__26493 = d;
var G__26494 = e;
var G__26495 = f;
var G__26496 = g;
var G__26497 = h;
var G__26498 = i;
var G__26499 = j;
var G__26500 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500) : self__.dispatch_fn.call(null,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26501 = a;
var G__26502 = b;
var G__26503 = c;
var G__26504 = d;
var G__26505 = e;
var G__26506 = f;
var G__26507 = g;
var G__26508 = h;
var G__26509 = i;
var G__26510 = j;
var G__26511 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26501,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511) : target_fn.call(null,G__26501,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511));
});
var G__27220__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26512 = a;
var G__26513 = b;
var G__26514 = c;
var G__26515 = d;
var G__26516 = e;
var G__26517 = f;
var G__26518 = g;
var G__26519 = h;
var G__26520 = i;
var G__26521 = j;
var G__26522 = k;
var G__26523 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26512,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523) : self__.dispatch_fn.call(null,G__26512,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26524 = a;
var G__26525 = b;
var G__26526 = c;
var G__26527 = d;
var G__26528 = e;
var G__26529 = f;
var G__26530 = g;
var G__26531 = h;
var G__26532 = i;
var G__26533 = j;
var G__26534 = k;
var G__26535 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26524,G__26525,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532,G__26533,G__26534,G__26535) : target_fn.call(null,G__26524,G__26525,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532,G__26533,G__26534,G__26535));
});
var G__27220__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26536 = a;
var G__26537 = b;
var G__26538 = c;
var G__26539 = d;
var G__26540 = e;
var G__26541 = f;
var G__26542 = g;
var G__26543 = h;
var G__26544 = i;
var G__26545 = j;
var G__26546 = k;
var G__26547 = l;
var G__26548 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26536,G__26537,G__26538,G__26539,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548) : self__.dispatch_fn.call(null,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26549 = a;
var G__26550 = b;
var G__26551 = c;
var G__26552 = d;
var G__26553 = e;
var G__26554 = f;
var G__26555 = g;
var G__26556 = h;
var G__26557 = i;
var G__26558 = j;
var G__26559 = k;
var G__26560 = l;
var G__26561 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26549,G__26550,G__26551,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561) : target_fn.call(null,G__26549,G__26550,G__26551,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561));
});
var G__27220__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26562 = a;
var G__26563 = b;
var G__26564 = c;
var G__26565 = d;
var G__26566 = e;
var G__26567 = f;
var G__26568 = g;
var G__26569 = h;
var G__26570 = i;
var G__26571 = j;
var G__26572 = k;
var G__26573 = l;
var G__26574 = m;
var G__26575 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575) : self__.dispatch_fn.call(null,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26576 = a;
var G__26577 = b;
var G__26578 = c;
var G__26579 = d;
var G__26580 = e;
var G__26581 = f;
var G__26582 = g;
var G__26583 = h;
var G__26584 = i;
var G__26585 = j;
var G__26586 = k;
var G__26587 = l;
var G__26588 = m;
var G__26589 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589) : target_fn.call(null,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589));
});
var G__27220__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26590 = a;
var G__26591 = b;
var G__26592 = c;
var G__26593 = d;
var G__26594 = e;
var G__26595 = f;
var G__26596 = g;
var G__26597 = h;
var G__26598 = i;
var G__26599 = j;
var G__26600 = k;
var G__26601 = l;
var G__26602 = m;
var G__26603 = n;
var G__26604 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604) : self__.dispatch_fn.call(null,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26605 = a;
var G__26606 = b;
var G__26607 = c;
var G__26608 = d;
var G__26609 = e;
var G__26610 = f;
var G__26611 = g;
var G__26612 = h;
var G__26613 = i;
var G__26614 = j;
var G__26615 = k;
var G__26616 = l;
var G__26617 = m;
var G__26618 = n;
var G__26619 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619) : target_fn.call(null,G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619));
});
var G__27220__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26620 = a;
var G__26621 = b;
var G__26622 = c;
var G__26623 = d;
var G__26624 = e;
var G__26625 = f;
var G__26626 = g;
var G__26627 = h;
var G__26628 = i;
var G__26629 = j;
var G__26630 = k;
var G__26631 = l;
var G__26632 = m;
var G__26633 = n;
var G__26634 = o;
var G__26635 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26620,G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635) : self__.dispatch_fn.call(null,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26636 = a;
var G__26637 = b;
var G__26638 = c;
var G__26639 = d;
var G__26640 = e;
var G__26641 = f;
var G__26642 = g;
var G__26643 = h;
var G__26644 = i;
var G__26645 = j;
var G__26646 = k;
var G__26647 = l;
var G__26648 = m;
var G__26649 = n;
var G__26650 = o;
var G__26651 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646,G__26647,G__26648,G__26649,G__26650,G__26651) : target_fn.call(null,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646,G__26647,G__26648,G__26649,G__26650,G__26651));
});
var G__27220__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26652 = a;
var G__26653 = b;
var G__26654 = c;
var G__26655 = d;
var G__26656 = e;
var G__26657 = f;
var G__26658 = g;
var G__26659 = h;
var G__26660 = i;
var G__26661 = j;
var G__26662 = k;
var G__26663 = l;
var G__26664 = m;
var G__26665 = n;
var G__26666 = o;
var G__26667 = p;
var G__26668 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668) : self__.dispatch_fn.call(null,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26669 = a;
var G__26670 = b;
var G__26671 = c;
var G__26672 = d;
var G__26673 = e;
var G__26674 = f;
var G__26675 = g;
var G__26676 = h;
var G__26677 = i;
var G__26678 = j;
var G__26679 = k;
var G__26680 = l;
var G__26681 = m;
var G__26682 = n;
var G__26683 = o;
var G__26684 = p;
var G__26685 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26669,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681,G__26682,G__26683,G__26684,G__26685) : target_fn.call(null,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681,G__26682,G__26683,G__26684,G__26685));
});
var G__27220__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26686 = a;
var G__26687 = b;
var G__26688 = c;
var G__26689 = d;
var G__26690 = e;
var G__26691 = f;
var G__26692 = g;
var G__26693 = h;
var G__26694 = i;
var G__26695 = j;
var G__26696 = k;
var G__26697 = l;
var G__26698 = m;
var G__26699 = n;
var G__26700 = o;
var G__26701 = p;
var G__26702 = q;
var G__26703 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703) : self__.dispatch_fn.call(null,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26704 = a;
var G__26705 = b;
var G__26706 = c;
var G__26707 = d;
var G__26708 = e;
var G__26709 = f;
var G__26710 = g;
var G__26711 = h;
var G__26712 = i;
var G__26713 = j;
var G__26714 = k;
var G__26715 = l;
var G__26716 = m;
var G__26717 = n;
var G__26718 = o;
var G__26719 = p;
var G__26720 = q;
var G__26721 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26704,G__26705,G__26706,G__26707,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721) : target_fn.call(null,G__26704,G__26705,G__26706,G__26707,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721));
});
var G__27220__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26722 = a;
var G__26723 = b;
var G__26724 = c;
var G__26725 = d;
var G__26726 = e;
var G__26727 = f;
var G__26728 = g;
var G__26729 = h;
var G__26730 = i;
var G__26731 = j;
var G__26732 = k;
var G__26733 = l;
var G__26734 = m;
var G__26735 = n;
var G__26736 = o;
var G__26737 = p;
var G__26738 = q;
var G__26739 = r;
var G__26740 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737,G__26738,G__26739,G__26740) : self__.dispatch_fn.call(null,G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737,G__26738,G__26739,G__26740));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26741 = a;
var G__26742 = b;
var G__26743 = c;
var G__26744 = d;
var G__26745 = e;
var G__26746 = f;
var G__26747 = g;
var G__26748 = h;
var G__26749 = i;
var G__26750 = j;
var G__26751 = k;
var G__26752 = l;
var G__26753 = m;
var G__26754 = n;
var G__26755 = o;
var G__26756 = p;
var G__26757 = q;
var G__26758 = r;
var G__26759 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26741,G__26742,G__26743,G__26744,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752,G__26753,G__26754,G__26755,G__26756,G__26757,G__26758,G__26759) : target_fn.call(null,G__26741,G__26742,G__26743,G__26744,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752,G__26753,G__26754,G__26755,G__26756,G__26757,G__26758,G__26759));
});
var G__27220__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26760 = a;
var G__26761 = b;
var G__26762 = c;
var G__26763 = d;
var G__26764 = e;
var G__26765 = f;
var G__26766 = g;
var G__26767 = h;
var G__26768 = i;
var G__26769 = j;
var G__26770 = k;
var G__26771 = l;
var G__26772 = m;
var G__26773 = n;
var G__26774 = o;
var G__26775 = p;
var G__26776 = q;
var G__26777 = r;
var G__26778 = s;
var G__26779 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26760,G__26761,G__26762,G__26763,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778,G__26779) : self__.dispatch_fn.call(null,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778,G__26779));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26780 = a;
var G__26781 = b;
var G__26782 = c;
var G__26783 = d;
var G__26784 = e;
var G__26785 = f;
var G__26786 = g;
var G__26787 = h;
var G__26788 = i;
var G__26789 = j;
var G__26790 = k;
var G__26791 = l;
var G__26792 = m;
var G__26793 = n;
var G__26794 = o;
var G__26795 = p;
var G__26796 = q;
var G__26797 = r;
var G__26798 = s;
var G__26799 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797,G__26798,G__26799) : target_fn.call(null,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797,G__26798,G__26799));
});
var G__27220__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__27220 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__27220__1.call(this,self__);
case 2:
return G__27220__2.call(this,self__,a);
case 3:
return G__27220__3.call(this,self__,a,b);
case 4:
return G__27220__4.call(this,self__,a,b,c);
case 5:
return G__27220__5.call(this,self__,a,b,c,d);
case 6:
return G__27220__6.call(this,self__,a,b,c,d,e);
case 7:
return G__27220__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__27220__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__27220__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__27220__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__27220__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__27220__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__27220__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__27220__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__27220__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__27220__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__27220__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__27220__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__27220__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__27220__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__27220__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__27220__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27220.cljs$core$IFn$_invoke$arity$1 = G__27220__1;
G__27220.cljs$core$IFn$_invoke$arity$2 = G__27220__2;
G__27220.cljs$core$IFn$_invoke$arity$3 = G__27220__3;
G__27220.cljs$core$IFn$_invoke$arity$4 = G__27220__4;
G__27220.cljs$core$IFn$_invoke$arity$5 = G__27220__5;
G__27220.cljs$core$IFn$_invoke$arity$6 = G__27220__6;
G__27220.cljs$core$IFn$_invoke$arity$7 = G__27220__7;
G__27220.cljs$core$IFn$_invoke$arity$8 = G__27220__8;
G__27220.cljs$core$IFn$_invoke$arity$9 = G__27220__9;
G__27220.cljs$core$IFn$_invoke$arity$10 = G__27220__10;
G__27220.cljs$core$IFn$_invoke$arity$11 = G__27220__11;
G__27220.cljs$core$IFn$_invoke$arity$12 = G__27220__12;
G__27220.cljs$core$IFn$_invoke$arity$13 = G__27220__13;
G__27220.cljs$core$IFn$_invoke$arity$14 = G__27220__14;
G__27220.cljs$core$IFn$_invoke$arity$15 = G__27220__15;
G__27220.cljs$core$IFn$_invoke$arity$16 = G__27220__16;
G__27220.cljs$core$IFn$_invoke$arity$17 = G__27220__17;
G__27220.cljs$core$IFn$_invoke$arity$18 = G__27220__18;
G__27220.cljs$core$IFn$_invoke$arity$19 = G__27220__19;
G__27220.cljs$core$IFn$_invoke$arity$20 = G__27220__20;
G__27220.cljs$core$IFn$_invoke$arity$21 = G__27220__21;
G__27220.cljs$core$IFn$_invoke$arity$22 = G__27220__22;
return G__27220;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args26372){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26372)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26800 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26800) : self__.dispatch_fn.call(null,G__26800));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26801 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26801) : target_fn.call(null,G__26801));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26802 = a;
var G__26803 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26802,G__26803) : self__.dispatch_fn.call(null,G__26802,G__26803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26804 = a;
var G__26805 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26804,G__26805) : target_fn.call(null,G__26804,G__26805));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26806 = a;
var G__26807 = b;
var G__26808 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26806,G__26807,G__26808) : self__.dispatch_fn.call(null,G__26806,G__26807,G__26808));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26809 = a;
var G__26810 = b;
var G__26811 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26809,G__26810,G__26811) : target_fn.call(null,G__26809,G__26810,G__26811));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26812 = a;
var G__26813 = b;
var G__26814 = c;
var G__26815 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26812,G__26813,G__26814,G__26815) : self__.dispatch_fn.call(null,G__26812,G__26813,G__26814,G__26815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26816 = a;
var G__26817 = b;
var G__26818 = c;
var G__26819 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26816,G__26817,G__26818,G__26819) : target_fn.call(null,G__26816,G__26817,G__26818,G__26819));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26820 = a;
var G__26821 = b;
var G__26822 = c;
var G__26823 = d;
var G__26824 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26820,G__26821,G__26822,G__26823,G__26824) : self__.dispatch_fn.call(null,G__26820,G__26821,G__26822,G__26823,G__26824));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26825 = a;
var G__26826 = b;
var G__26827 = c;
var G__26828 = d;
var G__26829 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26825,G__26826,G__26827,G__26828,G__26829) : target_fn.call(null,G__26825,G__26826,G__26827,G__26828,G__26829));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26830 = a;
var G__26831 = b;
var G__26832 = c;
var G__26833 = d;
var G__26834 = e;
var G__26835 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26830,G__26831,G__26832,G__26833,G__26834,G__26835) : self__.dispatch_fn.call(null,G__26830,G__26831,G__26832,G__26833,G__26834,G__26835));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26836 = a;
var G__26837 = b;
var G__26838 = c;
var G__26839 = d;
var G__26840 = e;
var G__26841 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26836,G__26837,G__26838,G__26839,G__26840,G__26841) : target_fn.call(null,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26842 = a;
var G__26843 = b;
var G__26844 = c;
var G__26845 = d;
var G__26846 = e;
var G__26847 = f;
var G__26848 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848) : self__.dispatch_fn.call(null,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26849 = a;
var G__26850 = b;
var G__26851 = c;
var G__26852 = d;
var G__26853 = e;
var G__26854 = f;
var G__26855 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26849,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855) : target_fn.call(null,G__26849,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26856 = a;
var G__26857 = b;
var G__26858 = c;
var G__26859 = d;
var G__26860 = e;
var G__26861 = f;
var G__26862 = g;
var G__26863 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863) : self__.dispatch_fn.call(null,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26864 = a;
var G__26865 = b;
var G__26866 = c;
var G__26867 = d;
var G__26868 = e;
var G__26869 = f;
var G__26870 = g;
var G__26871 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871) : target_fn.call(null,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26872 = a;
var G__26873 = b;
var G__26874 = c;
var G__26875 = d;
var G__26876 = e;
var G__26877 = f;
var G__26878 = g;
var G__26879 = h;
var G__26880 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880) : self__.dispatch_fn.call(null,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26881 = a;
var G__26882 = b;
var G__26883 = c;
var G__26884 = d;
var G__26885 = e;
var G__26886 = f;
var G__26887 = g;
var G__26888 = h;
var G__26889 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887,G__26888,G__26889) : target_fn.call(null,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887,G__26888,G__26889));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26890 = a;
var G__26891 = b;
var G__26892 = c;
var G__26893 = d;
var G__26894 = e;
var G__26895 = f;
var G__26896 = g;
var G__26897 = h;
var G__26898 = i;
var G__26899 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26890,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899) : self__.dispatch_fn.call(null,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26900 = a;
var G__26901 = b;
var G__26902 = c;
var G__26903 = d;
var G__26904 = e;
var G__26905 = f;
var G__26906 = g;
var G__26907 = h;
var G__26908 = i;
var G__26909 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26900,G__26901,G__26902,G__26903,G__26904,G__26905,G__26906,G__26907,G__26908,G__26909) : target_fn.call(null,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905,G__26906,G__26907,G__26908,G__26909));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26910 = a;
var G__26911 = b;
var G__26912 = c;
var G__26913 = d;
var G__26914 = e;
var G__26915 = f;
var G__26916 = g;
var G__26917 = h;
var G__26918 = i;
var G__26919 = j;
var G__26920 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920) : self__.dispatch_fn.call(null,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26921 = a;
var G__26922 = b;
var G__26923 = c;
var G__26924 = d;
var G__26925 = e;
var G__26926 = f;
var G__26927 = g;
var G__26928 = h;
var G__26929 = i;
var G__26930 = j;
var G__26931 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26921,G__26922,G__26923,G__26924,G__26925,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931) : target_fn.call(null,G__26921,G__26922,G__26923,G__26924,G__26925,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26932 = a;
var G__26933 = b;
var G__26934 = c;
var G__26935 = d;
var G__26936 = e;
var G__26937 = f;
var G__26938 = g;
var G__26939 = h;
var G__26940 = i;
var G__26941 = j;
var G__26942 = k;
var G__26943 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943) : self__.dispatch_fn.call(null,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26944 = a;
var G__26945 = b;
var G__26946 = c;
var G__26947 = d;
var G__26948 = e;
var G__26949 = f;
var G__26950 = g;
var G__26951 = h;
var G__26952 = i;
var G__26953 = j;
var G__26954 = k;
var G__26955 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26944,G__26945,G__26946,G__26947,G__26948,G__26949,G__26950,G__26951,G__26952,G__26953,G__26954,G__26955) : target_fn.call(null,G__26944,G__26945,G__26946,G__26947,G__26948,G__26949,G__26950,G__26951,G__26952,G__26953,G__26954,G__26955));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26956 = a;
var G__26957 = b;
var G__26958 = c;
var G__26959 = d;
var G__26960 = e;
var G__26961 = f;
var G__26962 = g;
var G__26963 = h;
var G__26964 = i;
var G__26965 = j;
var G__26966 = k;
var G__26967 = l;
var G__26968 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26956,G__26957,G__26958,G__26959,G__26960,G__26961,G__26962,G__26963,G__26964,G__26965,G__26966,G__26967,G__26968) : self__.dispatch_fn.call(null,G__26956,G__26957,G__26958,G__26959,G__26960,G__26961,G__26962,G__26963,G__26964,G__26965,G__26966,G__26967,G__26968));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26969 = a;
var G__26970 = b;
var G__26971 = c;
var G__26972 = d;
var G__26973 = e;
var G__26974 = f;
var G__26975 = g;
var G__26976 = h;
var G__26977 = i;
var G__26978 = j;
var G__26979 = k;
var G__26980 = l;
var G__26981 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26969,G__26970,G__26971,G__26972,G__26973,G__26974,G__26975,G__26976,G__26977,G__26978,G__26979,G__26980,G__26981) : target_fn.call(null,G__26969,G__26970,G__26971,G__26972,G__26973,G__26974,G__26975,G__26976,G__26977,G__26978,G__26979,G__26980,G__26981));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26982 = a;
var G__26983 = b;
var G__26984 = c;
var G__26985 = d;
var G__26986 = e;
var G__26987 = f;
var G__26988 = g;
var G__26989 = h;
var G__26990 = i;
var G__26991 = j;
var G__26992 = k;
var G__26993 = l;
var G__26994 = m;
var G__26995 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26982,G__26983,G__26984,G__26985,G__26986,G__26987,G__26988,G__26989,G__26990,G__26991,G__26992,G__26993,G__26994,G__26995) : self__.dispatch_fn.call(null,G__26982,G__26983,G__26984,G__26985,G__26986,G__26987,G__26988,G__26989,G__26990,G__26991,G__26992,G__26993,G__26994,G__26995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26996 = a;
var G__26997 = b;
var G__26998 = c;
var G__26999 = d;
var G__27000 = e;
var G__27001 = f;
var G__27002 = g;
var G__27003 = h;
var G__27004 = i;
var G__27005 = j;
var G__27006 = k;
var G__27007 = l;
var G__27008 = m;
var G__27009 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26996,G__26997,G__26998,G__26999,G__27000,G__27001,G__27002,G__27003,G__27004,G__27005,G__27006,G__27007,G__27008,G__27009) : target_fn.call(null,G__26996,G__26997,G__26998,G__26999,G__27000,G__27001,G__27002,G__27003,G__27004,G__27005,G__27006,G__27007,G__27008,G__27009));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27010 = a;
var G__27011 = b;
var G__27012 = c;
var G__27013 = d;
var G__27014 = e;
var G__27015 = f;
var G__27016 = g;
var G__27017 = h;
var G__27018 = i;
var G__27019 = j;
var G__27020 = k;
var G__27021 = l;
var G__27022 = m;
var G__27023 = n;
var G__27024 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__27010,G__27011,G__27012,G__27013,G__27014,G__27015,G__27016,G__27017,G__27018,G__27019,G__27020,G__27021,G__27022,G__27023,G__27024) : self__.dispatch_fn.call(null,G__27010,G__27011,G__27012,G__27013,G__27014,G__27015,G__27016,G__27017,G__27018,G__27019,G__27020,G__27021,G__27022,G__27023,G__27024));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27025 = a;
var G__27026 = b;
var G__27027 = c;
var G__27028 = d;
var G__27029 = e;
var G__27030 = f;
var G__27031 = g;
var G__27032 = h;
var G__27033 = i;
var G__27034 = j;
var G__27035 = k;
var G__27036 = l;
var G__27037 = m;
var G__27038 = n;
var G__27039 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__27025,G__27026,G__27027,G__27028,G__27029,G__27030,G__27031,G__27032,G__27033,G__27034,G__27035,G__27036,G__27037,G__27038,G__27039) : target_fn.call(null,G__27025,G__27026,G__27027,G__27028,G__27029,G__27030,G__27031,G__27032,G__27033,G__27034,G__27035,G__27036,G__27037,G__27038,G__27039));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27040 = a;
var G__27041 = b;
var G__27042 = c;
var G__27043 = d;
var G__27044 = e;
var G__27045 = f;
var G__27046 = g;
var G__27047 = h;
var G__27048 = i;
var G__27049 = j;
var G__27050 = k;
var G__27051 = l;
var G__27052 = m;
var G__27053 = n;
var G__27054 = o;
var G__27055 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__27040,G__27041,G__27042,G__27043,G__27044,G__27045,G__27046,G__27047,G__27048,G__27049,G__27050,G__27051,G__27052,G__27053,G__27054,G__27055) : self__.dispatch_fn.call(null,G__27040,G__27041,G__27042,G__27043,G__27044,G__27045,G__27046,G__27047,G__27048,G__27049,G__27050,G__27051,G__27052,G__27053,G__27054,G__27055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27056 = a;
var G__27057 = b;
var G__27058 = c;
var G__27059 = d;
var G__27060 = e;
var G__27061 = f;
var G__27062 = g;
var G__27063 = h;
var G__27064 = i;
var G__27065 = j;
var G__27066 = k;
var G__27067 = l;
var G__27068 = m;
var G__27069 = n;
var G__27070 = o;
var G__27071 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__27056,G__27057,G__27058,G__27059,G__27060,G__27061,G__27062,G__27063,G__27064,G__27065,G__27066,G__27067,G__27068,G__27069,G__27070,G__27071) : target_fn.call(null,G__27056,G__27057,G__27058,G__27059,G__27060,G__27061,G__27062,G__27063,G__27064,G__27065,G__27066,G__27067,G__27068,G__27069,G__27070,G__27071));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27072 = a;
var G__27073 = b;
var G__27074 = c;
var G__27075 = d;
var G__27076 = e;
var G__27077 = f;
var G__27078 = g;
var G__27079 = h;
var G__27080 = i;
var G__27081 = j;
var G__27082 = k;
var G__27083 = l;
var G__27084 = m;
var G__27085 = n;
var G__27086 = o;
var G__27087 = p;
var G__27088 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__27072,G__27073,G__27074,G__27075,G__27076,G__27077,G__27078,G__27079,G__27080,G__27081,G__27082,G__27083,G__27084,G__27085,G__27086,G__27087,G__27088) : self__.dispatch_fn.call(null,G__27072,G__27073,G__27074,G__27075,G__27076,G__27077,G__27078,G__27079,G__27080,G__27081,G__27082,G__27083,G__27084,G__27085,G__27086,G__27087,G__27088));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27089 = a;
var G__27090 = b;
var G__27091 = c;
var G__27092 = d;
var G__27093 = e;
var G__27094 = f;
var G__27095 = g;
var G__27096 = h;
var G__27097 = i;
var G__27098 = j;
var G__27099 = k;
var G__27100 = l;
var G__27101 = m;
var G__27102 = n;
var G__27103 = o;
var G__27104 = p;
var G__27105 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__27089,G__27090,G__27091,G__27092,G__27093,G__27094,G__27095,G__27096,G__27097,G__27098,G__27099,G__27100,G__27101,G__27102,G__27103,G__27104,G__27105) : target_fn.call(null,G__27089,G__27090,G__27091,G__27092,G__27093,G__27094,G__27095,G__27096,G__27097,G__27098,G__27099,G__27100,G__27101,G__27102,G__27103,G__27104,G__27105));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27106 = a;
var G__27107 = b;
var G__27108 = c;
var G__27109 = d;
var G__27110 = e;
var G__27111 = f;
var G__27112 = g;
var G__27113 = h;
var G__27114 = i;
var G__27115 = j;
var G__27116 = k;
var G__27117 = l;
var G__27118 = m;
var G__27119 = n;
var G__27120 = o;
var G__27121 = p;
var G__27122 = q;
var G__27123 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__27106,G__27107,G__27108,G__27109,G__27110,G__27111,G__27112,G__27113,G__27114,G__27115,G__27116,G__27117,G__27118,G__27119,G__27120,G__27121,G__27122,G__27123) : self__.dispatch_fn.call(null,G__27106,G__27107,G__27108,G__27109,G__27110,G__27111,G__27112,G__27113,G__27114,G__27115,G__27116,G__27117,G__27118,G__27119,G__27120,G__27121,G__27122,G__27123));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27124 = a;
var G__27125 = b;
var G__27126 = c;
var G__27127 = d;
var G__27128 = e;
var G__27129 = f;
var G__27130 = g;
var G__27131 = h;
var G__27132 = i;
var G__27133 = j;
var G__27134 = k;
var G__27135 = l;
var G__27136 = m;
var G__27137 = n;
var G__27138 = o;
var G__27139 = p;
var G__27140 = q;
var G__27141 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__27124,G__27125,G__27126,G__27127,G__27128,G__27129,G__27130,G__27131,G__27132,G__27133,G__27134,G__27135,G__27136,G__27137,G__27138,G__27139,G__27140,G__27141) : target_fn.call(null,G__27124,G__27125,G__27126,G__27127,G__27128,G__27129,G__27130,G__27131,G__27132,G__27133,G__27134,G__27135,G__27136,G__27137,G__27138,G__27139,G__27140,G__27141));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27142 = a;
var G__27143 = b;
var G__27144 = c;
var G__27145 = d;
var G__27146 = e;
var G__27147 = f;
var G__27148 = g;
var G__27149 = h;
var G__27150 = i;
var G__27151 = j;
var G__27152 = k;
var G__27153 = l;
var G__27154 = m;
var G__27155 = n;
var G__27156 = o;
var G__27157 = p;
var G__27158 = q;
var G__27159 = r;
var G__27160 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__27142,G__27143,G__27144,G__27145,G__27146,G__27147,G__27148,G__27149,G__27150,G__27151,G__27152,G__27153,G__27154,G__27155,G__27156,G__27157,G__27158,G__27159,G__27160) : self__.dispatch_fn.call(null,G__27142,G__27143,G__27144,G__27145,G__27146,G__27147,G__27148,G__27149,G__27150,G__27151,G__27152,G__27153,G__27154,G__27155,G__27156,G__27157,G__27158,G__27159,G__27160));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27161 = a;
var G__27162 = b;
var G__27163 = c;
var G__27164 = d;
var G__27165 = e;
var G__27166 = f;
var G__27167 = g;
var G__27168 = h;
var G__27169 = i;
var G__27170 = j;
var G__27171 = k;
var G__27172 = l;
var G__27173 = m;
var G__27174 = n;
var G__27175 = o;
var G__27176 = p;
var G__27177 = q;
var G__27178 = r;
var G__27179 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__27161,G__27162,G__27163,G__27164,G__27165,G__27166,G__27167,G__27168,G__27169,G__27170,G__27171,G__27172,G__27173,G__27174,G__27175,G__27176,G__27177,G__27178,G__27179) : target_fn.call(null,G__27161,G__27162,G__27163,G__27164,G__27165,G__27166,G__27167,G__27168,G__27169,G__27170,G__27171,G__27172,G__27173,G__27174,G__27175,G__27176,G__27177,G__27178,G__27179));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27180 = a;
var G__27181 = b;
var G__27182 = c;
var G__27183 = d;
var G__27184 = e;
var G__27185 = f;
var G__27186 = g;
var G__27187 = h;
var G__27188 = i;
var G__27189 = j;
var G__27190 = k;
var G__27191 = l;
var G__27192 = m;
var G__27193 = n;
var G__27194 = o;
var G__27195 = p;
var G__27196 = q;
var G__27197 = r;
var G__27198 = s;
var G__27199 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__27180,G__27181,G__27182,G__27183,G__27184,G__27185,G__27186,G__27187,G__27188,G__27189,G__27190,G__27191,G__27192,G__27193,G__27194,G__27195,G__27196,G__27197,G__27198,G__27199) : self__.dispatch_fn.call(null,G__27180,G__27181,G__27182,G__27183,G__27184,G__27185,G__27186,G__27187,G__27188,G__27189,G__27190,G__27191,G__27192,G__27193,G__27194,G__27195,G__27196,G__27197,G__27198,G__27199));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27200 = a;
var G__27201 = b;
var G__27202 = c;
var G__27203 = d;
var G__27204 = e;
var G__27205 = f;
var G__27206 = g;
var G__27207 = h;
var G__27208 = i;
var G__27209 = j;
var G__27210 = k;
var G__27211 = l;
var G__27212 = m;
var G__27213 = n;
var G__27214 = o;
var G__27215 = p;
var G__27216 = q;
var G__27217 = r;
var G__27218 = s;
var G__27219 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__27200,G__27201,G__27202,G__27203,G__27204,G__27205,G__27206,G__27207,G__27208,G__27209,G__27210,G__27211,G__27212,G__27213,G__27214,G__27215,G__27216,G__27217,G__27218,G__27219) : target_fn.call(null,G__27200,G__27201,G__27202,G__27203,G__27204,G__27205,G__27206,G__27207,G__27208,G__27209,G__27210,G__27211,G__27212,G__27213,G__27214,G__27215,G__27216,G__27217,G__27218,G__27219));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__27221 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__27221);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13360__auto__,writer__13361__auto__,opt__13362__auto__){
return cljs.core._write(writer__13361__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__27226 = msg;
return Error(G__27226);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__27231 = x;
var G__27232 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__27231,G__27232) : pred.call(null,G__27231,G__27232));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__27233 = y;
var G__27234 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__27233,G__27234) : pred.call(null,G__27233,G__27234));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1429705617909